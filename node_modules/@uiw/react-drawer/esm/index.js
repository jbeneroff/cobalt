import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "className", "style", "placement", "size", "title", "footer", "icon", "isCloseButtonShown", "bodyProps", "timeout", "isOpen", "maskClosable"];
import React, { useMemo } from 'react';
import Overlay from '@uiw/react-overlay';
import Icon from '@uiw/react-icon';
import Button from '@uiw/react-button';
import "./style/index.css";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export default (function (props) {
  if (props === void 0) {
    props = {};
  }

  var {
    prefixCls = 'w-drawer',
    className,
    style,
    placement = 'right',
    size = 260,
    title,
    footer,
    icon,
    isCloseButtonShown = true,
    bodyProps,
    timeout = 300,
    isOpen = false,
    maskClosable = true
  } = props,
      overlayProps = _objectWithoutPropertiesLoose(props, _excluded);

  var cls = [className, prefixCls, placement].filter(Boolean).join(' ').trim();
  var bodyCls = [bodyProps ? bodyProps.className : null, prefixCls ? prefixCls + "-body-inner" : null].filter(Boolean).join(' ').trim();

  var styl = _extends({}, style, {
    [/^(top|bottom)$/.test(placement) ? 'height' : 'width']: size
  });

  var footerView = useMemo(() => footer ? /*#__PURE__*/_jsx("div", {
    className: prefixCls + "-footer",
    children: footer
  }) : null, [footer]);
  var iconView = useMemo(() => icon ? /*#__PURE__*/_jsx(Icon, {
    type: icon
  }) : null, [icon]);
  var titleView = useMemo(() => title ? /*#__PURE__*/_jsx("h4", {
    children: title
  }) : null, [title]);
  return /*#__PURE__*/_jsx(Overlay, _extends({
    className: cls,
    timeout: timeout,
    isOpen: isOpen,
    maskClosable: maskClosable
  }, overlayProps, {
    children: /*#__PURE__*/_jsxs("div", {
      className: prefixCls + "-wrapper",
      style: styl,
      children: [(title || icon) && /*#__PURE__*/_jsxs("div", {
        className: prefixCls + "-header",
        children: [iconView, titleView, title && isCloseButtonShown && /*#__PURE__*/_jsx(Button, {
          basic: true,
          onClick: props.onClose,
          icon: "close",
          type: "light"
        })]
      }), /*#__PURE__*/_jsx("div", {
        className: prefixCls + "-body",
        children: /*#__PURE__*/_jsx("div", _extends({}, bodyProps, {
          className: bodyCls,
          children: props.children
        }))
      }), footerView]
    })
  }));
});
//# sourceMappingURL=index.js.map