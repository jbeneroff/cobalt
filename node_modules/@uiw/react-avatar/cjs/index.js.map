{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "shape",
    "size",
    "className",
    "src",
    "alt",
    "icon",
    "onError",
    "noop",
    "resetProps",
    "children",
    "isImgExist",
    "setIsImgExist",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "evn",
    "errorFlag",
    "undefined",
    "isValidElement"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;4BAiBeA,kBAAMC,UAAN,CAA+C,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5E,yBAUID,KAVJ,CACEE,SADF;AAAA,MACEA,SADF,iCACc,UADd;AAAA,qBAUIF,KAVJ,CAEEG,KAFF;AAAA,MAEEA,KAFF,6BAEU,QAFV;AAAA,oBAUIH,KAVJ,CAGEI,IAHF;AAAA,MAGEA,IAHF,4BAGS,SAHT;AAAA,MAIEC,SAJF,GAUIL,KAVJ,CAIEK,SAJF;AAAA,MAKEC,GALF,GAUIN,KAVJ,CAKEM,GALF;AAAA,MAMEC,GANF,GAUIP,KAVJ,CAMEO,GANF;AAAA,MAOEC,IAPF,GAUIR,KAVJ,CAOEQ,IAPF;AAAA,uBAUIR,KAVJ,CAQES,OARF;AAAA,MAQEA,QARF,+BAQYC,WARZ;AAAA,MASKC,UATL,6CAUIX,KAVJ;;AAWA,MAAIY,QAAQ,GAAGZ,KAAK,CAACY,QAArB;;AACA,kBAAoC,qBAAS,IAAT,CAApC;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,GAAG,GAAG,CACVb,SADU,EAEVG,SAFU,EAGVD,IAAI,aAAMF,SAAN,cAAmBE,IAAnB,IAA4B,IAHtB,EAIVD,KAAK,aAAMD,SAAN,cAAmBC,KAAnB,IAA6B,IAJxB,EAKVG,GAAG,aAAMJ,SAAN,cAA0B,IALnB,EAOTc,MAPS,CAOFC,OAPE,EAQTC,IARS,CAQJ,GARI,EASTC,IATS,EAAZ;AAWA,wBAAU,YAAM;AACdL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD,EAEG,CAACd,KAAK,CAACM,GAAP,CAFH;;AAIA,MAAIO,UAAU,IAAIP,GAAlB,EAAuB;AACrBM,IAAAA,QAAQ,gBACN;AACE,MAAA,GAAG,EAAEN,GADP;AAEE,MAAA,GAAG,EAAEC,GAFP;AAGE,MAAA,OAAO,EAAE,iBAACa,GAAD,EAAS;AAChB,YAAMC,SAAS,GAAGZ,QAAO,GAAGA,QAAO,CAACW,GAAD,CAAV,GAAkBE,SAA3C;;AACA,YAAID,SAAS,KAAK,KAAlB,EAAyB;AACvBP,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF;AARH,MADF;AAYD,GAbD,MAaO,IAAIN,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AAC3CI,IAAAA,QAAQ,gBAAG,qBAAC,qBAAD;AAAM,MAAA,IAAI,EAAEJ;AAAZ,MAAX;AACD,GAFM,MAEA,IAAIA,IAAI,iBAAIV,kBAAMyB,cAAN,CAAqBf,IAArB,CAAZ,EAAwC;AAC7CI,IAAAA,QAAQ,GAAGJ,IAAX;AACD;;AACD,sBACE,+FAAUG,UAAV;AAAsB,IAAA,SAAS,EAAEI,GAAjC;AAAsC,IAAA,GAAG,EAAEd,GAA3C;AAAA,cACGW;AADH,KADF;AAKD,CApDc,C",
  "sourcesContent": [
    "import React from 'react';\nimport Icon from '@uiw/react-icon';\nimport { HTMLSpanProps, noop } from '@uiw/utils';\nimport './style/index.less';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport interface AvatarProps extends HTMLSpanProps {\n  style?: React.CSSProperties;\n  className?: string;\n  prefixCls?: string;\n  icon?: JSX.Element | string | false | null;\n  alt?: string;\n  src?: string;\n  size?: 'large' | 'default' | 'small' | 'mini';\n  shape?: 'square' | 'circle';\n  onError?: (event: React.SyntheticEvent<HTMLImageElement, Event>) => boolean;\n}\n\nexport default React.forwardRef<HTMLSpanElement, AvatarProps>((props, ref) => {\n  const {\n    prefixCls = 'w-avatar',\n    shape = 'circle',\n    size = 'default',\n    className,\n    src,\n    alt,\n    icon,\n    onError = noop,\n    ...resetProps\n  } = props;\n  let children = props.children;\n  const [isImgExist, setIsImgExist] = useState(true);\n  const cls = [\n    prefixCls,\n    className,\n    size ? `${prefixCls}-${size}` : null,\n    shape ? `${prefixCls}-${shape}` : null,\n    src ? `${prefixCls}-image` : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  useEffect(() => {\n    setIsImgExist(true);\n  }, [props.src]);\n\n  if (isImgExist && src) {\n    children = (\n      <img\n        src={src}\n        alt={alt}\n        onError={(evn) => {\n          const errorFlag = onError ? onError(evn) : undefined;\n          if (errorFlag !== false) {\n            setIsImgExist(false);\n          }\n        }}\n      />\n    );\n  } else if (icon && typeof icon === 'string') {\n    children = <Icon type={icon} />;\n  } else if (icon && React.isValidElement(icon)) {\n    children = icon;\n  }\n  return (\n    <span {...resetProps} className={cls} ref={ref}>\n      {children}\n    </span>\n  );\n});\n"
  ]
}