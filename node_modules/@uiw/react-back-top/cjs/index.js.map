{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "content",
    "children",
    "offsetTop",
    "fixed",
    "speed",
    "showBelow",
    "clickable",
    "other",
    "topShowBelow",
    "percent",
    "setPercent",
    "current",
    "setCurrent",
    "visible",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "window",
    "addEventListener",
    "onScroll",
    "removeEventListener",
    "scrollToTop"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;4BAoBeA,kBAAMC,UAAN,CAA+C,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5E,yBAWID,KAXJ,CACEE,SADF;AAAA,MACEA,SADF,iCACc,YADd;AAAA,MAEEC,SAFF,GAWIH,KAXJ,CAEEG,SAFF;AAAA,MAGEC,OAHF,GAWIJ,KAXJ,CAGEI,OAHF;AAAA,MAIEC,QAJF,GAWIL,KAXJ,CAIEK,QAJF;AAAA,yBAWIL,KAXJ,CAKEM,SALF;AAAA,MAKEA,SALF,iCAKc,CALd;AAAA,qBAWIN,KAXJ,CAMEO,KANF;AAAA,MAMEA,KANF,6BAMU,IANV;AAAA,qBAWIP,KAXJ,CAOEQ,KAPF;AAAA,MAOEA,KAPF,6BAOU,GAPV;AAAA,yBAWIR,KAXJ,CAQES,SARF;AAAA,MAQEA,SARF,iCAQc,CARd;AAAA,yBAWIT,KAXJ,CASEU,SATF;AAAA,MASEA,SATF,iCASc,IATd;AAAA,MAUKC,KAVL,6CAWIX,KAXJ;AAYA,MAAMY,YAAY,GAAG,CAACL,KAAD,GAAS,CAAT,GAAaE,SAAS,IAAI,CAA/C;;AACA,kBAA8B,qBAAS,CAAT,CAA9B;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8B,qBAAS,CAAT,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,OAAO,GAAGJ,OAAO,IAAID,YAA3B;AACA,MAAMM,GAAG,GAAG,CACVhB,SADU,EAEVC,SAFU,EAGV,CAACI,KAAD,GAAS,UAAT,GAAsB,IAHZ,EAIVU,OAAO,aAAMf,SAAN,aAAyB,IAJtB,EAKV,CAACe,OAAD,aAAcf,SAAd,aAAiC,IALvB,EAOTiB,MAPS,CAOFC,OAPE,EAQTC,IARS,CAQJ,GARI,EASTC,IATS,EAAZ;AAUA,wBAAU,YAAM;AACdC,IAAAA,MAAM,IAAIA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,QAAlC,CAAV;AACA,WAAO,YAAY;AACjBF,MAAAA,MAAM,IAAIA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,QAArC,CAAV;AACD,KAFD;AAGD,GALD;;AAMA,WAASA,QAAT,GAAoB;AAClBX,IAAAA,UAAU,CAAC,6BAAiBR,SAAjB,CAAD,CAAV;AACAU,IAAAA,UAAU,CAAC,0BAAD,CAAV;AACD;;AACD,WAASW,WAAT,GAAuB;AACrB,QACE,OAAOrB,SAAP,KAAqB,QAArB,IACA,OAAOE,KAAP,KAAiB,QADjB,IAEA,OAAOO,OAAP,KAAmB,QAHrB,EAIE;AACA,kCAAgBT,SAAhB,EAA2BE,KAA3B,EAAkCO,OAAlC;AACD;AACF;;AACD,sBACE;AACE,IAAA,OAAO,EAAE;AAAA,aAAML,SAAS,IAAIiB,WAAW,EAA9B;AAAA,KADX;AAEE,IAAA,SAAS,EAAET;AAFb,KAGMP,KAHN;AAIE,IAAA,GAAG,EAAEV,GAJP;AAAA,eAMGG,OANH,EAOG,OAAOC,QAAP,KAAoB,UAApB,GACGA,QADH,GAEGA,QAAQ,CAAC;AAAEQ,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,OAAO,EAAPA,OAAX;AAAoBY,MAAAA,WAAW,EAAEA;AAAjC,KAAD,CATd;AAAA,KADF;AAaD,CA3Dc,C",
  "sourcesContent": [
    "import React, { useState, useEffect } from 'react';\nimport { IProps, HTMLDivProps } from '@uiw/utils';\nimport { getScrollPercent, getScrollTop, scrollToAnimate } from './utils';\nimport './style/index.less';\n\nexport interface BackTopProps extends IProps, HTMLDivProps {\n  offsetTop?: number;\n  clickable?: boolean;\n  content?: JSX.Element | string;\n  fixed?: boolean;\n  /**\n   * 滚动距离多少时显示组件\n   */\n  showBelow?: number;\n  speed?: number;\n}\n\nexport interface IBackTopState {\n  percent: number;\n  current: number;\n}\n\nexport default React.forwardRef<HTMLDivElement, BackTopProps>((props, ref) => {\n  const {\n    prefixCls = 'w-back-top',\n    className,\n    content,\n    children,\n    offsetTop = 0,\n    fixed = true,\n    speed = 100,\n    showBelow = 1,\n    clickable = true,\n    ...other\n  } = props;\n  const topShowBelow = !fixed ? 0 : showBelow || 0;\n  const [percent, setPercent] = useState(0);\n  const [current, setCurrent] = useState(0);\n  const visible = percent >= topShowBelow;\n  const cls = [\n    prefixCls,\n    className,\n    !fixed ? 'no-fixed' : null,\n    visible ? `${prefixCls}-show` : null,\n    !visible ? `${prefixCls}-hide` : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  useEffect(() => {\n    window && window.addEventListener('scroll', onScroll);\n    return function () {\n      window && window.removeEventListener('scroll', onScroll);\n    };\n  });\n  function onScroll() {\n    setPercent(getScrollPercent(offsetTop));\n    setCurrent(getScrollTop());\n  }\n  function scrollToTop() {\n    if (\n      typeof offsetTop === 'number' &&\n      typeof speed === 'number' &&\n      typeof current === 'number'\n    ) {\n      scrollToAnimate(offsetTop, speed, current);\n    }\n  }\n  return (\n    <div\n      onClick={() => clickable && scrollToTop()}\n      className={cls}\n      {...other}\n      ref={ref}\n    >\n      {content}\n      {typeof children !== 'function'\n        ? children\n        : children({ percent, current, scrollToTop: scrollToTop })}\n    </div>\n  );\n});\n"
  ]
}