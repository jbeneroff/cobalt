import React from 'react';
/**
 * Alias for all valid HTML props for `<div>` element.
 * Does not include React's `ref` or `key`.
 */
export declare type HTMLDivProps = React.HTMLAttributes<HTMLDivElement>;
export declare type HTMLSpanProps = React.HTMLAttributes<HTMLSpanElement>;
/**
 * Alias for all valid HTML props for `<a>` element.
 * Does not include React's `ref` or `key`.
 */
export declare type HTMLAnchorProps = React.AnchorHTMLAttributes<HTMLAnchorElement>;
/**
 * Alias for all valid HTML props for `<input>` element.
 * Does not include React's `ref` or `key`.
 */
export declare type HTMLInputProps = React.InputHTMLAttributes<HTMLInputElement>;
/**
 * Alias for all valid HTML props for `<textarea>` element.
 * Does not include React's `ref` or `key`.
 */
export declare type HTMLTextProps = React.TextareaHTMLAttributes<HTMLTextAreaElement>;
/**
 * Alias for all valid HTML props for `<button>` element.
 * Does not include React's `ref` or `key`.
 */
export declare type HTMLButtonProps = React.HTMLProps<HTMLButtonElement>;
/**
 * Alias for all valid HTML props for `<li>` element.
 * Does not include React's `ref` or `key`.
 */
export declare type HTMLLiProps = React.LiHTMLAttributes<HTMLLIElement>;
/**
 * Alias for all valid HTML props for `<li>` element.
 * Does not include React's `ref` or `key`.
 */
export declare type HTMLUlProps = React.LiHTMLAttributes<HTMLUListElement>;
export declare type AnchorProps = 'download' | 'href' | 'hrefLang' | 'media' | 'ping' | 'rel' | 'target' | 'type' | 'referrerPolicy';
export interface IProps {
    style?: React.CSSProperties;
    className?: string;
    prefixCls?: string;
}
