{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useMemo",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "title",
    "extra",
    "footer",
    "bordered",
    "noHover",
    "active",
    "bodyStyle",
    "bodyClassName",
    "children",
    "resetProps",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA;;;AAaA,4BAAeD,KAAK,CAACE,UAAN,CAA4C,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzE,MAAM;AACJC,IAAAA,SAAS,GAAG,QADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,QAAQ,GAAG,IANP;AAOJC,IAAAA,OAAO,GAAG,KAPN;AAQJC,IAAAA,MAAM,GAAG,KARL;AASJC,IAAAA,SATI;AAUJC,IAAAA,aAVI;AAWJC,IAAAA;AAXI,MAaFZ,KAbJ;AAAA,MAYKa,UAZL,iCAaIb,KAbJ;;AAcA,MAAMc,GAAG,GAAGhB,OAAO,CACjB,MACE,CACEI,SADF,EAEEC,SAFF,EAGEI,QAAQ,GAAML,SAAN,iBAA6B,IAHvC,EAIEM,OAAO,GAAMN,SAAN,iBAA6B,IAJtC,EAKEO,MAAM,GAAG,QAAH,GAAc,IALtB,EAOGM,MAPH,CAOUC,OAPV,EAQGC,IARH,CAQQ,GARR,EASGC,IATH,EAFe,EAYjB,CAAChB,SAAD,EAAYC,SAAZ,EAAuBI,QAAvB,EAAiCC,OAAjC,CAZiB,CAAnB;AAeA,sBACE,0BAASK,UAAT;AAAqB,IAAA,SAAS,EAAEC,GAAhC;AAAqC,IAAA,GAAG,EAAEb,GAA1C;AAAA,eACG,CAACG,KAAK,IAAIC,KAAV,kBACC;AAAK,MAAA,SAAS,EAAKH,SAAL,UAAd;AAAA,iBACGE,KAAK,iBAAI;AAAK,QAAA,SAAS,EAAKF,SAAL,gBAAd;AAAA,kBAA4CE;AAA5C,QADZ,EAEGC,KAAK,iBAAI;AAAK,QAAA,SAAS,EAAKH,SAAL,WAAd;AAAA,kBAAuCG;AAAvC,QAFZ;AAAA,MAFJ,EAOGO,QAAQ,iBACP;AACE,MAAA,SAAS,EAAE,CAAIV,SAAJ,YAAsBS,aAAtB,EACRI,MADQ,CACDC,OADC,EAERC,IAFQ,CAEH,GAFG,EAGRC,IAHQ,EADb;AAKE,MAAA,KAAK,EAAER,SALT;AAAA,gBAOGE;AAPH,MARJ,EAkBGN,MAAM,iBAAI;AAAK,MAAA,SAAS,EAAKJ,SAAL,YAAd;AAAA,gBAAwCI;AAAxC,MAlBb;AAAA,KADF;AAsBD,CApDc,CAAf",
  "sourcesContent": [
    "import React, { useMemo } from 'react';\nimport { IProps, HTMLDivProps } from '@uiw/utils';\nimport './style/index.less';\n\nexport interface CardProps extends IProps, Omit<HTMLDivProps, 'title'> {\n  active?: boolean;\n  bordered?: boolean;\n  bodyStyle?: React.CSSProperties;\n  bodyClassName?: string;\n  title?: React.ReactNode;\n  noHover?: boolean;\n  extra?: React.ReactNode;\n  footer?: React.ReactNode;\n}\n\nexport default React.forwardRef<HTMLDivElement, CardProps>((props, ref) => {\n  const {\n    prefixCls = 'w-card',\n    className,\n    title,\n    extra,\n    footer,\n    bordered = true,\n    noHover = false,\n    active = false,\n    bodyStyle,\n    bodyClassName,\n    children,\n    ...resetProps\n  } = props;\n  const cls = useMemo(\n    () =>\n      [\n        prefixCls,\n        className,\n        bordered ? `${prefixCls}-bordered` : null,\n        noHover ? `${prefixCls}-no-hover` : null,\n        active ? 'active' : null,\n      ]\n        .filter(Boolean)\n        .join(' ')\n        .trim(),\n    [prefixCls, className, bordered, noHover],\n  );\n\n  return (\n    <div {...resetProps} className={cls} ref={ref}>\n      {(title || extra) && (\n        <div className={`${prefixCls}-head`}>\n          {title && <div className={`${prefixCls}-head-title`}>{title}</div>}\n          {extra && <div className={`${prefixCls}-extra`}>{extra}</div>}\n        </div>\n      )}\n      {children && (\n        <div\n          className={[`${prefixCls}-body`, bodyClassName]\n            .filter(Boolean)\n            .join(' ')\n            .trim()}\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n      )}\n      {footer && <div className={`${prefixCls}-footer`}>{footer}</div>}\n    </div>\n  );\n});\n"
  ]
}