{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "Icon",
    "noop",
    "useState",
    "useEffect",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "shape",
    "size",
    "className",
    "src",
    "alt",
    "icon",
    "onError",
    "resetProps",
    "children",
    "isImgExist",
    "setIsImgExist",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "evn",
    "errorFlag",
    "undefined",
    "isValidElement"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAAwBC,IAAxB,QAAoC,YAApC;AACA;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAcA,4BAAeJ,KAAK,CAACK,UAAN,CAA+C,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5E,MAAM;AACJC,IAAAA,SAAS,GAAG,UADR;AAEJC,IAAAA,KAAK,GAAG,QAFJ;AAGJC,IAAAA,IAAI,GAAG,SAHH;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,GALI;AAMJC,IAAAA,GANI;AAOJC,IAAAA,IAPI;AAQJC,IAAAA,OAAO,EAAPA,QAAO,GAAGb;AARN,MAUFI,KAVJ;AAAA,MASKU,UATL,iCAUIV,KAVJ;;AAWA,MAAIW,QAAQ,GAAGX,KAAK,CAACW,QAArB;AACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,IAAD,CAA5C;AACA,MAAMiB,GAAG,GAAG,CACVZ,SADU,EAEVG,SAFU,EAGVD,IAAI,GAAMF,SAAN,SAAmBE,IAAnB,GAA4B,IAHtB,EAIVD,KAAK,GAAMD,SAAN,SAAmBC,KAAnB,GAA6B,IAJxB,EAKVG,GAAG,GAAMJ,SAAN,cAA0B,IALnB,EAOTa,MAPS,CAOFC,OAPE,EAQTC,IARS,CAQJ,GARI,EASTC,IATS,EAAZ;AAWApB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFQ,EAEN,CAACb,KAAK,CAACM,GAAP,CAFM,CAAT;;AAIA,MAAIM,UAAU,IAAIN,GAAlB,EAAuB;AACrBK,IAAAA,QAAQ,gBACN;AACE,MAAA,GAAG,EAAEL,GADP;AAEE,MAAA,GAAG,EAAEC,GAFP;AAGE,MAAA,OAAO,EAAGY,GAAD,IAAS;AAChB,YAAMC,SAAS,GAAGX,QAAO,GAAGA,QAAO,CAACU,GAAD,CAAV,GAAkBE,SAA3C;;AACA,YAAID,SAAS,KAAK,KAAlB,EAAyB;AACvBP,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF;AARH,MADF;AAYD,GAbD,MAaO,IAAIL,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AAC3CG,IAAAA,QAAQ,gBAAG,KAAC,IAAD;AAAM,MAAA,IAAI,EAAEH;AAAZ,MAAX;AACD,GAFM,MAEA,IAAIA,IAAI,iBAAId,KAAK,CAAC4B,cAAN,CAAqBd,IAArB,CAAZ,EAAwC;AAC7CG,IAAAA,QAAQ,GAAGH,IAAX;AACD;;AACD,sBACE,0BAAUE,UAAV;AAAsB,IAAA,SAAS,EAAEI,GAAjC;AAAsC,IAAA,GAAG,EAAEb,GAA3C;AAAA,cACGU;AADH,KADF;AAKD,CApDc,CAAf",
  "sourcesContent": [
    "import React from 'react';\nimport Icon from '@uiw/react-icon';\nimport { HTMLSpanProps, noop } from '@uiw/utils';\nimport './style/index.less';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport interface AvatarProps extends HTMLSpanProps {\n  style?: React.CSSProperties;\n  className?: string;\n  prefixCls?: string;\n  icon?: JSX.Element | string | false | null;\n  alt?: string;\n  src?: string;\n  size?: 'large' | 'default' | 'small' | 'mini';\n  shape?: 'square' | 'circle';\n  onError?: (event: React.SyntheticEvent<HTMLImageElement, Event>) => boolean;\n}\n\nexport default React.forwardRef<HTMLSpanElement, AvatarProps>((props, ref) => {\n  const {\n    prefixCls = 'w-avatar',\n    shape = 'circle',\n    size = 'default',\n    className,\n    src,\n    alt,\n    icon,\n    onError = noop,\n    ...resetProps\n  } = props;\n  let children = props.children;\n  const [isImgExist, setIsImgExist] = useState(true);\n  const cls = [\n    prefixCls,\n    className,\n    size ? `${prefixCls}-${size}` : null,\n    shape ? `${prefixCls}-${shape}` : null,\n    src ? `${prefixCls}-image` : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  useEffect(() => {\n    setIsImgExist(true);\n  }, [props.src]);\n\n  if (isImgExist && src) {\n    children = (\n      <img\n        src={src}\n        alt={alt}\n        onError={(evn) => {\n          const errorFlag = onError ? onError(evn) : undefined;\n          if (errorFlag !== false) {\n            setIsImgExist(false);\n          }\n        }}\n      />\n    );\n  } else if (icon && typeof icon === 'string') {\n    children = <Icon type={icon} />;\n  } else if (icon && React.isValidElement(icon)) {\n    children = icon;\n  }\n  return (\n    <span {...resetProps} className={cls} ref={ref}>\n      {children}\n    </span>\n  );\n});\n"
  ]
}