{
  "version": 3,
  "sources": [
    "../src/Menu.tsx"
  ],
  "names": [
    "React",
    "useMemo",
    "MenuItem",
    "Divider",
    "SubMenu",
    "Menu",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "children",
    "bordered",
    "theme",
    "inlineIndent",
    "inlineCollapsed",
    "htmlProps",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "Children",
    "map",
    "child",
    "key",
    "isValidElement",
    "type",
    "cloneElement",
    "Object",
    "assign",
    "Item",
    "displayName"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA;;AAiBA,IAAMC,IAAI,gBAAGL,KAAK,CAACM,UAAN,CAA8C,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzE,MAAM;AACJC,IAAAA,SAAS,GAAG,QADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,KAAK,GAAG,OALJ;AAMJC,IAAAA,YAAY,GAAG,EANX;AAOJC,IAAAA;AAPI,MASFR,KATJ;AAAA,MAQKS,SARL,iCASIT,KATJ;;AAUA,MAAMU,GAAG,GAAGhB,OAAO,CACjB,MACE,CACEQ,SADF,EAEEG,QAAQ,GAAG,YAAH,GAAkB,IAF5B,EAGEG,eAAe,GAAMN,SAAN,yBAAqC,IAHtD,EAIEI,KAAK,GAAMJ,SAAN,SAAmBI,KAAnB,GAA6B,IAJpC,EAKEH,SALF,EAOGQ,MAPH,CAOUC,OAPV,EAQGC,IARH,CAQQ,GARR,EASGC,IATH,EAFe,EAYjB,CAACZ,SAAD,EAAYG,QAAZ,EAAsBG,eAAtB,EAAuCF,KAAvC,EAA8CH,SAA9C,CAZiB,CAAnB;AAeA,sBACE,wBAAQM,SAAR;AAAmB,IAAA,GAAG,EAAER,GAAxB;AAA6B,IAAA,SAAS,EAAES,GAAxC;AAA6C,iBAAU,MAAvD;AAAA,cACGjB,KAAK,CAACsB,QAAN,CAAeC,GAAf,CAAmBZ,QAAnB,EAA6B,CAACa,KAAD,EAAyBC,GAAzB,KAAiC;AAC7D,UAAI,eAACzB,KAAK,CAAC0B,cAAN,CAAqBF,KAArB,CAAL,EAAkC,OAAOA,KAAP;AAClC,UAAMjB,KAA2D,GAAG,EAApE,CAF6D,CAG7D;;AACA,UAAIiB,KAAK,CAACjB,KAAN,CAAYI,QAAZ,IAAwBa,KAAK,CAACG,IAAN,KAAgBvB,OAA5C,EAA6D;AAC3DG,QAAAA,KAAK,CAACO,YAAN,GAAqBA,YAArB;AACD;;AACD,0BAAOd,KAAK,CAAC4B,YAAN,CACLJ,KADK,EAELK,MAAM,CAACC,MAAP,cAAmBvB,KAAnB,GAA4BiB,KAAK,CAACjB,KAAlC,EAAyC;AAAEkB,QAAAA,GAAG,OAAKA;AAAV,OAAzC,CAFK,CAAP;AAID,KAXA;AADH,KADF;AAgBD,CA1CY,CAAb;AAkDCpB,IAAD,CAAe0B,IAAf,GAAsB7B,QAAtB;AACCG,IAAD,CAAeD,OAAf,GAAyBA,OAAzB;AACCC,IAAD,CAAeF,OAAf,GAAyBA,OAAzB;AACCE,IAAD,CAAe2B,WAAf,GAA6B,UAA7B;AAEA,eAAe3B,IAAf",
  "sourcesContent": [
    "import React, { useMemo } from 'react';\nimport { IProps, HTMLUlProps } from '@uiw/utils';\nimport MenuItem from './MenuItem';\nimport Divider from './Divider';\nimport SubMenu from './SubMenu';\nimport './style/menu.less';\n\nexport interface MenuProps extends IProps, HTMLUlProps {\n  /** 主题颜色 */\n  theme?: 'light' | 'dark';\n  /**\n   * 垂直是否收起菜单\n   * Default: `false`\n   */\n  inlineCollapsed?: boolean;\n  /**\n   * 菜单缩进宽度 Default: `10`\n   */\n  inlineIndent?: number;\n  bordered?: boolean;\n}\n\nconst Menu = React.forwardRef<HTMLUListElement, MenuProps>((props, ref) => {\n  const {\n    prefixCls = 'w-menu',\n    className,\n    children,\n    bordered,\n    theme = 'light',\n    inlineIndent = 10,\n    inlineCollapsed,\n    ...htmlProps\n  } = props;\n  const cls = useMemo(\n    () =>\n      [\n        prefixCls,\n        bordered ? 'w-bordered' : null,\n        inlineCollapsed ? `${prefixCls}-inline-collapsed` : null,\n        theme ? `${prefixCls}-${theme}` : null,\n        className,\n      ]\n        .filter(Boolean)\n        .join(' ')\n        .trim(),\n    [prefixCls, bordered, inlineCollapsed, theme, className],\n  );\n\n  return (\n    <ul {...htmlProps} ref={ref} className={cls} data-menu=\"menu\">\n      {React.Children.map(children, (child: React.ReactNode, key) => {\n        if (!React.isValidElement(child)) return child;\n        const props: { inlineIndent?: number; inlineCollapsed?: boolean } = {};\n        // Sub Menu\n        if (child.props.children && child.type === (SubMenu as any)) {\n          props.inlineIndent = inlineIndent;\n        }\n        return React.cloneElement(\n          child,\n          Object.assign({ ...props }, child.props, { key: `${key}` }),\n        );\n      })}\n    </ul>\n  );\n});\n\ntype Menu = typeof Menu & {\n  Item: typeof MenuItem;\n  SubMenu: typeof SubMenu;\n  Divider: typeof Divider;\n};\n\n(Menu as Menu).Item = MenuItem;\n(Menu as Menu).SubMenu = SubMenu;\n(Menu as Menu).Divider = Divider;\n(Menu as Menu).displayName = 'uiw.Menu';\n\nexport default Menu as Menu;\n"
  ]
}