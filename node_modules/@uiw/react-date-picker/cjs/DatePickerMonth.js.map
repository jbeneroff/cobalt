{
  "version": 3,
  "sources": [
    "../src/DatePickerMonth.tsx"
  ],
  "names": [
    "DatePickerMonth",
    "props",
    "prefixCls",
    "className",
    "panelDate",
    "Date",
    "monthLabel",
    "onSelected",
    "noop",
    "other",
    "filter",
    "Boolean",
    "join",
    "trim",
    "Array",
    "map",
    "_",
    "idx",
    "selectedMonth",
    "getMonth"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AASO,SAASA,eAAT,CAAyBC,KAAzB,EAAsD;AAC3D,yBAOIA,KAPJ,CACEC,SADF;AAAA,MACEA,SADF,iCACc,cADd;AAAA,MAEEC,SAFF,GAOIF,KAPJ,CAEEE,SAFF;AAAA,yBAOIF,KAPJ,CAGEG,SAHF;AAAA,MAGEA,SAHF,iCAGc,IAAIC,IAAJ,EAHd;AAAA,MAIEC,UAJF,GAOIL,KAPJ,CAIEK,UAJF;AAAA,0BAOIL,KAPJ,CAKEM,UALF;AAAA,MAKEA,UALF,kCAKeC,WALf;AAAA,MAMKC,KANL,6CAOIR,KAPJ;AAQA,sBACE;AACE,IAAA,SAAS,EAAE,CAACC,SAAS,aAAMA,SAAN,cAA0B,IAApC,EAA0CC,SAA1C,EACRO,MADQ,CACDC,OADC,EAERC,IAFQ,CAEH,GAFG,EAGRC,IAHQ;AADb,KAKMJ,KALN;AAAA,cAOG,oCAAIK,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,UAACC,CAAD,EAAIC,GAAJ,EAAY;AAC9B,UAAMC,aAAa,GAAGd,SAAS,CAAEe,QAAX,EAAtB;AACA,0BACE;AAEE,QAAA,SAAS,EAAE,CAACD,aAAa,KAAKD,GAAlB,GAAwB,UAAxB,GAAqC,IAAtC,EACRP,MADQ,CACDC,OADC,EAERC,IAFQ,CAEH,GAFG,EAGRC,IAHQ,EAFb;AAAA,+BAOE;AAAM,UAAA,OAAO,EAAE;AAAA,mBAAMN,UAAU,CAACU,GAAD,EAAM,KAAN,CAAhB;AAAA,WAAf;AAAA,oBACIX,UAAU,IAAIA,UAAU,CAACW,GAAD,CAAzB,IAAmCA;AADtC;AAPF,SACOA,GADP,CADF;AAaD,KAfA;AAPH,KADF;AA0BD",
  "sourcesContent": [
    "import React from 'react';\nimport { IProps, HTMLDivProps, noop } from '@uiw/utils';\nimport './style/year-month.less';\n\nexport interface DatePickerMonthProps extends IProps, HTMLDivProps {\n  panelDate?: Date;\n  onSelected?: (month: number, paging?: boolean) => void;\n  monthLabel?: React.ReactNode[];\n}\n\nexport function DatePickerMonth(props: DatePickerMonthProps) {\n  const {\n    prefixCls = 'w-datepicker',\n    className,\n    panelDate = new Date(),\n    monthLabel,\n    onSelected = noop,\n    ...other\n  } = props;\n  return (\n    <div\n      className={[prefixCls ? `${prefixCls}-month` : null, className]\n        .filter(Boolean)\n        .join(' ')\n        .trim()}\n      {...other}\n    >\n      {[...Array(12)].map((_, idx) => {\n        const selectedMonth = panelDate!.getMonth();\n        return (\n          <div\n            key={idx}\n            className={[selectedMonth === idx ? 'selected' : null]\n              .filter(Boolean)\n              .join(' ')\n              .trim()}\n          >\n            <span onClick={() => onSelected(idx, false)}>\n              {(monthLabel && monthLabel[idx]) || idx}\n            </span>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"
  ]
}