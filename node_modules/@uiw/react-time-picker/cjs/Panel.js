"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = TimePickerPanel;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["prefixCls", "className", "count", "date", "type", "disabledHours", "disabledMinutes", "disabledSeconds", "hideDisabled", "onSelected"];

function TimePickerPanel(props) {
  var _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'w-timepicker' : _props$prefixCls,
      className = props.className,
      _props$count = props.count,
      count = _props$count === void 0 ? 24 : _props$count,
      date = props.date,
      _props$type = props.type,
      type = _props$type === void 0 ? 'Hours' : _props$type,
      disabledHours = props.disabledHours,
      disabledMinutes = props.disabledMinutes,
      disabledSeconds = props.disabledSeconds,
      hideDisabled = props.hideDisabled,
      onSelected = props.onSelected,
      other = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var disableds = (0, _react.useRef)([]);

  function getMaybeNumber() {
    if (date && type) {
      return new Date(date)["get".concat(type)]();
    }

    return 0;
  }

  function handleClick(num, e) {
    if (!date) return;
    var currentDate = new Date(date);
    currentDate["set".concat(type)](num);
    onSelected && onSelected(type, num, disableds.current, currentDate);
  }

  function getDisabledItem(num) {
    var disabled = props["disabled".concat(type)];

    if (disabled) {
      return disabled(num, type, new Date(date));
    }

    return false;
  }

  function getItemInstance(tag) {
    if (tag && tag.parentNode && tag.dataset['index']) {
      var offsetTop = Number(tag.dataset['index']) * tag.clientHeight;

      if (tag.parentNode.parentNode) {
        tag.parentNode.parentNode.scrollTop = offsetTop;
      }
    }
  }

  var data = (0, _react.useMemo)(function () {
    return (0, _toConsumableArray2["default"])(Array(count)).map(function (_, idx) {
      var disabled = getDisabledItem(idx);
      if (disabled) disableds.current.push(idx);
      return {
        count: idx,
        disabled: getDisabledItem(idx)
      };
    }).filter(function (item) {
      return hideDisabled && item.disabled ? false : true;
    });
  }, [hideDisabled]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    className: "".concat(prefixCls, "-spinner")
  }, other), {}, {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)("ul", {
      children: data.map(function (item, idx) {
        var liProps = {};

        if (!item.disabled) {
          liProps.onClick = function (e) {
            return handleClick(item.count, e);
          };
        }

        var currentCount = getMaybeNumber();
        return /*#__PURE__*/(0, _jsxRuntime.jsx)("li", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
          "data-index": currentCount === item.count ? idx : undefined,
          ref: function ref(tag) {
            return tag && getItemInstance(tag);
          }
        }, liProps), {}, {
          className: [item.disabled ? 'disabled' : null, currentCount === item.count ? 'selected' : null, hideDisabled && item.disabled ? 'hide' : null].filter(Boolean).join(' ').trim(),
          children: item.count < 10 ? "0".concat(item.count) : item.count
        }), idx);
      })
    })
  }));
}

module.exports = exports.default;
//# sourceMappingURL=Panel.js.map