"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _reactTransitionGroup = require("react-transition-group");

var _reactIcon = _interopRequireDefault(require("@uiw/react-icon"));

var _reactButton = _interopRequireDefault(require("@uiw/react-button"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["prefixCls", "className", "type", "title", "description", "showIcon", "icon", "rounded", "isCloseButtonShown"];

var Message = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(Message, _React$Component);

  var _super = (0, _createSuper2["default"])(Message);

  function Message(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Message);
    _this = _super.call(this, props);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClosed", function (e) {
      var onClose = _this.props.onClose;

      _this.setState({
        isOpen: false
      });

      onClose && onClose(e);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "renderIcon", function () {
      var _this$props = _this.props,
          type = _this$props.type,
          showIcon = _this$props.showIcon;
      var icon = _this.props.icon;

      if (!icon && showIcon) {
        switch (type) {
          case 'success':
            icon = 'circle-check';
            break;

          case 'warning':
            icon = 'warning';
            break;

          case 'info':
            icon = 'information';
            break;

          case 'error':
            icon = 'circle-close';
            break;

          default:
            break;
        }
      }

      return icon;
    });
    _this.state = {
      isOpen: true
    };
    return _this;
  }

  (0, _createClass2["default"])(Message, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          className = _this$props2.className,
          type = _this$props2.type,
          title = _this$props2.title,
          description = _this$props2.description,
          showIcon = _this$props2.showIcon,
          icon = _this$props2.icon,
          rounded = _this$props2.rounded,
          isCloseButtonShown = _this$props2.isCloseButtonShown,
          elementProps = (0, _objectWithoutProperties2["default"])(_this$props2, _excluded);
      var children = description || this.props.children;
      var cls = [prefixCls, className, "".concat(prefixCls, "-").concat(type), rounded ? "".concat(prefixCls, "-rounded") : null, showIcon ? "".concat(prefixCls, "-icon") : null, showIcon ? "".concat(prefixCls).concat(title ? '-title' : '').concat(children ? '-description' : '') : null].filter(Boolean).join(' ').trim();
      var Child = /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
        className: cls
      }, elementProps), {}, {
        children: [isCloseButtonShown && /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactButton["default"], {
          basic: true,
          onClick: this.handleClosed,
          icon: "close",
          type: "light"
        }), showIcon && /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactIcon["default"], {
          type: this.renderIcon()
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "".concat(prefixCls, "-title"),
          children: title
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "".concat(prefixCls, "-description"),
          children: children
        })]
      }));

      if (!isCloseButtonShown) {
        return Child;
      }

      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactTransitionGroup.CSSTransition, {
        "in": this.state.isOpen,
        unmountOnExit: true,
        timeout: 300,
        classNames: prefixCls,
        children: Child
      });
    }
  }]);
  return Message;
}(_react["default"].Component);

exports["default"] = Message;
(0, _defineProperty2["default"])(Message, "defaultProps", {
  prefixCls: 'w-message',
  rounded: true,
  isCloseButtonShown: false
});
module.exports = exports.default;
//# sourceMappingURL=index.js.map