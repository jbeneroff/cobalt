{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "Popover",
    "prefixCls",
    "props",
    "className",
    "content",
    "visibleArrow",
    "other",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "renderArrow",
    "children",
    "React",
    "Component",
    "placement",
    "usePortal",
    "isOpen"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;IAUqBA,O;;;;;;;;;;;;;;;oGAQL,YAAM;AAClB,UAAQC,SAAR,GAAsB,MAAKC,KAA3B,CAAQD,SAAR;AACA,0BACE;AAAK,QAAA,SAAS,YAAKA,SAAL,WAAd;AAAA,+BACE;AAAK,UAAA,OAAO,EAAC,WAAb;AAAA,kCACE;AACE,YAAA,WAAW,EAAC,KADd;AAEE,YAAA,CAAC,EAAC;AAFJ,YADF,eAKE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,CAAC,EAAC;AAFJ,YALF;AAAA;AADF,QADF;AAcD,K;;;;;;WACD,kBAAS;AACP,wBAMI,KAAKC,KANT;AAAA,UACED,SADF,eACEA,SADF;AAAA,UAEEE,SAFF,eAEEA,SAFF;AAAA,UAGEC,OAHF,eAGEA,OAHF;AAAA,UAIEC,YAJF,eAIEA,YAJF;AAAA,UAKKC,KALL;AAOA,UAAMC,GAAG,GAAG,CAACN,SAAD,EAAYE,SAAZ,EAAuB,CAACE,YAAD,GAAgB,UAAhB,GAA6B,IAApD,EACTG,MADS,CACFC,OADE,EAETC,IAFS,CAEJ,GAFI,EAGTC,IAHS,EAAZ;AAIA,0BACE,qBAAC,+BAAD,oEACML,KADN;AAEE,QAAA,OAAO,eACL;AAAK,UAAA,SAAS,EAAEC,GAAhB;AAAA,qBACGF,YAAY,IAAI,KAAKO,WAAL,EADnB,eAEE;AAAK,YAAA,SAAS,YAAKX,SAAL,WAAd;AAAA,sBAAuC,KAAKC,KAAL,CAAWE;AAAlD,YAFF;AAAA,UAHJ;AAAA,kBASG,yBAAO,KAAKF,KAAL,CAAWW,QAAlB,MAA+B,QAA/B,GACC,KAAKX,KAAL,CAAWW,QADZ,gBAGC;AAAA,oBAAO,KAAKX,KAAL,CAAWW;AAAlB;AAZJ,SADF;AAiBD;;;EAtDkCC,kBAAMC,S;;;iCAAtBf,O,kBACwB;AACzCC,EAAAA,SAAS,EAAE,WAD8B;AAEzCe,EAAAA,SAAS,EAAE,KAF8B;AAGzCC,EAAAA,SAAS,EAAE,IAH8B;AAIzCC,EAAAA,MAAM,EAAE,KAJiC;AAKzCb,EAAAA,YAAY,EAAE;AAL2B,C",
  "sourcesContent": [
    "import React from 'react';\nimport OverlayTrigger, {\n  OverlayTriggerProps,\n} from '@uiw/react-overlay-trigger';\nimport './style/index.less';\n\nexport interface PopoverProps extends OverlayTriggerProps {\n  content?: React.ReactNode;\n  visibleArrow?: boolean;\n}\n\nexport default class Popover extends React.Component<PopoverProps> {\n  public static defaultProps: PopoverProps = {\n    prefixCls: 'w-popover',\n    placement: 'top',\n    usePortal: true,\n    isOpen: false,\n    visibleArrow: true,\n  };\n  renderArrow = () => {\n    const { prefixCls } = this.props;\n    return (\n      <div className={`${prefixCls}-arrow`}>\n        <svg viewBox=\"0 0 30 30\">\n          <path\n            fillOpacity=\"0.2\"\n            d=\"M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z\"\n          />\n          <path\n            fill=\"#fff\"\n            d=\"M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z\"\n          />\n        </svg>\n      </div>\n    );\n  };\n  render() {\n    const {\n      prefixCls,\n      className,\n      content,\n      visibleArrow,\n      ...other\n    } = this.props;\n    const cls = [prefixCls, className, !visibleArrow ? 'no-arrow' : null]\n      .filter(Boolean)\n      .join(' ')\n      .trim();\n    return (\n      <OverlayTrigger\n        {...other}\n        overlay={\n          <div className={cls}>\n            {visibleArrow && this.renderArrow()}\n            <div className={`${prefixCls}-inner`}>{this.props.content}</div>\n          </div>\n        }\n      >\n        {typeof this.props.children === 'object' ? (\n          this.props.children\n        ) : (\n          <span>{this.props.children}</span>\n        )}\n      </OverlayTrigger>\n    );\n  }\n}\n"
  ]
}