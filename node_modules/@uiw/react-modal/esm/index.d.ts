import React from 'react';
import { OverlayProps } from '@uiw/react-overlay';
import { ButtonType, ButtonProps } from '@uiw/react-button';
import { IProps } from '@uiw/utils';
import './style/index.less';
export interface ModalProps extends IProps, OverlayProps {
    type?: ButtonType;
    cancelText?: string;
    confirmButtonProps?: Omit<ButtonProps, 'ref'>;
    cancelButtonProps?: Omit<ButtonProps, 'ref'>;
    content?: React.ReactNode;
    confirmText?: string;
    title?: string;
    icon?: JSX.Element | string | false | null;
    useButton?: boolean;
    usePortal?: boolean;
    autoFocus?: boolean;
    isCloseButtonShown?: boolean;
    isOpen?: boolean;
    bodyStyle?: React.CSSProperties;
    maxWidth?: number;
    minWidth?: number;
    width?: number;
    onCancel?: (evn: React.MouseEvent<HTMLButtonElement> & MouseEvent) => void;
    onConfirm?: (evn: React.MouseEvent<HTMLButtonElement> & MouseEvent) => void;
}
declare const _default: React.ForwardRefExoticComponent<Pick<ModalProps, keyof ModalProps> & React.RefAttributes<OverlayProps>>;
export default _default;
