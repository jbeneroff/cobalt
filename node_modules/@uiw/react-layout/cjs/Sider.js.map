{
  "version": 3,
  "sources": [
    "../src/Sider.tsx"
  ],
  "names": [
    "Sider",
    "props",
    "prefixCls",
    "className",
    "style",
    "children",
    "width",
    "collapsedWidth",
    "collapsed",
    "siderHook",
    "other",
    "sliderId",
    "rawWidth",
    "setRawWidth",
    "addSider",
    "removeSider",
    "divStyle",
    "flex",
    "maxWidth",
    "minWidth",
    "filter",
    "Boolean",
    "join",
    "trim",
    "context"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AASA,SAASA,KAAT,GAA8D;AAAA,MAA/CC,KAA+C,uEAAvC,EAAuC;AAC5D,yBAUIA,KAVJ,CACEC,SADF;AAAA,MACEA,SADF,iCACc,gBADd;AAAA,MAEEC,SAFF,GAUIF,KAVJ,CAEEE,SAFF;AAAA,MAGEC,KAHF,GAUIH,KAVJ,CAGEG,KAHF;AAAA,MAIEC,QAJF,GAUIJ,KAVJ,CAIEI,QAJF;AAAA,qBAUIJ,KAVJ,CAKEK,KALF;AAAA,MAKEA,KALF,6BAKU,GALV;AAAA,8BAUIL,KAVJ,CAMEM,cANF;AAAA,MAMEA,cANF,sCAMmB,EANnB;AAAA,yBAUIN,KAVJ,CAOEO,SAPF;AAAA,MAOEA,SAPF,iCAOc,KAPd;AAAA,MAQEC,SARF,GAUIR,KAVJ,CAQEQ,SARF;AAAA,MASKC,KATL,6CAUIT,KAVJ;;AAWA,kBAAmB,wCAAqB,sBAArB,EAAnB;AAAA;AAAA,MAAOU,QAAP;;AACA,mBAAgC,qBAASH,SAAS,GAAGD,cAAH,GAAoBD,KAAtC,CAAhC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACA,wBAAU,YAAM;AACd,QAAIJ,SAAS,IAAI,CAAC,CAACA,SAAS,CAACK,QAA7B,EAAuC;AACrCL,MAAAA,SAAS,CAACK,QAAV,CAAmBH,QAAnB;AACD;;AACD,WAAO,YAAM;AACX,UAAIF,SAAS,IAAI,CAAC,CAACA,SAAS,CAACM,WAA7B,EAA0C;AACxCN,QAAAA,SAAS,CAACM,WAAV,CAAsBJ,QAAtB;AACD;AACF,KAJD;AAKD,GATD,EASG,EATH;AAUA,sBAAQ,YAAM;AACZE,IAAAA,WAAW,CAACL,SAAS,GAAGD,cAAH,GAAoBD,KAA9B,CAAX;AACD,GAFD,EAEG,CAACE,SAAD,CAFH;AAGA,MAAMQ,QAAQ,qEACTZ,KADS;AAEZa,IAAAA,IAAI,gBAASL,QAAT,CAFQ;AAGZM,IAAAA,QAAQ,EAAEN,QAHE;AAIZO,IAAAA,QAAQ,EAAEP,QAJE;AAKZN,IAAAA,KAAK,EAAEM;AALK,IAAd;AAOA,sBACE;AACE,IAAA,SAAS,EAAE,CAACV,SAAD,EAAYC,SAAZ,EAAuBiB,MAAvB,CAA8BC,OAA9B,EAAuCC,IAAvC,CAA4C,GAA5C,EAAiDC,IAAjD,EADb;AAEE,IAAA,KAAK,EAAEP;AAFT,KAGMN,KAHN;AAAA,cAKGL;AALH,KADF;AASD;;eAEc,oBAA8B;AAAA,MAA7BJ,KAA6B,uEAArB,EAAqB;AAC3C,sBACE,qBAAC,qBAAD,CAAe,QAAf;AAAA,cACG,kBAACuB,OAAD;AAAA,0BAAiC,qBAAC,KAAD,oEAAWvB,KAAX,GAAsBuB,OAAtB,EAAjC;AAAA;AADH,IADF;AAKD,C",
  "sourcesContent": [
    "import React, { useEffect, useState, useMemo } from 'react';\nimport { IProps, randomid } from '@uiw/utils';\nimport { LayoutContext, LayoutContextProps } from './Layout';\n\nexport interface SiderProps extends IProps {\n  children?: React.ReactNode;\n  width?: number | string;\n  collapsedWidth?: number;\n  collapsed?: boolean;\n}\n\nfunction Sider(props = {} as SiderProps & LayoutContextProps) {\n  const {\n    prefixCls = 'w-layout-sider',\n    className,\n    style,\n    children,\n    width = 200,\n    collapsedWidth = 80,\n    collapsed = false,\n    siderHook,\n    ...other\n  } = props;\n  const [sliderId] = useState(`w-layout-${randomid()}`);\n  const [rawWidth, setRawWidth] = useState(collapsed ? collapsedWidth : width);\n  useEffect(() => {\n    if (siderHook && !!siderHook.addSider) {\n      siderHook.addSider(sliderId);\n    }\n    return () => {\n      if (siderHook && !!siderHook.removeSider) {\n        siderHook.removeSider(sliderId);\n      }\n    };\n  }, []);\n  useMemo(() => {\n    setRawWidth(collapsed ? collapsedWidth : width);\n  }, [collapsed]);\n  const divStyle = {\n    ...style,\n    flex: `0 0 ${rawWidth}`,\n    maxWidth: rawWidth,\n    minWidth: rawWidth,\n    width: rawWidth,\n  };\n  return (\n    <div\n      className={[prefixCls, className].filter(Boolean).join(' ').trim()}\n      style={divStyle}\n      {...other}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default (props = {} as SiderProps) => {\n  return (\n    <LayoutContext.Consumer>\n      {(context: LayoutContextProps) => <Sider {...props} {...context} />}\n    </LayoutContext.Consumer>\n  );\n};\n"
  ]
}