import React from 'react';
import { AlertProps } from '@uiw/react-alert';
import { Placement, ContainerNotifys } from './Container';
import './style/index.less';
export interface NotificationCreateProps extends Omit<AlertProps, 'type'> {
    placement?: Placement;
    description?: React.ReactNode;
    type?: 'primary' | 'danger' | 'open' | 'success' | 'warning' | 'info' | 'error';
    duration?: number;
    key?: string;
    willUnmount?: (props: NotificationCreateProps, notifys: ContainerNotifys) => void;
}
export declare type Notifys = {
    [key: string]: any;
};
export declare type NotifysDom = {
    [key: string]: HTMLDivElement;
};
export interface NotificationProps {
    (props: NotificationCreateProps, type: NotificationCreateProps['type']): void;
    [key: string]: () => void;
}
export interface NotificationApi {
    open(option: NotificationCreateProps): void;
    success(option: NotificationCreateProps): void;
    warning(option: NotificationCreateProps): void;
    info(option: NotificationCreateProps): void;
    error(option: NotificationCreateProps): void;
}
declare const _default: NotificationApi;
export default _default;
