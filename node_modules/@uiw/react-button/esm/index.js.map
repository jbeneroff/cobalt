{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "Icon",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "disabled",
    "active",
    "loading",
    "block",
    "basic",
    "htmlType",
    "type",
    "size",
    "icon",
    "className",
    "children",
    "others",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "Children",
    "map",
    "child",
    "isValidElement"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA;;;AAyBA,4BAAeD,KAAK,CAACE,UAAN,CACb,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AACJC,IAAAA,SAAS,GAAG,OADR;AAEJC,IAAAA,QAAQ,GAAG,KAFP;AAGJC,IAAAA,MAAM,GAAG,KAHL;AAIJC,IAAAA,OAAO,GAAG,KAJN;AAKJC,IAAAA,KAAK,GAAG,KALJ;AAMJC,IAAAA,KAAK,GAAG,KANJ;AAOJC,IAAAA,QAAQ,GAAG,QAPP;AAQJC,IAAAA,IAAI,GAAG,OARH;AASJC,IAAAA,IAAI,GAAG,SATH;AAUJC,IAAAA,IAVI;AAWJC,IAAAA,SAXI;AAYJC,IAAAA;AAZI,MAcFb,KAdJ;AAAA,MAaKc,MAbL,iCAcId,KAdJ;;AAeA,MAAMe,GAAG,GAAG,CACVH,SADU,EAEVV,SAFU,EAGVQ,IAAI,GAAMR,SAAN,cAAwBQ,IAAxB,GAAiC,IAH3B,EAIVD,IAAI,GAAMP,SAAN,SAAmBO,IAAnB,GAA4B,IAJtB,EAKVF,KAAK,GAAML,SAAN,cAA0B,IALrB,EAMVG,OAAO,GAAMH,SAAN,gBAA4B,IANzB,EAOVC,QAAQ,IAAIE,OAAZ,GAAsB,UAAtB,GAAmC,IAPzB,EAQVD,MAAM,GAAG,QAAH,GAAc,IARV,EASVE,KAAK,GAAG,OAAH,GAAa,IATR,EAWTU,MAXS,CAWFC,OAXE,EAYTC,IAZS,CAYJ,GAZI,EAaTC,IAbS,EAAZ;AAeA,sBACE,6BACML,MADN;AAEE,IAAA,GAAG,EAAEb,GAFP;AAGE,IAAA,IAAI,EAAEO,QAHR;AAIE,IAAA,QAAQ,EAAEL,QAAQ,IAAIE,OAJxB;AAKE,IAAA,SAAS,EAAEU,GALb;AAAA,eAOGJ,IAAI,iBAAI,KAAC,IAAD;AAAM,MAAA,IAAI,EAAEA;AAAZ,MAPX,EAQGE,QAAQ,IACPhB,KAAK,CAACuB,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,EAA8BS,KAAD,IAA4B;AACvD,UAAI,CAACA,KAAL,EAAY,OAAOA,KAAP;AACZ,wBAAIzB,KAAK,CAAC0B,cAAN,CAAqBD,KAArB,CAAJ,EAAiC,OAAOA,KAAP;AACjC,0BAAO;AAAA,kBAAOA;AAAP,QAAP;AACD,KAJD,CATJ;AAAA,KADF;AAiBD,CAjDY,CAAf",
  "sourcesContent": [
    "import React from 'react';\nimport Icon from '@uiw/react-icon';\nimport { IProps, HTMLButtonProps } from '@uiw/utils';\nimport './style/index.less';\n\nexport type ButtonType =\n  | 'primary'\n  | 'success'\n  | 'warning'\n  | 'danger'\n  | 'light'\n  | 'dark'\n  | 'link';\nexport type ButtonSize = 'large' | 'default' | 'small';\n\nexport interface ButtonProps extends IProps, Omit<HTMLButtonProps, 'size'> {\n  basic?: boolean;\n  disabled?: boolean;\n  active?: boolean;\n  loading?: boolean;\n  block?: boolean;\n  icon?: JSX.Element | string | false | null;\n  type?: ButtonType;\n  size?: ButtonSize;\n  htmlType?: 'button' | 'submit' | 'reset';\n  onClick?: (e: React.MouseEvent<HTMLButtonElement> & MouseEvent) => void;\n}\n\nexport default React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    const {\n      prefixCls = 'w-btn',\n      disabled = false,\n      active = false,\n      loading = false,\n      block = false,\n      basic = false,\n      htmlType = 'button',\n      type = 'light',\n      size = 'default',\n      icon,\n      className,\n      children,\n      ...others\n    } = props;\n    const cls = [\n      className,\n      prefixCls,\n      size ? `${prefixCls}-size-${size}` : null,\n      type ? `${prefixCls}-${type}` : null,\n      basic ? `${prefixCls}-basic` : null,\n      loading ? `${prefixCls}-loading` : null,\n      disabled || loading ? 'disabled' : null,\n      active ? 'active' : null,\n      block ? 'block' : null,\n    ]\n      .filter(Boolean)\n      .join(' ')\n      .trim();\n\n    return (\n      <button\n        {...others}\n        ref={ref}\n        type={htmlType}\n        disabled={disabled || loading}\n        className={cls}\n      >\n        {icon && <Icon type={icon} />}\n        {children &&\n          React.Children.map(children, (child: React.ReactNode) => {\n            if (!child) return child;\n            if (React.isValidElement(child)) return child;\n            return <span>{child}</span>;\n          })}\n      </button>\n    );\n  },\n);\n"
  ]
}