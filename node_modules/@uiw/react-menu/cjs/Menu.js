"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _MenuItem = _interopRequireDefault(require("./MenuItem"));

var _Divider = _interopRequireDefault(require("./Divider"));

var _SubMenu = _interopRequireDefault(require("./SubMenu"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["prefixCls", "className", "children", "bordered", "theme", "inlineIndent", "inlineCollapsed"];

var Menu = /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
  var _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'w-menu' : _props$prefixCls,
      className = props.className,
      children = props.children,
      bordered = props.bordered,
      _props$theme = props.theme,
      theme = _props$theme === void 0 ? 'light' : _props$theme,
      _props$inlineIndent = props.inlineIndent,
      inlineIndent = _props$inlineIndent === void 0 ? 10 : _props$inlineIndent,
      inlineCollapsed = props.inlineCollapsed,
      htmlProps = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var cls = (0, _react.useMemo)(function () {
    return [prefixCls, bordered ? 'w-bordered' : null, inlineCollapsed ? "".concat(prefixCls, "-inline-collapsed") : null, theme ? "".concat(prefixCls, "-").concat(theme) : null, className].filter(Boolean).join(' ').trim();
  }, [prefixCls, bordered, inlineCollapsed, theme, className]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("ul", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, htmlProps), {}, {
    ref: ref,
    className: cls,
    "data-menu": "menu",
    children: _react["default"].Children.map(children, function (child, key) {
      if (! /*#__PURE__*/_react["default"].isValidElement(child)) return child;
      var props = {}; // Sub Menu

      if (child.props.children && child.type === _SubMenu["default"]) {
        props.inlineIndent = inlineIndent;
      }

      return /*#__PURE__*/_react["default"].cloneElement(child, Object.assign((0, _objectSpread2["default"])({}, props), child.props, {
        key: "".concat(key)
      }));
    })
  }));
});

Menu.Item = _MenuItem["default"];
Menu.SubMenu = _SubMenu["default"];
Menu.Divider = _Divider["default"];
Menu.displayName = 'uiw.Menu';
var _default = Menu;
exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=Menu.js.map