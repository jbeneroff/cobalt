{
  "version": 3,
  "sources": [
    "../src/Row.tsx"
  ],
  "names": [
    "Row",
    "props",
    "prefixCls",
    "className",
    "gutter",
    "justify",
    "align",
    "other",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "gutterStyl",
    "paddingLeft",
    "paddingRight",
    "React",
    "Children",
    "toArray",
    "children",
    "map",
    "child",
    "isValidElement",
    "cloneElement",
    "Object",
    "assign",
    "style"
  ],
  "mappings": ";;;;;;;;;;;;;AAAA;;;;;;AAiBO,SAASA,GAAT,GAAmC;AAAA,MAAtBC,KAAsB,uEAAJ,EAAI;AACxC,yBAOIA,KAPJ,CACEC,SADF;AAAA,MACEA,SADF,iCACc,OADd;AAAA,MAEEC,SAFF,GAOIF,KAPJ,CAEEE,SAFF;AAAA,sBAOIF,KAPJ,CAGEG,MAHF;AAAA,MAGEA,MAHF,8BAGW,CAHX;AAAA,MAIEC,OAJF,GAOIJ,KAPJ,CAIEI,OAJF;AAAA,MAKEC,KALF,GAOIL,KAPJ,CAKEK,KALF;AAAA,MAMKC,KANL,6CAOIN,KAPJ;AAQA,MAAMO,GAAG,GAAG,CACVN,SADU,EAEVC,SAFU,EAGVG,KAAK,aAAMJ,SAAN,oBAAyBI,KAAzB,IAAmC,IAH9B,EAIVD,OAAO,aAAMH,SAAN,sBAA2BG,OAA3B,IAAuC,IAJpC,EAMTI,MANS,CAMFC,OANE,EAOTC,IAPS,CAOJ,GAPI,EAQTC,IARS,EAAZ;AASA,MAAMC,UAAU,GAAG,CAACT,MAAD,GACf,EADe,GAEf;AAAEU,IAAAA,WAAW,EAAEV,MAAM,GAAG,CAAxB;AAA2BW,IAAAA,YAAY,EAAEX,MAAM,GAAG;AAAlD,GAFJ;AAGA,sBACE,8FAASG,KAAT;AAAgB,IAAA,SAAS,EAAEC,GAA3B;AAAA,cACGQ,kBAAMC,QAAN,CAAeC,OAAf,CAAuBjB,KAAK,CAACkB,QAA7B,EAAuCC,GAAvC,CAA2C,UAACC,KAAD,EAAW;AACrD,UAAI,eAACL,kBAAMM,cAAN,CAAqBD,KAArB,CAAL,EAAkC,OAAOA,KAAP;AAClC,0BAAOL,kBAAMO,YAAN,CACLF,KADK,EAELG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAK,CAACpB,KAAxB,EAA+B;AAC7ByB,QAAAA,KAAK,oEAAOL,KAAK,CAACpB,KAAN,CAAYyB,KAAnB,GAA6Bb,UAA7B;AADwB,OAA/B,CAFK,CAAP;AAMD,KARA;AADH,KADF;AAaD",
  "sourcesContent": [
    "import React from 'react';\nimport { IProps, HTMLDivProps } from '@uiw/utils';\nimport './style/row.less';\n\nexport interface RowProps extends IProps, HTMLDivProps {\n  fixed?: boolean;\n  gutter?: number;\n  justify?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly';\n  align?: 'top' | 'middle' | 'bottom' | 'baseline';\n}\n\nexport function Row(props: RowProps = {}) {\n  const {\n    prefixCls = 'w-row',\n    className,\n    gutter = 0,\n    justify,\n    align,\n    ...other\n  } = props;\n  const cls = [\n    prefixCls,\n    className,\n    align ? `${prefixCls}-align-${align}` : null,\n    justify ? `${prefixCls}-justify-${justify}` : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  const gutterStyl = !gutter\n    ? {}\n    : { paddingLeft: gutter / 2, paddingRight: gutter / 2 };\n  return (\n    <div {...other} className={cls}>\n      {React.Children.toArray(props.children).map((child) => {\n        if (!React.isValidElement(child)) return child;\n        return React.cloneElement(\n          child,\n          Object.assign({}, child.props, {\n            style: { ...child.props.style, ...gutterStyl },\n          }),\n        );\n      })}\n    </div>\n  );\n}\n"
  ]
}