{
  "version": 3,
  "sources": [
    "../../src/util/getStyleComputedProperty.ts"
  ],
  "names": [
    "getStyleComputedProperty",
    "element",
    "property",
    "nodeType",
    "window",
    "ownerDocument",
    "defaultView",
    "css",
    "getComputedStyle"
  ],
  "mappings": ";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,wBAAT,CACbC,OADa,EAEbC,QAFa,EAGc;AAC3B,MAAID,OAAO,CAACE,QAAR,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,EAAP;AACD,GAH0B,CAI3B;;;AACA,MAAMC,MAAM,GAAGH,OAAO,CAACI,aAAR,CAAuBC,WAAtC;AACA,MAAMC,GAAwB,GAAIH,MAAD,CAAmBI,gBAAnB,CAC/BP,OAD+B,EAE/B,IAF+B,CAAjC;AAIA,SAAOC,QAAQ,GAAGK,GAAG,CAACL,QAAD,CAAN,GAAmBK,GAAlC;AACD",
  "sourcesContent": [
    "/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(\n  element: HTMLElement,\n  property?: keyof CSSStyleDeclaration,\n): CSSStyleDeclaration | any {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument!.defaultView;\n  const css: CSSStyleDeclaration = (window as Window).getComputedStyle(\n    element,\n    null,\n  );\n  return property ? css[property] : css;\n}\n"
  ]
}