import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "className", "children", "extra", "tagName", "active"];
import React, { Fragment } from 'react';
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var Item = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    prefixCls = 'w-list-item',
    className,
    children,
    extra,
    tagName = 'div',
    active = false
  } = props,
      resetProps = _objectWithoutPropertiesLoose(props, _excluded);

  var cls = [prefixCls, className, props.disabled ? 'w-disabled' : null, active ? 'w-active' : null].filter(Boolean).join(' ').trim();
  var TagName = props.href && typeof tagName === 'string' ? 'a' : tagName;
  return /*#__PURE__*/React.createElement(TagName, _extends({}, resetProps, {
    className: cls,
    ref
  }), /*#__PURE__*/_jsx(Fragment, {
    children: !extra || resetProps.href ? children : /*#__PURE__*/_jsxs(_Fragment, {
      children: [/*#__PURE__*/_jsx("div", {
        className: prefixCls + "-main",
        children: children
      }), /*#__PURE__*/_jsx("div", {
        className: prefixCls + "-extra",
        children: extra
      })]
    })
  }));
});
Item.displayName = 'List.Item';
export default Item;
//# sourceMappingURL=Item.js.map