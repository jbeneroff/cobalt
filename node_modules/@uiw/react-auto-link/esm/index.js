import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["text"];
import React, { Fragment } from 'react';
import { createElement as _createElement } from "react";
import { jsx as _jsx } from "react/jsx-runtime";
var delimiter = /((?:https?:\/\/)?(?:(?:[a-z0-9]?(?:[a-z0-9\-]{1,61}[a-z0-9])?\.[^\.|\s])+[a-z\.]*[a-z]+|(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3})(?::\d{1,5})*[a-z0-9.,_\/~#&=;%+?\-\\(\\)]*)/gi;
export default (function (props) {
  if (props === void 0) {
    props = {};
  }

  var {
    text = ''
  } = props,
      other = _objectWithoutPropertiesLoose(props, _excluded);

  return /*#__PURE__*/_jsx(Fragment, {
    children: text.split(delimiter).map((word, idx) => {
      var match = word.match(delimiter);

      if (match && match[0]) {
        var url = match[0];
        return /*#__PURE__*/_createElement("a", _extends({}, other, {
          key: idx,
          href: url.startsWith('http') ? url : "http://" + url
        }), url);
      }

      return /*#__PURE__*/_jsx(Fragment, {
        children: word
      }, idx);
    })
  });
});
//# sourceMappingURL=index.js.map