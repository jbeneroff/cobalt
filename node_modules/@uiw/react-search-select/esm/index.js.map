{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "Dropdown",
    "Icon",
    "Menu",
    "Input",
    "useState",
    "useRef",
    "useEffect",
    "SearchSelect",
    "props",
    "allowClear",
    "disabled",
    "size",
    "option",
    "loading",
    "style",
    "value",
    "defaultValue",
    "showSearch",
    "placeholder",
    "onSearch",
    "onChange",
    "onSelect",
    "others",
    "innerIsOpen",
    "setInnerIsOpen",
    "selectedValue",
    "setSelectedValue",
    "selectedLabel",
    "setSelectedLabel",
    "selectIconType",
    "setSelectIconType",
    "divRef",
    "defaultMenuItem",
    "find",
    "menuItem",
    "label",
    "handleItemClick",
    "item",
    "handleSelectChange",
    "renderSelectIcon",
    "type",
    "handleInputChange",
    "e",
    "target",
    "resetSelectedValue",
    "marginTop",
    "length",
    "open",
    "minHeight",
    "maxHeight",
    "overflowY",
    "width",
    "current",
    "offsetWidth",
    "color",
    "fontSize",
    "map",
    "idx",
    "active"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React from 'react';\nimport Dropdown, { DropdownProps } from '@uiw/react-dropdown';\nimport Icon from '@uiw/react-icon';\nimport Menu from '@uiw/react-menu';\nimport Input from '@uiw/react-input';\nimport { IProps } from '@uiw/utils';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\nexport interface SearchSelectProps extends IProps, DropdownProps {\n  size?: 'large' | 'default' | 'small';\n  loading: boolean;\n  showSearch?: boolean;\n  allowClear: boolean;\n  defaultValue?: string | number;\n  value?: string | number;\n  option: {\n    label: string;\n    value: string | number;\n    key: any;\n    [propName: string]: any;\n  }[];\n  onSelect?: (value: string | number) => void;\n  onSearch?: (value: string) => void;\n  onChange?: (value: string) => void;\n}\n\nexport interface MenuItemData {\n  label: string;\n  value: string | number;\n  [keyName: string]: any;\n}\n\nexport default function SearchSelect(props: SearchSelectProps) {\n  const {\n    allowClear = false,\n    disabled = false,\n    size = 'default',\n    option = [],\n    loading = false,\n    prefixCls,\n    className,\n    style,\n    isOpen,\n    value,\n    defaultValue,\n    showSearch,\n    placeholder,\n    onSearch,\n    onChange,\n    onSelect,\n    ...others\n  } = props;\n\n  const [innerIsOpen, setInnerIsOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(value);\n  const [selectedLabel, setSelectedLabel] = useState('');\n  const [selectIconType, setSelectIconType] = useState('');\n  const divRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (defaultValue) {\n      const defaultMenuItem = option.find(\n        (menuItem: MenuItemData) => defaultValue === menuItem.value,\n      );\n      setSelectedValue(defaultValue);\n      setSelectedLabel(defaultMenuItem ? defaultMenuItem.label : '');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (value !== selectedValue) {\n      setSelectedValue(value);\n    }\n  }, [value]);\n\n  function handleItemClick(item: MenuItemData) {\n    setInnerIsOpen(false);\n    setSelectedValue(item.value);\n    setSelectedLabel(item.label);\n    onSelect && onSelect(item.value);\n    // 支持form组件\n    handleSelectChange(item.value);\n  }\n\n  // 渲染icon\n  function renderSelectIcon(type: string) {\n    let selectIconType;\n    if (type === 'enter' && allowClear && selectedValue) {\n      selectIconType = 'close';\n    } else {\n      selectIconType = '';\n    }\n    setSelectIconType(selectIconType);\n  }\n  // handle change\n  function handleInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = e.target.value;\n    setInnerIsOpen(!!value);\n    setSelectedLabel(value);\n    setSelectIconType(showSearch && value ? 'loading' : '');\n    showSearch && onSearch && onSearch(value);\n    handleSelectChange(value);\n  }\n  // 清除选中的值\n  function resetSelectedValue() {\n    setInnerIsOpen(false);\n    setSelectedValue('');\n    setSelectedLabel('');\n    setSelectIconType('');\n    handleSelectChange('');\n  }\n  function handleSelectChange(value: any) {\n    onChange && onChange(value);\n  }\n\n  return (\n    <Dropdown\n      trigger=\"focus\"\n      style={{ marginTop: 5 }}\n      disabled={option && option.length > 0 ? false : true}\n      {...others}\n      onVisibleChange={(open) => setInnerIsOpen(open)}\n      isOpen={innerIsOpen}\n      menu={\n        <Menu\n          bordered\n          style={{\n            minHeight: 25,\n            maxHeight: 280,\n            overflowY: 'scroll',\n            width: divRef.current ? divRef.current.offsetWidth : 'auto',\n          }}\n        >\n          {!option || option.length === 0 ? (\n            <div style={{ color: '#c7c7c7', fontSize: 12 }}>\n              {loading ? '正在加载数据...' : '没有数据'}\n            </div>\n          ) : (\n            option.map((item, idx) => {\n              const active = selectedValue === item.value;\n              return (\n                <Menu.Item\n                  active={active}\n                  key={idx}\n                  text={item.label}\n                  onClick={() => handleItemClick(item)}\n                />\n              );\n            })\n          )}\n        </Menu>\n      }\n    >\n      <div\n        ref={divRef}\n        onMouseOver={() => renderSelectIcon('enter')}\n        onMouseLeave={() => renderSelectIcon('leave')}\n        style={style}\n      >\n        <Input\n          readOnly={!showSearch}\n          size={size}\n          disabled={disabled}\n          onChange={handleInputChange}\n          value={selectedLabel}\n          placeholder={placeholder}\n          addonAfter={\n            (selectIconType === 'close' ||\n              (selectIconType === 'loading' && loading)) && (\n              <Icon\n                type={selectIconType}\n                spin={loading && selectIconType === 'loading'}\n                onClick={resetSelectedValue}\n              />\n            )\n          }\n        />\n      </div>\n    </Dropdown>\n  );\n}\n"
  ]
}