import { useEffect, useRef } from 'react';
import ReactDOM from 'react-dom';
export var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
export default function Portal(props) {
  var {
    container
  } = props;
  var defaultNode = useRef();
  var containerRef = useRef(container);
  useEffect(() => {
    return () => {
      if (defaultNode.current && containerRef.current) {
        containerRef.current.removeChild(defaultNode.current);
        defaultNode.current = undefined;
      }
    };
  }, []);

  if (!canUseDOM) {
    return null;
  }

  if (!containerRef.current) {
    containerRef.current = document.body;
  }

  if (!defaultNode.current) {
    defaultNode.current = document.createElement('div');
    containerRef.current.appendChild(defaultNode.current);
  }

  return /*#__PURE__*/ReactDOM.createPortal(props.children, defaultNode.current);
}
//# sourceMappingURL=index.js.map