"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _utils = require("@uiw/utils");

var _Thead = _interopRequireDefault(require("./Thead"));

var _util = require("./util");

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["prefixCls", "className", "columns", "data", "title", "footer", "bordered", "onCell", "onCellHead"];

var _default = function _default() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'w-table' : _props$prefixCls,
      className = props.className,
      _props$columns = props.columns,
      columns = _props$columns === void 0 ? [] : _props$columns,
      _props$data = props.data,
      data = _props$data === void 0 ? [] : _props$data,
      title = props.title,
      footer = props.footer,
      bordered = props.bordered,
      _props$onCell = props.onCell,
      onCell = _props$onCell === void 0 ? _utils.noop : _props$onCell,
      _props$onCellHead = props.onCellHead,
      onCellHead = _props$onCellHead === void 0 ? _utils.noop : _props$onCellHead,
      other = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var cls = [prefixCls, className, bordered ? "".concat(prefixCls, "-bordered") : null].filter(Boolean).join(' ').trim();

  var _getLevelItems = (0, _util.getLevelItems)(columns),
      header = _getLevelItems.header,
      render = _getLevelItems.render,
      ellipsis = _getLevelItems.ellipsis;

  var keys = (0, _util.getAllColumnsKeys)(columns);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    className: cls
  }, other), {}, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("table", {
      style: ellipsis ? {
        tableLayout: 'fixed'
      } : {},
      children: [title && /*#__PURE__*/(0, _jsxRuntime.jsx)("caption", {
        children: title
      }), columns && columns.length > 0 && /*#__PURE__*/(0, _jsxRuntime.jsx)(_Thead["default"], {
        onCellHead: onCellHead,
        data: header
      }), data && data.length > 0 && /*#__PURE__*/(0, _jsxRuntime.jsx)("tbody", {
        children: data.map(function (trData, rowNum) {
          return /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: keys.map(function (keyName, colNum) {
              var objs = {
                children: trData[keyName]
              };

              if (render[keyName]) {
                var child = render[keyName](trData[keyName], keyName, trData, rowNum, colNum);

                if ( /*#__PURE__*/_react["default"].isValidElement(child)) {
                  objs.children = child;
                } else {
                  if (child.props) {
                    objs = (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, child.props), {}, {
                      children: objs.children
                    });
                    if (child.props.rowSpan === 0 || child.props.colSpan === 0) return null;
                  }

                  if (child.children) {
                    objs.children = child.children;
                  }
                }
              }

              if (ellipsis && ellipsis[keyName]) {
                objs.className = "".concat(prefixCls, "-ellipsis");
              }

              return /*#__PURE__*/(0, _react.createElement)("td", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, objs), {}, {
                key: colNum,
                onClick: function onClick(evn) {
                  return onCell(trData, {
                    rowNum: rowNum,
                    colNum: colNum,
                    keyName: keyName
                  }, evn);
                }
              }));
            })
          }, rowNum);
        })
      }), props.children]
    }), footer && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "".concat(prefixCls, "-footer"),
      children: footer
    })]
  }));
};

exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=index.js.map