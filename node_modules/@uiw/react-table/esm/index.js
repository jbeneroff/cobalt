import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "className", "columns", "data", "title", "footer", "bordered", "onCell", "onCellHead"];
import React from 'react';
import { noop } from '@uiw/utils';
import Thead from './Thead';
import { getLevelItems, getAllColumnsKeys } from './util';
import "./style/index.css";
import { jsx as _jsx } from "react/jsx-runtime";
import { createElement as _createElement } from "react";
import { jsxs as _jsxs } from "react/jsx-runtime";
export default (function (props) {
  if (props === void 0) {
    props = {};
  }

  var {
    prefixCls = 'w-table',
    className,
    columns = [],
    data = [],
    title,
    footer,
    bordered,
    onCell = noop,
    onCellHead = noop
  } = props,
      other = _objectWithoutPropertiesLoose(props, _excluded);

  var cls = [prefixCls, className, bordered ? prefixCls + "-bordered" : null].filter(Boolean).join(' ').trim();
  var {
    header,
    render,
    ellipsis
  } = getLevelItems(columns);
  var keys = getAllColumnsKeys(columns);
  return /*#__PURE__*/_jsxs("div", _extends({
    className: cls
  }, other, {
    children: [/*#__PURE__*/_jsxs("table", {
      style: ellipsis ? {
        tableLayout: 'fixed'
      } : {},
      children: [title && /*#__PURE__*/_jsx("caption", {
        children: title
      }), columns && columns.length > 0 && /*#__PURE__*/_jsx(Thead, {
        onCellHead: onCellHead,
        data: header
      }), data && data.length > 0 && /*#__PURE__*/_jsx("tbody", {
        children: data.map((trData, rowNum) => /*#__PURE__*/_jsx("tr", {
          children: keys.map((keyName, colNum) => {
            var objs = {
              children: trData[keyName]
            };

            if (render[keyName]) {
              var child = render[keyName](trData[keyName], keyName, trData, rowNum, colNum);

              if ( /*#__PURE__*/React.isValidElement(child)) {
                objs.children = child;
              } else {
                if (child.props) {
                  objs = _extends({}, child.props, {
                    children: objs.children
                  });
                  if (child.props.rowSpan === 0 || child.props.colSpan === 0) return null;
                }

                if (child.children) {
                  objs.children = child.children;
                }
              }
            }

            if (ellipsis && ellipsis[keyName]) {
              objs.className = prefixCls + "-ellipsis";
            }

            return /*#__PURE__*/_createElement("td", _extends({}, objs, {
              key: colNum,
              onClick: evn => onCell(trData, {
                rowNum,
                colNum,
                keyName
              }, evn)
            }));
          })
        }, rowNum))
      }), props.children]
    }), footer && /*#__PURE__*/_jsx("div", {
      className: prefixCls + "-footer",
      children: footer
    })]
  }));
});
//# sourceMappingURL=index.js.map