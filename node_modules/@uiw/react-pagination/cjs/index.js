"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Pagination;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["className", "prefixCls", "alignment", "size", "total", "pageSize", "current", "onChange", "divider"];

function Pagination(props) {
  var className = props.className,
      _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'w-pagination' : _props$prefixCls,
      _props$alignment = props.alignment,
      alignment = _props$alignment === void 0 ? 'left' : _props$alignment,
      _props$size = props.size,
      size = _props$size === void 0 ? 'default' : _props$size,
      _props$total = props.total,
      total = _props$total === void 0 ? 0 : _props$total,
      _props$pageSize = props.pageSize,
      pageSize = _props$pageSize === void 0 ? 10 : _props$pageSize,
      _props$current = props.current,
      currentNumber = _props$current === void 0 ? 1 : _props$current,
      _props$onChange = props.onChange,
      onChange = _props$onChange === void 0 ? function () {
    return null;
  } : _props$onChange,
      divider = props.divider,
      other = (0, _objectWithoutProperties2["default"])(props, _excluded);

  var _useState = (0, _react.useState)(currentNumber),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      current = _useState2[0],
      setCurrent = _useState2[1];

  (0, _react.useEffect)(function () {
    return setCurrent(currentNumber);
  }, [currentNumber]);
  var cls = [prefixCls, className, divider ? 'divider' : null, size].filter(Boolean).join(' ').trim();
  var initPageSoure = (0, _react.useMemo)(function () {
    var data = [{
      type: 'prev',
      disabled: current === 1
    }];
    var count = Math.ceil(total / pageSize);
    var itemCount = count <= 5 ? count : 5;
    var num = 0;
    var basic = 0;

    if (current > 3 && count > 5) {
      data.push({
        label: 1
      });
    }

    if (current > 4 && count > 6) {
      data.push({
        type: 'jumpPrev',
        label: '•••',
        "goto": 5
      });
    }

    while (num < itemCount) {
      num += 1;

      if (current > 3 && count > 5) {
        basic = current - 3;
      }

      var label = num + basic;

      if (count - current === 0 && count > 5) {
        label -= 2;
      }

      if (count - current === 1 && count > 5) {
        label -= 1;
      }

      if (label <= count) {
        data.push({
          label: label,
          active: current === label
        });
      }
    }

    if (current + 3 < count && count > 6) {
      data.push({
        type: 'jumpNext',
        label: '•••',
        "goto": 5
      });
    }

    if (current + 2 < count && count > 5) {
      data.push({
        label: count
      });
    }

    data.push({
      type: 'next',
      disabled: current === count
    });
    return data; // return [
    //   { type: 'prev', disabled: true },
    //   { type: 'jumpPrev', label: '•••', goto: 5 },
    //   { label: 1 },
    //   { label: 2, active: true },
    //   { label: 3 },
    //   { label: 4 },
    //   { type: 'jumpPrev', label: '•••', goto: 5 },
    //   { type: 'next' },
    // ];
  }, [current, total, pageSize]);

  function handleClick(item) {
    if (item.active || item.disabled) {
      return;
    }

    var count = Math.ceil(total / pageSize);
    var state = {};

    if (item.label) {
      state.current = item.label;
    }

    if (item.type === 'prev') {
      state.current = current - 1 > 0 ? current - 1 : 1;
    }

    if (item.type === 'next') {
      state.current = current + 1 <= count ? current + 1 : count;
    }

    if (/^(jumpPrev|jumpNext)/.test(item.type) && item["goto"]) {
      state.current = item.type === 'jumpPrev' ? current - item["goto"] : current + item["goto"];

      if (state.current > count) {
        state.current = count;
      }

      if (state.current < 1) {
        state.current = 1;
      }
    }

    setCurrent(state.current);
    onChange && onChange(state.current, total, pageSize);
  }

  return /*#__PURE__*/(0, _jsxRuntime.jsx)("ul", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    className: cls
  }, other), {}, {
    children: initPageSoure.map(function (item, idx) {
      // eslint-disable-next-line jsx-a11y/anchor-is-valid
      var label = /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
        children: item.label
      });

      if (/^(prev|next)$/.test(item.type)) {
        // eslint-disable-next-line jsx-a11y/anchor-is-valid
        label = /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
          className: "arrow ".concat(item.type)
        });
      }

      return /*#__PURE__*/(0, _jsxRuntime.jsx)("li", {
        className: [item.active ? 'active' : null, item.disabled ? 'disabled' : null].filter(Boolean).join(' ').trim(),
        onClick: function onClick() {
          return handleClick(item);
        },
        children: label
      }, idx);
    })
  }));
}

module.exports = exports.default;
//# sourceMappingURL=index.js.map