{
  "version": 3,
  "sources": [
    "../src/Item.tsx"
  ],
  "names": [
    "React",
    "Fragment",
    "Item",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "children",
    "extra",
    "tagName",
    "active",
    "resetProps",
    "cls",
    "disabled",
    "filter",
    "Boolean",
    "join",
    "trim",
    "TagName",
    "href",
    "createElement",
    "displayName"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAaA,IAAMC,IAAI,gBAAGF,KAAK,CAACG,UAAN,CAAgD,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC3E,MAAM;AACJC,IAAAA,SAAS,GAAG,aADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,OAAO,GAAG,KALN;AAMJC,IAAAA,MAAM,GAAG;AANL,MAQFP,KARJ;AAAA,MAOKQ,UAPL,iCAQIR,KARJ;;AASA,MAAMS,GAAG,GAAG,CACVP,SADU,EAEVC,SAFU,EAGVH,KAAK,CAACU,QAAN,GAAiB,YAAjB,GAAgC,IAHtB,EAIVH,MAAM,GAAG,UAAH,GAAgB,IAJZ,EAMTI,MANS,CAMFC,OANE,EAOTC,IAPS,CAOJ,GAPI,EAQTC,IARS,EAAZ;AASA,MAAMC,OAAO,GAAGf,KAAK,CAACgB,IAAN,IAAc,OAAOV,OAAP,KAAmB,QAAjC,GAA4C,GAA5C,GAAkDA,OAAlE;AACA,sBAAOV,KAAK,CAACqB,aAAN,CACLF,OADK,eAGAP,UAHA;AAIHL,IAAAA,SAAS,EAAEM,GAJR;AAKHR,IAAAA;AALG,mBAOL,KAAC,QAAD;AAAA,cACG,CAACI,KAAD,IAAUG,UAAU,CAACQ,IAArB,GACCZ,QADD,gBAGC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAKF,SAAL,UAAd;AAAA,kBAAsCE;AAAtC,QADF,eAEE;AAAK,QAAA,SAAS,EAAKF,SAAL,WAAd;AAAA,kBAAuCG;AAAvC,QAFF;AAAA;AAJJ,IAPK,CAAP;AAkBD,CAtCY,CAAb;AAwCAP,IAAI,CAACoB,WAAL,GAAmB,WAAnB;AAEA,eAAepB,IAAf",
  "sourcesContent": [
    "import React, { Fragment } from 'react';\nimport { IProps } from '@uiw/utils';\n\ntype ElementTag<T = any> = T extends HTMLElement ? React.HTMLProps<T> : T;\n\nexport interface ListItemProps<T = HTMLDivElement> extends IProps, ElementTag {\n  disabled?: boolean;\n  active?: boolean;\n  extra?: React.ReactNode;\n  href?: string;\n  tagName?: T extends HTMLElement ? keyof JSX.IntrinsicElements : T;\n}\n\nconst Item = React.forwardRef<HTMLDivElement, ListItemProps>((props, ref) => {\n  const {\n    prefixCls = 'w-list-item',\n    className,\n    children,\n    extra,\n    tagName = 'div',\n    active = false,\n    ...resetProps\n  } = props;\n  const cls = [\n    prefixCls,\n    className,\n    props.disabled ? 'w-disabled' : null,\n    active ? 'w-active' : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  const TagName = props.href && typeof tagName === 'string' ? 'a' : tagName;\n  return React.createElement(\n    TagName,\n    {\n      ...resetProps,\n      className: cls,\n      ref,\n    },\n    <Fragment>\n      {!extra || resetProps.href ? (\n        children\n      ) : (\n        <>\n          <div className={`${prefixCls}-main`}>{children}</div>\n          <div className={`${prefixCls}-extra`}>{extra}</div>\n        </>\n      )}\n    </Fragment>,\n  );\n});\n\nItem.displayName = 'List.Item';\n\nexport default Item;\n"
  ]
}