{
  "version": 3,
  "sources": [
    "../../src/util/getBordersSize.ts"
  ],
  "names": [
    "getBordersSize",
    "styles",
    "axis",
    "sideA",
    "sideB",
    "parseFloat"
  ],
  "mappings": "AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,SAASA,cAAT,CACbC,MADa,EAEbC,IAFa,EAGL;AACR,MAAMC,KAAa,GAAGD,IAAI,KAAK,GAAT,GAAe,MAAf,GAAwB,KAA9C;AACA,MAAME,KAAa,GAAGD,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6B,QAAnD;AACA,SACEE,UAAU,CAACJ,MAAM,YAAUE,KAAV,WAAP,CAAV,GACAE,UAAU,CAACJ,MAAM,YAAUG,KAAV,WAAP,CAFZ;AAID",
  "sourcesContent": [
    "export interface BordersSize extends CSSStyleDeclaration {\n  [key: string]: any;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(\n  styles: BordersSize,\n  axis: 'x' | 'y',\n): number {\n  const sideA: string = axis === 'x' ? 'Left' : 'Top';\n  const sideB: string = sideA === 'Left' ? 'Right' : 'Bottom';\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n"
  ]
}