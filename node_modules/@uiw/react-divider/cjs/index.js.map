{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "children",
    "dashed",
    "type",
    "align",
    "restProps",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim"
  ],
  "mappings": ";;;;;;;;;;;;;AAAA;;;;;;4BAUeA,kBAAMC,UAAN,CAA+C,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5E,yBAQID,KARJ,CACEE,SADF;AAAA,MACEA,SADF,iCACc,WADd;AAAA,MAEEC,SAFF,GAQIH,KARJ,CAEEG,SAFF;AAAA,MAGEC,QAHF,GAQIJ,KARJ,CAGEI,QAHF;AAAA,sBAQIJ,KARJ,CAIEK,MAJF;AAAA,MAIEA,MAJF,8BAIW,KAJX;AAAA,oBAQIL,KARJ,CAKEM,IALF;AAAA,MAKEA,IALF,4BAKS,YALT;AAAA,qBAQIN,KARJ,CAMEO,KANF;AAAA,MAMEA,KANF,6BAMU,QANV;AAAA,MAOKC,SAPL,6CAQIR,KARJ;AASA,MAAMS,GAAG,GAAG,CACVN,SADU,EAEVD,SAFU,EAGVA,SAAS,IAAII,IAAb,aAAuBJ,SAAvB,cAAoCI,IAApC,IAA6C,IAHnC,EAIVJ,SAAS,IAAIK,KAAb,aAAwBL,SAAxB,cAAqCK,KAArC,IAA+C,IAJrC,EAKVH,QAAQ,aAAMF,SAAN,kBAA8B,IAL5B,EAMV,CAAC,CAACG,MAAF,aAAcH,SAAd,eAAmC,IANzB,EAQTQ,MARS,CAQFC,OARE,EASTC,IATS,CASJ,GATI,EAUTC,IAVS,EAAZ;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEJ;AAAhB,KAAyBD,SAAzB;AAAoC,IAAA,GAAG,EAAEP,GAAzC;AAAA,cACGG,QAAQ,iBACP;AAAM,MAAA,SAAS,YAAKF,SAAL,gBAAf;AAAA,gBAA6CE;AAA7C;AAFJ,KADF;AAOD,CA5Bc,C",
  "sourcesContent": [
    "import React from 'react';\nimport { IProps, HTMLDivProps } from '@uiw/utils';\nimport './style/index.less';\n\nexport interface DividerProps extends IProps, HTMLDivProps {\n  dashed?: boolean;\n  type?: 'horizontal' | 'vertical';\n  align?: 'left' | 'right' | 'center';\n}\n\nexport default React.forwardRef<HTMLDivElement, DividerProps>((props, ref) => {\n  const {\n    prefixCls = 'w-divider',\n    className,\n    children,\n    dashed = false,\n    type = 'horizontal',\n    align = 'center',\n    ...restProps\n  } = props;\n  const cls = [\n    className,\n    prefixCls,\n    prefixCls && type ? `${prefixCls}-${type}` : null,\n    prefixCls && align ? `${prefixCls}-${align}` : null,\n    children ? `${prefixCls}-with-text` : null,\n    !!dashed ? `${prefixCls}-dashed` : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  return (\n    <div className={cls} {...restProps} ref={ref}>\n      {children && (\n        <span className={`${prefixCls}-inner-text`}>{children}</span>\n      )}\n    </div>\n  );\n});\n"
  ]
}