import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "className", "hasSider", "children"];
import React from 'react';
import { jsx as _jsx } from "react/jsx-runtime";
export var LayoutContext = /*#__PURE__*/React.createContext({
  siderHook: {
    addSider: () => null,
    removeSider: () => null
  }
});
export default class Layout extends React.Component {
  constructor() {
    super(...arguments);
    this.state = {
      siders: []
    };
  }

  getSiderHook() {
    return {
      addSider: id => {
        this.setState(state => ({
          siders: [...state.siders, id]
        }));
      },
      removeSider: id => {
        this.setState(state => ({
          siders: state.siders.filter(currentId => currentId !== id)
        }));
      }
    };
  }

  render() {
    var _this$props = this.props,
        {
      prefixCls,
      className,
      hasSider,
      children
    } = _this$props,
        other = _objectWithoutPropertiesLoose(_this$props, _excluded);

    return /*#__PURE__*/_jsx(LayoutContext.Provider, {
      value: {
        siderHook: this.getSiderHook()
      },
      children: /*#__PURE__*/_jsx("section", _extends({
        className: [prefixCls, className, (typeof hasSider === 'boolean' ? hasSider : this.state.siders.length > 0) ? prefixCls + "-has-sider" : null].filter(Boolean).join(' ').trim()
      }, other, {
        children: children
      }))
    });
  }

}
Layout.Header = void 0;
Layout.Footer = void 0;
Layout.Sider = void 0;
Layout.Content = void 0;
Layout.defaultProps = {
  prefixCls: 'w-layout'
};
//# sourceMappingURL=Layout.js.map