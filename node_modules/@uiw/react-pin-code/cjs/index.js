"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _utils = require("@uiw/utils");

var _reactInput = _interopRequireDefault(require("@uiw/react-input"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["prefixCls", "placeholder", "value", "autoFocus", "className", "size", "style", "disabled", "onChange", "onBlur", "onFocus"];

function InternalPinCode() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var ref = arguments.length > 1 ? arguments[1] : undefined;
  var _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'w-pin-code' : _props$prefixCls,
      _props$placeholder = props.placeholder,
      placeholder = _props$placeholder === void 0 ? 'â—‹' : _props$placeholder,
      _props$value = props.value,
      value = _props$value === void 0 ? [] : _props$value,
      autoFocus = props.autoFocus,
      className = props.className,
      _props$size = props.size,
      size = _props$size === void 0 ? 'default' : _props$size,
      style = props.style,
      disabled = props.disabled,
      _props$onChange = props.onChange,
      onChange = _props$onChange === void 0 ? _utils.noop : _props$onChange,
      _props$onBlur = props.onBlur,
      onBlur = _props$onBlur === void 0 ? _utils.noop : _props$onBlur,
      _props$onFocus = props.onFocus,
      onFocus = _props$onFocus === void 0 ? _utils.noop : _props$onFocus,
      otherProps = (0, _objectWithoutProperties2["default"])(props, _excluded);

  var _useState = (0, _react.useState)({}),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 1),
      input = _useState2[0];

  var _useState3 = (0, _react.useState)(placeholder),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      placehold = _useState4[0],
      setPlacehold = _useState4[1];

  var _useState5 = (0, _react.useState)(value),
      _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
      values = _useState6[0],
      setValues = _useState6[1];

  var cls = [prefixCls, className, size ? "".concat(prefixCls, "-").concat(size) : null, disabled ? 'disabled' : null].filter(Boolean).join(' ').trim();

  function handleChange(e, idx) {
    var val = e.target.value;
    val = val.charAt(val.length - 1);
    var arr = (0, _toConsumableArray2["default"])(values);

    if (Number(val) > -1 && val) {
      e.currentTarget.value = val;
      arr[idx] = val;

      if (input[idx + 1]) {
        input[idx + 1].focus();
      }

      setValues(arr);
    } else if (!val) {
      arr[idx] = '';
      setValues(arr);
    }
  }

  function handleKeyDown(e, idx) {
    var val = e.currentTarget.value;
    var key = e.key.toLocaleLowerCase();

    if (!val && input[idx - 1] && /(backspace|delete)/.test(key)) {
      input[idx - 1].focus();
    }
  }

  (0, _react.useEffect)(function () {
    if (values !== value) {
      onChange(values);
    }
  }, [values]);

  function handleBlur(event) {
    setPlacehold(placeholder);
    onBlur(event);
  }

  function handleFocus(event) {
    setPlacehold('');
    onFocus(event);
  }

  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    className: cls,
    style: style
  }, otherProps), {}, {
    ref: ref,
    children: (0, _toConsumableArray2["default"])(values).map(function (val, key) {
      var inpProps = {
        min: 0,
        type: 'text',
        inputMode: 'numeric',
        autoComplete: 'off',
        value: val,
        onChange: function onChange(e) {
          return handleChange(e, key);
        },
        onKeyDown: function onKeyDown(e) {
          return handleKeyDown(e, key);
        },
        onBlur: function onBlur(e) {
          return handleBlur(e);
        },
        onFocus: function onFocus(e) {
          return handleFocus(e);
        },
        className: "".concat(prefixCls, "-inner"),
        placeholder: placehold,
        disabled: disabled,
        size: size
      };

      if (autoFocus && key === 0) {
        inpProps.autoFocus = true;
      }

      var child = /*#__PURE__*/(0, _react.createElement)(_reactInput["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
        ref: function ref(instance) {
          if (instance) {
            input[key] = instance;
          }
        }
      }, inpProps), {}, {
        key: key
      }));
      return child;
    })
  }));
}

var _default = /*#__PURE__*/_react["default"].forwardRef(InternalPinCode);

exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=index.js.map