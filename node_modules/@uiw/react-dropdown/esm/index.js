import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "placement", "className", "menu", "children", "disabled"];
import React from 'react';
import OverlayTrigger from '@uiw/react-overlay-trigger';
import { useMemo } from 'react';
import { jsx as _jsx } from "react/jsx-runtime";
export default function Dropdown(props) {
  var {
    prefixCls = 'w-dropdown',
    placement = 'bottomLeft',
    className,
    menu,
    children,
    disabled
  } = props,
      other = _objectWithoutPropertiesLoose(props, _excluded);

  var cls = useMemo(() => [prefixCls, className].filter(Boolean).join(' ').trim(), [prefixCls, className]);
  return /*#__PURE__*/_jsx(OverlayTrigger, _extends({
    isOutside: true,
    autoAdjustOverflow: true,
    className: cls,
    disabled: disabled,
    placement: placement
  }, other, {
    overlay: menu,
    children: /*#__PURE__*/React.cloneElement(children, Object.assign({}, children.props))
  }));
}
//# sourceMappingURL=index.js.map