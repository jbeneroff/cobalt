"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _reactIcon = _interopRequireDefault(require("@uiw/react-icon"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["prefixCls", "className", "style", "size", "type", "preIcon", "addonAfter"];

var _default = /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
  var _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'w-input' : _props$prefixCls,
      className = props.className,
      style = props.style,
      _props$size = props.size,
      size = _props$size === void 0 ? 'default' : _props$size,
      _props$type = props.type,
      type = _props$type === void 0 ? 'text' : _props$type,
      _props$preIcon = props.preIcon,
      preIcon = _props$preIcon === void 0 ? null : _props$preIcon,
      addonAfter = props.addonAfter,
      otherProps = (0, _objectWithoutProperties2["default"])(props, _excluded);

  var inputRef = _react["default"].useRef(null);

  var addonRef = _react["default"].useRef(null);

  (0, _react.useImperativeHandle)(ref, function () {
    return inputRef.current;
  });
  var cls = [prefixCls, className, size ? "".concat(prefixCls, "-").concat(size) : null, addonAfter ? "".concat(prefixCls, "-addon") : null, props.disabled ? 'disabled' : null].filter(Boolean).join(' ').trim();
  (0, _react.useEffect)(function () {
    computedInputPadding();
  });

  function computedInputPadding() {
    if (addonRef.current && inputRef.current) {
      var input = window && window.getComputedStyle(addonRef.current, null);
      inputRef.current.style.paddingRight = "".concat(addonRef.current.clientWidth + parseInt(input.right, 10) * 2, "px");
    }
  }

  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: cls,
    style: style,
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactIcon["default"], {
      type: preIcon
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("input", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
      ref: inputRef,
      type: type,
      autoComplete: "off"
    }, otherProps), {}, {
      className: "".concat(prefixCls, "-inner")
    })), addonAfter && /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      className: "".concat(prefixCls, "-addon-after"),
      ref: addonRef,
      children: addonAfter
    })]
  });
});

exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=index.js.map