import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "panelNum", "className", "panelDate", "onSelected"];
import React, { useState } from 'react';
import { noop } from '@uiw/utils';
import "./style/year-month.css";
import { jsx as _jsx } from "react/jsx-runtime";
export function DatePickerYear(props) {
  var {
    prefixCls = 'w-datepicker',
    panelNum = [-7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    className,
    onSelected = noop
  } = props,
      other = _objectWithoutPropertiesLoose(props, _excluded);

  var [activeYear, setActiveYear] = useState(props.panelDate);

  function handleSelected(year, idx) {
    if (idx === 0 || idx === panelNum.length - 1) {
      var date = new Date(activeYear);
      date.setFullYear(year);
      setActiveYear(date);
      onSelected(year, true);
    } else {
      onSelected(year);
    }
  }

  return /*#__PURE__*/_jsx("div", _extends({
    className: [prefixCls ? prefixCls + "-year" : null, className].filter(Boolean).join(' ').trim()
  }, other, {
    children: panelNum && panelNum.map((_, idx) => {
      var selectedYear = activeYear.getFullYear();
      var year = selectedYear + panelNum[idx];
      return /*#__PURE__*/_jsx("div", {
        className: [selectedYear === year ? 'selected' : null, idx === 0 || idx === panelNum.length - 1 ? 'paging' : null].filter(Boolean).join(' ').trim(),
        children: /*#__PURE__*/_jsx("span", {
          onClick: () => handleSelected(year, idx),
          children: year
        })
      }, idx);
    })
  }));
}
//# sourceMappingURL=DatePickerYear.js.map