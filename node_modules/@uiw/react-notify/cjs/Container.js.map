{
  "version": 3,
  "sources": [
    "../src/Container.tsx"
  ],
  "names": [
    "notifys",
    "timer",
    "Container",
    "props",
    "placement",
    "key",
    "isOpen",
    "duration",
    "setTimeout",
    "closed",
    "setState",
    "clearTimeout",
    "willUnmount",
    "prefixCls",
    "state",
    "Object",
    "keys",
    "map",
    "description",
    "alertProps",
    "type",
    "React",
    "Component"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;AAoBA,IAAMA,OAAyB,GAAG,EAAlC;AACA,IAAMC,KAA6B,GAAG,EAAtC;;IAEqBC,S;;;;;;;;;;;;;;;8FAQY;AAC7BF,MAAAA,OAAO,EAAE;AADoB,K;;;;;;WAG/B,gBAAcG,KAAd,EAA8C;AAAA;;AAC5C,UAAQC,SAAR,GAA2BD,KAA3B,CAAQC,SAAR;AAAA,UAAmBC,GAAnB,GAA2BF,KAA3B,CAAmBE,GAAnB;;AACA,UAAI,CAACL,OAAO,CAACI,SAAD,CAAZ,EAAsC;AACpCJ,QAAAA,OAAO,CAACI,SAAD,CAAP,GAAkC,EAAlC;AACD;;AACDD,MAAAA,KAAK,CAACG,MAAN,GAAe,KAAf;AACAN,MAAAA,OAAO,CAACI,SAAD,CAAP,CAAgCC,GAAhC,IAAiDF,KAAjD;;AACA,UAAIA,KAAK,CAACI,QAAV,EAAoB;AAClBN,QAAAA,KAAK,CAACI,GAAD,CAAL,GAAuBG,UAAU,CAAC,YAAM;AACtC,UAAA,MAAI,CAACC,MAAL,CAAYJ,GAAZ,EAA2BD,SAA3B;AACD,SAFgC,EAE9BD,KAAK,CAACI,QAFwB,CAAjC;AAGD;;AACD,WAAKG,QAAL,CACE;AACEV,QAAAA,OAAO,EAAPA,OADF;AAEEI,QAAAA,SAAS,EAATA;AAFF,OADF,EAKE,YAAM;AACJJ,QAAAA,OAAO,CAACI,SAAD,CAAP,CAAgCC,GAAhC,EAA+CC,MAA/C,GAAwD,IAAxD;;AACA,QAAA,MAAI,CAACI,QAAL,CAAc;AAAEV,UAAAA,OAAO,EAAPA;AAAF,SAAd;AACD,OARH;AAUD;;;WACD,gBAAcK,GAAd,EAA2BD,SAA3B,EAAkD;AAChD,UAAI,CAACC,GAAD,IAAQ,CAACD,SAAT,IAAsB,CAACJ,OAAO,CAACI,SAAD,CAAP,CAAmBC,GAAnB,CAA3B,EAAoD;AAClD;AACD;;AACDL,MAAAA,OAAO,CAACI,SAAD,CAAP,CAAmBC,GAAnB,EAAwBC,MAAxB,GAAiC,KAAjC;AACA,UAAMH,KAA8B,GAAGH,OAAO,CAACI,SAAD,CAAP,CAAmBC,GAAnB,CAAvC;AACA,WAAKK,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAPA;AAAF,OAAd,EAA2B,YAAM;AAC/BW,QAAAA,YAAY,CAACV,KAAK,CAACI,GAAD,CAAN,CAAZ;AACA,eAAOJ,KAAK,CAACI,GAAD,CAAZ;AACA,eAAOL,OAAO,CAACI,SAAD,CAAP,CAAmBC,GAAnB,CAAP;;AACA,YAAIF,KAAK,IAAIA,KAAK,CAACS,WAAnB,EAAgC;AAC9BT,UAAAA,KAAK,CAACS,WAAN,CAAkBT,KAAlB,EAAyBH,OAAzB;AACD;AACF,OAPD;AAQD;;;WACD,kBAAS;AAAA;;AACP,UAAQa,SAAR,GAAsB,KAAKV,KAA3B,CAAQU,SAAR;AACA,UAAQT,SAAR,GAAsB,KAAKU,KAA3B,CAAQV,SAAR;AACA,0BACE,qBAAC,iBAAD,CAAO,QAAP;AAAA,kBACGA,SAAS,IACRW,MAAM,CAACC,IAAP,CAAY,KAAKF,KAAL,CAAWd,OAAX,CAAmBI,SAAnB,CAAZ,EAA2Ca,GAA3C,CAA+C,UAACZ,GAAD,EAAS;AACtD,sCAA+C,MAAI,CAACS,KAAL,CAAWd,OAAX,CAC7CI,SAD6C,EAE7CC,GAF6C,CAA/C;AAAA,cAAQa,WAAR,yBAAQA,WAAR;AAAA,cAAqBZ,MAArB,yBAAqBA,MAArB;AAAA,cAAgCa,UAAhC;;AAGA,cAAIA,UAAU,CAACC,IAAX,KAAoB,MAAxB,EAAgC;AAC9B,mBAAOD,UAAU,CAACC,IAAlB;AACD;;AACD,8BACE,qBAAC,sBAAD;AACE,YAAA,SAAS,EAAEP,SADb;AAGE,YAAA,SAAS,EAAE,KAHb;AAIE,YAAA,KAAK,EAAE;AAJT,aAKOM,UALP;AAME,YAAA,SAAS,EAAE,KANb;AAOE,YAAA,WAAW,EAAE,KAPf;AAQE,YAAA,MAAM,EAAEb,MARV;AASE,YAAA,OAAO,EAAEY;AATX,cAEOb,GAFP,CADF;AAaD,SApBD;AAFJ,QADF;AA0BD;;;EA9EoCgB,kBAAMC,S;;;iCAAxBpB,S,kBAI0B;AAC3CW,EAAAA,SAAS,EAAE,UADgC;AAE3CT,EAAAA,SAAS,EAAE;AAFgC,C",
  "sourcesContent": [
    "import React from 'react';\nimport Alert, { AlertProps } from '@uiw/react-alert';\nimport { IProps } from '@uiw/utils';\nimport { NotificationCreateProps } from './index';\n\nexport type Placement = 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nexport interface ContainerProps extends IProps {\n  placement?: Placement;\n}\nexport interface ContainerState {\n  placement?: Placement;\n  notifys: ContainerNotifys;\n}\n\nexport type ContainerNotifys = {\n  [placement: string]: {\n    [key: string]: NotificationCreateProps;\n  };\n};\n\nconst notifys: ContainerNotifys = {};\nconst timer: { [key: string]: any } = {};\n\nexport default class Container extends React.Component<\n  ContainerProps,\n  ContainerState\n> {\n  public static defaultProps: ContainerProps = {\n    prefixCls: 'w-notify',\n    placement: 'topRight',\n  };\n  public state: ContainerState = {\n    notifys: {},\n  };\n  public create(props: NotificationCreateProps) {\n    const { placement, key } = props;\n    if (!notifys[placement as Placement]) {\n      notifys[placement as Placement] = {};\n    }\n    props.isOpen = false;\n    notifys[placement as Placement][key as string] = props;\n    if (props.duration) {\n      timer[key as string] = setTimeout(() => {\n        this.closed(key as string, placement);\n      }, props.duration);\n    }\n    this.setState(\n      {\n        notifys,\n        placement,\n      },\n      () => {\n        notifys[placement as Placement][key as string].isOpen = true;\n        this.setState({ notifys });\n      },\n    );\n  }\n  public closed(key: string, placement?: Placement) {\n    if (!key || !placement || !notifys[placement][key]) {\n      return;\n    }\n    notifys[placement][key].isOpen = false;\n    const props: NotificationCreateProps = notifys[placement][key];\n    this.setState({ notifys }, () => {\n      clearTimeout(timer[key]);\n      delete timer[key];\n      delete notifys[placement][key];\n      if (props && props.willUnmount) {\n        props.willUnmount(props, notifys);\n      }\n    });\n  }\n  render() {\n    const { prefixCls } = this.props;\n    const { placement } = this.state;\n    return (\n      <React.Fragment>\n        {placement &&\n          Object.keys(this.state.notifys[placement]).map((key) => {\n            const { description, isOpen, ...alertProps } = this.state.notifys[\n              placement\n            ][key];\n            if (alertProps.type === 'open') {\n              delete alertProps.type;\n            }\n            return (\n              <Alert\n                className={prefixCls}\n                key={key}\n                useButton={false}\n                width={320}\n                {...(alertProps as AlertProps)}\n                usePortal={false}\n                hasBackdrop={false}\n                isOpen={isOpen}\n                content={description}\n              />\n            );\n          })}\n      </React.Fragment>\n    );\n  }\n}\n"
  ]
}