{
  "version": 3,
  "sources": [
    "../src/Sider.tsx"
  ],
  "names": [
    "React",
    "useEffect",
    "useState",
    "useMemo",
    "randomid",
    "LayoutContext",
    "Sider",
    "props",
    "prefixCls",
    "className",
    "style",
    "children",
    "width",
    "collapsedWidth",
    "collapsed",
    "siderHook",
    "other",
    "sliderId",
    "rawWidth",
    "setRawWidth",
    "addSider",
    "removeSider",
    "divStyle",
    "flex",
    "maxWidth",
    "minWidth",
    "filter",
    "Boolean",
    "join",
    "trim",
    "context"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,aAAT,QAAkD,UAAlD;;;AASA,SAASC,KAAT,CAAeC,KAAf,EAA8D;AAAA,MAA/CA,KAA+C;AAA/CA,IAAAA,KAA+C,GAAvC,EAAuC;AAAA;;AAC5D,MAAM;AACJC,IAAAA,SAAS,GAAG,gBADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,KAAK,GAAG,GALJ;AAMJC,IAAAA,cAAc,GAAG,EANb;AAOJC,IAAAA,SAAS,GAAG,KAPR;AAQJC,IAAAA;AARI,MAUFR,KAVJ;AAAA,MASKS,KATL,iCAUIT,KAVJ;;AAWA,MAAM,CAACU,QAAD,IAAaf,QAAQ,eAAaE,QAAQ,EAArB,CAA3B;AACA,MAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAACY,SAAS,GAAGD,cAAH,GAAoBD,KAA9B,CAAxC;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,SAAS,IAAI,CAAC,CAACA,SAAS,CAACK,QAA7B,EAAuC;AACrCL,MAAAA,SAAS,CAACK,QAAV,CAAmBH,QAAnB;AACD;;AACD,WAAO,MAAM;AACX,UAAIF,SAAS,IAAI,CAAC,CAACA,SAAS,CAACM,WAA7B,EAA0C;AACxCN,QAAAA,SAAS,CAACM,WAAV,CAAsBJ,QAAtB;AACD;AACF,KAJD;AAKD,GATQ,EASN,EATM,CAAT;AAUAd,EAAAA,OAAO,CAAC,MAAM;AACZgB,IAAAA,WAAW,CAACL,SAAS,GAAGD,cAAH,GAAoBD,KAA9B,CAAX;AACD,GAFM,EAEJ,CAACE,SAAD,CAFI,CAAP;;AAGA,MAAMQ,QAAQ,gBACTZ,KADS;AAEZa,IAAAA,IAAI,WAASL,QAFD;AAGZM,IAAAA,QAAQ,EAAEN,QAHE;AAIZO,IAAAA,QAAQ,EAAEP,QAJE;AAKZN,IAAAA,KAAK,EAAEM;AALK,IAAd;;AAOA,sBACE;AACE,IAAA,SAAS,EAAE,CAACV,SAAD,EAAYC,SAAZ,EAAuBiB,MAAvB,CAA8BC,OAA9B,EAAuCC,IAAvC,CAA4C,GAA5C,EAAiDC,IAAjD,EADb;AAEE,IAAA,KAAK,EAAEP;AAFT,KAGMN,KAHN;AAAA,cAKGL;AALH,KADF;AASD;;AAED,gBAAe,UAACJ,KAAD,EAA8B;AAAA,MAA7BA,KAA6B;AAA7BA,IAAAA,KAA6B,GAArB,EAAqB;AAAA;;AAC3C,sBACE,KAAC,aAAD,CAAe,QAAf;AAAA,cACIuB,OAAD,iBAAiC,KAAC,KAAD,eAAWvB,KAAX,EAAsBuB,OAAtB;AADpC,IADF;AAKD,CAND",
  "sourcesContent": [
    "import React, { useEffect, useState, useMemo } from 'react';\nimport { IProps, randomid } from '@uiw/utils';\nimport { LayoutContext, LayoutContextProps } from './Layout';\n\nexport interface SiderProps extends IProps {\n  children?: React.ReactNode;\n  width?: number | string;\n  collapsedWidth?: number;\n  collapsed?: boolean;\n}\n\nfunction Sider(props = {} as SiderProps & LayoutContextProps) {\n  const {\n    prefixCls = 'w-layout-sider',\n    className,\n    style,\n    children,\n    width = 200,\n    collapsedWidth = 80,\n    collapsed = false,\n    siderHook,\n    ...other\n  } = props;\n  const [sliderId] = useState(`w-layout-${randomid()}`);\n  const [rawWidth, setRawWidth] = useState(collapsed ? collapsedWidth : width);\n  useEffect(() => {\n    if (siderHook && !!siderHook.addSider) {\n      siderHook.addSider(sliderId);\n    }\n    return () => {\n      if (siderHook && !!siderHook.removeSider) {\n        siderHook.removeSider(sliderId);\n      }\n    };\n  }, []);\n  useMemo(() => {\n    setRawWidth(collapsed ? collapsedWidth : width);\n  }, [collapsed]);\n  const divStyle = {\n    ...style,\n    flex: `0 0 ${rawWidth}`,\n    maxWidth: rawWidth,\n    minWidth: rawWidth,\n    width: rawWidth,\n  };\n  return (\n    <div\n      className={[prefixCls, className].filter(Boolean).join(' ').trim()}\n      style={divStyle}\n      {...other}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default (props = {} as SiderProps) => {\n  return (\n    <LayoutContext.Consumer>\n      {(context: LayoutContextProps) => <Sider {...props} {...context} />}\n    </LayoutContext.Consumer>\n  );\n};\n"
  ]
}