{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "useEffect",
    "useRef",
    "ReactDOM",
    "canUseDOM",
    "window",
    "document",
    "createElement",
    "Portal",
    "props",
    "container",
    "defaultNode",
    "containerRef",
    "current",
    "removeChild",
    "undefined",
    "body",
    "appendChild",
    "createPortal",
    "children"
  ],
  "mappings": "AAAA,SAAgBA,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,IAAMC,SAAS,GAAG,CAAC,EACxB,OAAOC,MAAP,KAAkB,WAAlB,IACAA,MAAM,CAACC,QADP,IAEAD,MAAM,CAACC,QAAP,CAAgBC,aAHQ,CAAnB;AAsBP,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAoC;AACjD,MAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AACA,MAAME,WAAW,GAAGT,MAAM,EAA1B;AACA,MAAMU,YAAY,GAAGV,MAAM,CAA0BQ,SAA1B,CAA3B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,UAAIU,WAAW,CAACE,OAAZ,IAAuBD,YAAY,CAACC,OAAxC,EAAiD;AAC/CD,QAAAA,YAAY,CAACC,OAAb,CAAqBC,WAArB,CAAiCH,WAAW,CAACE,OAA7C;AACAF,QAAAA,WAAW,CAACE,OAAZ,GAAsBE,SAAtB;AACD;AACF,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAI,CAACX,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AACD,MAAI,CAACQ,YAAY,CAACC,OAAlB,EAA2B;AACzBD,IAAAA,YAAY,CAACC,OAAb,GAAuBP,QAAQ,CAACU,IAAhC;AACD;;AACD,MAAI,CAACL,WAAW,CAACE,OAAjB,EAA0B;AACxBF,IAAAA,WAAW,CAACE,OAAZ,GAAsBP,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqBI,WAArB,CAAiCN,WAAW,CAACE,OAA7C;AACD;;AACD,sBAAOV,QAAQ,CAACe,YAAT,CAAsBT,KAAK,CAACU,QAA5B,EAAsCR,WAAW,CAACE,OAAlD,CAAP;AACD",
  "sourcesContent": [
    "import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport interface PortalProps {\n  children?: React.ReactNode;\n  /**\n   * The HTML element that children will be mounted to.\n   * @default document.body\n   */\n  container?: HTMLElement;\n  /**\n   * Callback invoked when the children of this `Portal` have been added to the DOM.\n   * @deprecated v4.9.0+\n   */\n  onChildrenMount?: (portalElement: HTMLElement) => void;\n  /** @deprecated v4.9.0+ */\n  visible?: boolean;\n}\n\nexport default function Portal(props: PortalProps) {\n  const { container } = props;\n  const defaultNode = useRef<HTMLDivElement>();\n  const containerRef = useRef<HTMLElement | undefined>(container);\n\n  useEffect(() => {\n    return () => {\n      if (defaultNode.current && containerRef.current) {\n        containerRef.current.removeChild(defaultNode.current);\n        defaultNode.current = undefined;\n      }\n    };\n  }, []);\n\n  if (!canUseDOM) {\n    return null;\n  }\n  if (!containerRef.current) {\n    containerRef.current = document.body;\n  }\n  if (!defaultNode.current) {\n    defaultNode.current = document.createElement('div');\n    containerRef.current.appendChild(defaultNode.current);\n  }\n  return ReactDOM.createPortal(props.children, defaultNode.current);\n}\n"
  ]
}