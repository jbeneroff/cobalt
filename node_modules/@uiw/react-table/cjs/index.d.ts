import React from 'react';
import { IProps, HTMLDivProps } from '@uiw/utils';
import './style/index.less';
export declare type TableColumns = {
    title?: string | ((data: TableColumns, rowNum: number, colNum: number) => JSX.Element) | JSX.Element;
    key?: string;
    width?: number;
    colSpan?: number;
    children?: TableColumns[];
    ellipsis?: boolean;
    render?: (text: string, keyName: string, rowData: {
        [key: string]: any;
    }, rowNumber: number, columnNumber: number) => void;
    style?: React.CSSProperties;
    [key: string]: any;
};
export interface TableProps extends IProps, Omit<HTMLDivProps, 'title'> {
    prefixCls?: string;
    columns?: TableColumns[];
    data?: Record<string, string | number | JSX.Element>[];
    title?: React.ReactNode;
    footer?: React.ReactNode;
    bordered?: boolean;
    onCell?: (data: {
        [key: string]: any;
    }, options: ICellOptions, evn: React.MouseEvent<HTMLTableCellElement>) => void | React.ReactNode;
    onCellHead?: (data: TableColumns, rowNum: number, colNum: number, evn: React.MouseEvent<HTMLTableCellElement>) => void;
}
export interface ICellOptions {
    rowNum: number;
    colNum: number;
    keyName: string;
}
declare const _default: (props?: TableProps) => JSX.Element;
export default _default;
