{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "InternalPinCode",
    "props",
    "ref",
    "prefixCls",
    "placeholder",
    "value",
    "autoFocus",
    "className",
    "size",
    "style",
    "disabled",
    "onChange",
    "noop",
    "onBlur",
    "onFocus",
    "otherProps",
    "input",
    "placehold",
    "setPlacehold",
    "values",
    "setValues",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "handleChange",
    "e",
    "idx",
    "val",
    "target",
    "charAt",
    "length",
    "arr",
    "Number",
    "currentTarget",
    "focus",
    "handleKeyDown",
    "key",
    "toLocaleLowerCase",
    "test",
    "handleBlur",
    "event",
    "handleFocus",
    "map",
    "inpProps",
    "min",
    "type",
    "inputMode",
    "autoComplete",
    "onKeyDown",
    "child",
    "instance",
    "React",
    "forwardRef"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React, { useEffect, useState } from 'react';\nimport { IProps, noop } from '@uiw/utils';\nimport Input, { InputProps } from '@uiw/react-input';\nimport './style/input.less';\n\nexport interface PinCodeProps extends IProps {\n  value?: string[];\n  disabled?: boolean;\n  onChange?: (value: string[]) => void;\n  onBlur?: InputProps<{}>['onBlur'];\n  onFocus?: InputProps<{}>['onFocus'];\n  autoFocus?: boolean;\n  size?: InputProps<{}>['size'];\n  placeholder?: string;\n}\n\nfunction InternalPinCode(\n  props: PinCodeProps = {},\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    prefixCls = 'w-pin-code',\n    placeholder = 'â—‹',\n    value = [],\n    autoFocus,\n    className,\n    size = 'default',\n    style,\n    disabled,\n    onChange = noop,\n    onBlur = noop,\n    onFocus = noop,\n    ...otherProps\n  } = props;\n  const [input] = useState<{\n    [key: string]: HTMLInputElement;\n  }>({});\n  const [placehold, setPlacehold] = useState(placeholder);\n  const [values, setValues] = useState(value);\n  const cls = [\n    prefixCls,\n    className,\n    size ? `${prefixCls}-${size}` : null,\n    disabled ? 'disabled' : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>, idx: number) {\n    let val = e.target.value;\n    val = val.charAt(val.length - 1);\n    const arr = [...values];\n    if (Number(val) > -1 && val) {\n      e.currentTarget.value = val;\n      arr[idx] = val;\n      if (input[idx + 1]) {\n        input[idx + 1].focus();\n      }\n      setValues(arr);\n    } else if (!val) {\n      arr[idx] = '';\n      setValues(arr);\n    }\n  }\n  function handleKeyDown(\n    e: React.KeyboardEvent<HTMLInputElement>,\n    idx: number,\n  ) {\n    let val = e.currentTarget.value;\n    const key = e.key.toLocaleLowerCase();\n    if (!val && input[idx - 1] && /(backspace|delete)/.test(key)) {\n      input[idx - 1].focus();\n    }\n  }\n  useEffect(() => {\n    if (values !== value) {\n      onChange(values);\n    }\n  }, [values]);\n\n  function handleBlur(event: React.FocusEvent<HTMLInputElement>) {\n    setPlacehold(placeholder);\n    onBlur(event);\n  }\n  function handleFocus(event: React.FocusEvent<HTMLInputElement>) {\n    setPlacehold('');\n    onFocus(event);\n  }\n\n  return (\n    <div className={cls} style={style} {...otherProps} ref={ref}>\n      {[...values].map((val, key) => {\n        const inpProps: InputProps<{}> = {\n          min: 0,\n          type: 'text',\n          inputMode: 'numeric',\n          autoComplete: 'off',\n          value: val,\n          onChange: (e) => handleChange(e, key),\n          onKeyDown: (e) => handleKeyDown(e, key),\n          onBlur: (e) => handleBlur(e),\n          onFocus: (e) => handleFocus(e),\n          className: `${prefixCls}-inner`,\n          placeholder: placehold,\n          disabled,\n          size,\n        };\n        if (autoFocus && key === 0) {\n          inpProps.autoFocus = true;\n        }\n        const child = (\n          <Input\n            ref={(instance) => {\n              if (instance) {\n                input[key] = instance;\n              }\n            }}\n            {...inpProps}\n            key={key}\n          />\n        );\n        return child;\n      })}\n    </div>\n  );\n}\n\nexport default React.forwardRef<HTMLDivElement, PinCodeProps>(InternalPinCode);\n"
  ]
}