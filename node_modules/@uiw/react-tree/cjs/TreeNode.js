"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = TreeNode;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread3 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _reactTransitionGroup = require("react-transition-group");

var _reactIcon = _interopRequireDefault(require("@uiw/react-icon"));

var _utils = require("@uiw/utils");

var _ = require("./");

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["prefixCls", "renderTitle", "icon", "iconAnimation", "isSelected", "openKeys", "selectedKeys", "data", "level", "parent", "onItemClick", "onItemSelected"];

var Label = function Label(_ref) {
  var label = _ref.label;
  return (0, _react.useMemo)(function () {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      children: label
    });
  }, [label]);
};

function TreeNode(props) {
  var prefixCls = props.prefixCls,
      renderTitle = props.renderTitle,
      icon = props.icon,
      iconAnimation = props.iconAnimation,
      isSelected = props.isSelected,
      openKeys = props.openKeys,
      selectedKeys = props.selectedKeys,
      data = props.data,
      level = props.level,
      parent = props.parent,
      _props$onItemClick = props.onItemClick,
      onItemClick = _props$onItemClick === void 0 ? _utils.noop : _props$onItemClick,
      _props$onItemSelected = props.onItemSelected,
      onItemSelected = _props$onItemSelected === void 0 ? _utils.noop : _props$onItemSelected,
      other = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var isOpen = false;

  if (parent && parent.key) {
    isOpen = !!(openKeys && openKeys.indexOf(parent.key) > -1);
  }

  var onExit = (0, _react.useCallback)(function (node) {
    node.style.height = "".concat(node.scrollHeight, "px");
  }, []);
  var onExiting = (0, _react.useCallback)(function (node) {
    node.style.height = '1px';
  }, []);
  var onEnter = (0, _react.useCallback)(function (node, isAppearing) {
    node.style.height = '1px';
  }, []);
  var onEntering = (0, _react.useCallback)(function (node, isAppearing) {
    node.style.height = "".concat(node.scrollHeight, "px");
  }, []);
  var onEntered = (0, _react.useCallback)(function (node, isAppearing) {
    node.style.height = 'initial';
  }, []);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactTransitionGroup.CSSTransition, {
    classNames: prefixCls,
    "in": isOpen,
    timeout: 200,
    onExit: onExit,
    onExiting: onExiting,
    onEnter: onEnter,
    onEntered: onEntered,
    onEntering: onEntering,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)("ul", {
      className: [level !== 1 && isOpen ? ["".concat(prefixCls, "-open")] : null, level !== 1 && !isOpen ? ["".concat(prefixCls, "-close")] : null].filter(Boolean).join(' ').trim(),
      children: data.map(function (item, idx) {
        var _objectSpread2;

        item.parent = parent;
        var selected = !!(selectedKeys && selectedKeys.indexOf(item.key) > -1);
        var noChild = !item.children;
        var itemIsOpen = openKeys && openKeys.indexOf(item.key) > -1 && !!item.children;
        var iconItem = typeof icon === 'function' ? icon(item, {
          isOpen: !!itemIsOpen,
          noChild: noChild,
          openKeys: openKeys,
          selectedKeys: selectedKeys
        }) : icon;
        var childKeys = noChild ? [] : (0, _.getChildKeys)(item.children);
        var checkedKeys = selectedKeys ? selectedKeys.filter(function (key) {
          return childKeys.indexOf(key) > -1;
        }) : [];
        var isHalfChecked = checkedKeys.length > 0 && childKeys.length !== checkedKeys.length;
        return /*#__PURE__*/(0, _jsxRuntime.jsxs)("li", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "".concat(prefixCls, "-label"),
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
              className: "".concat(prefixCls, "-switcher"),
              onClick: function onClick(evn) {
                return onItemClick(item, evn);
              },
              children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactIcon["default"], {
                type: iconItem || 'caret-right',
                className: [typeof icon === 'function' ? "".concat(prefixCls, "-switcher-noop") : null, noChild ? 'no-child' : null, !iconAnimation ? 'no-animation' : null, itemIsOpen ? 'open' : null].filter(Boolean).join(' ').trim()
              })
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
              onClick: function onClick(evn) {
                return onItemSelected(item, evn);
              },
              className: ["".concat(prefixCls, "-title"), selected && isSelected ? 'selected' : null, item.disabled ? 'disabled' : null].filter(Boolean).join(' ').trim(),
              children: renderTitle ? renderTitle(item, {
                selected: selected,
                noChild: noChild,
                openKeys: openKeys,
                isHalfChecked: isHalfChecked,
                selectedKeys: selectedKeys
              }) : /*#__PURE__*/(0, _jsxRuntime.jsx)(Label, {
                label: item.label
              })
            })]
          }), item.children && /*#__PURE__*/(0, _jsxRuntime.jsx)(TreeNode, (0, _objectSpread3["default"])((0, _objectSpread3["default"])({}, other), {}, (_objectSpread2 = {
            prefixCls: prefixCls,
            icon: icon,
            iconAnimation: iconAnimation,
            isSelected: isSelected,
            openKeys: openKeys,
            selectedKeys: selectedKeys,
            onItemClick: onItemClick,
            onItemSelected: onItemSelected,
            renderTitle: renderTitle
          }, (0, _defineProperty2["default"])(_objectSpread2, "prefixCls", prefixCls), (0, _defineProperty2["default"])(_objectSpread2, "data", item.children), (0, _defineProperty2["default"])(_objectSpread2, "level", level + 1), (0, _defineProperty2["default"])(_objectSpread2, "parent", item), _objectSpread2)))]
        }, idx);
      })
    })
  });
}

module.exports = exports.default;
//# sourceMappingURL=TreeNode.js.map