"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _reactOverlayTrigger = _interopRequireDefault(require("@uiw/react-overlay-trigger"));

var _reactIcon = _interopRequireDefault(require("@uiw/react-icon"));

var _MenuItem = _interopRequireDefault(require("./MenuItem"));

var _Menu = _interopRequireDefault(require("./Menu"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["prefixCls", "className", "disabled", "overlayProps", "children", "collapse", "inlineIndent", "inlineCollapsed"];

function checkedMenuItem(node) {
  var isCheck = false;

  if (node) {
    // eslint-disable-next-line
    do {
      if (!node.dataset.menu) {
        isCheck = true;
      }

      if (node.dataset.menu && /^(subitem|divider)$/.test(node.dataset.menu)) {
        isCheck = false;
      }
    } while (!node.dataset.menu && (node = node.parentNode));
  }

  return isCheck;
}

function IconView(_ref) {
  var prefixCls = _ref.prefixCls,
      collapse = _ref.collapse,
      isOpen = _ref.isOpen;
  return (0, _react.useMemo)(function () {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactIcon["default"], {
      type: "caret-right",
      className: [prefixCls ? "".concat(prefixCls, "-collapse-icon") : null, !collapse && isOpen ? 'w-open' : null, !collapse && !isOpen ? 'w-close' : null].filter(Boolean).join(' ').trim()
    });
  }, [prefixCls, collapse, isOpen]);
}

var SubMenu = /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
  var _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'w-menu-subitem' : _props$prefixCls,
      className = props.className,
      disabled = props.disabled,
      _props$overlayProps = props.overlayProps,
      overlayProps = _props$overlayProps === void 0 ? {} : _props$overlayProps,
      children = props.children,
      _props$collapse = props.collapse,
      collapse = _props$collapse === void 0 ? false : _props$collapse,
      inlineIndent = props.inlineIndent,
      inlineCollapsed = props.inlineCollapsed,
      other = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var overlayTriggerProps = {};
  var menuProps = {
    bordered: true,
    children: children,
    inlineIndent: inlineIndent,
    className: [prefixCls ? "".concat(prefixCls, "-overlay") : null].filter(Boolean).join(' ').trim()
  };

  var popupRef = _react["default"].useRef(null);

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      isOpen = _useState2[0],
      setIsOpen = _useState2[1];

  (0, _react.useMemo)(function () {
    setIsOpen(false);
  }, [collapse]);

  function onClick(e) {
    var target = e.currentTarget;
    var related = e.relatedTarget || e.nativeEvent.target;
    if (target.children.length < 1) return;

    if (checkedMenuItem(related)) {
      if (popupRef.current) {
        popupRef.current.hide();
      }
    }
  }

  function onExit(node) {
    node.style.height = "".concat(node.scrollHeight, "px");
    setIsOpen(false);
  }

  function onExiting(node) {
    node.style.height = '0px';
  }

  function onEnter(node) {
    node.style.height = '1px';
    setIsOpen(true);
  }

  function onEntering(node) {
    node.style.height = "".concat(node.scrollHeight, "px");
  }

  function onEntered(node) {
    node.style.height = 'initial';
  }

  if (!collapse) {
    delete menuProps.onClick;
    menuProps.bordered = false;
    overlayTriggerProps.className = "".concat(prefixCls, "-collapse");
    overlayTriggerProps.appear = false;
    overlayTriggerProps.isOutside = true;
    overlayTriggerProps.isClickOutside = false;
    overlayTriggerProps.unmountOnExit = false;
    overlayTriggerProps.trigger = 'click';
    overlayTriggerProps.transitionName = "".concat(prefixCls);
    overlayTriggerProps.onExit = onExit;
    overlayTriggerProps.onExiting = onExiting; // overlayTriggerProps.onEnter = onEnter;

    overlayTriggerProps.onEntered = onEntered;
    overlayTriggerProps.onEntering = onEntering;
  } else {
    overlayTriggerProps.className = "".concat(prefixCls, "-popup");
    overlayTriggerProps.trigger = 'hover'; // overlayTriggerProps.usePortal = true;

    menuProps.onClick = onClick;
  }

  return /*#__PURE__*/(0, _jsxRuntime.jsx)("li", {
    "data-menu": "subitem",
    ref: ref,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactOverlayTrigger["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])((0, _objectSpread2["default"])({
      placement: "rightTop",
      autoAdjustOverflow: true,
      disabled: disabled,
      isOpen: isOpen,
      usePortal: false,
      isOutside: true
    }, overlayTriggerProps), overlayProps), {}, {
      ref: popupRef,
      overlay: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Menu["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, menuProps), {}, {
        style: !collapse ? {
          paddingLeft: inlineIndent
        } : {}
      })),
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_MenuItem["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, other), {}, {
        ref: null,
        disabled: disabled,
        isSubMenuItem: true,
        addonAfter: /*#__PURE__*/(0, _jsxRuntime.jsx)(IconView, {
          collapse: collapse,
          prefixCls: prefixCls,
          isOpen: isOpen
        }),
        className: [prefixCls ? "".concat(prefixCls, "-title") : null, !collapse ? "".concat(prefixCls, "-collapse-title") : null, className].filter(Boolean).join(' ').trim()
      }))
    }))
  });
});

SubMenu.displayName = 'uiw.SubMenu';
var _default = SubMenu;
exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=SubMenu.js.map