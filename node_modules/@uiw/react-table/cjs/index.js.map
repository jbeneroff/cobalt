{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "props",
    "prefixCls",
    "className",
    "columns",
    "data",
    "title",
    "footer",
    "bordered",
    "onCell",
    "noop",
    "onCellHead",
    "other",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "header",
    "render",
    "ellipsis",
    "keys",
    "tableLayout",
    "length",
    "map",
    "trData",
    "rowNum",
    "keyName",
    "colNum",
    "objs",
    "children",
    "child",
    "React",
    "isValidElement",
    "rowSpan",
    "colSpan",
    "evn"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React from 'react';\nimport { IProps, HTMLDivProps, noop } from '@uiw/utils';\nimport Thead from './Thead';\nimport { getLevelItems, getAllColumnsKeys } from './util';\nimport './style/index.less';\n\nexport type TableColumns = {\n  title?:\n    | string\n    | ((data: TableColumns, rowNum: number, colNum: number) => JSX.Element)\n    | JSX.Element;\n  key?: string;\n  width?: number;\n  colSpan?: number;\n  children?: TableColumns[];\n  ellipsis?: boolean;\n  render?: (\n    text: string,\n    keyName: string,\n    rowData: { [key: string]: any },\n    rowNumber: number,\n    columnNumber: number,\n  ) => void;\n  style?: React.CSSProperties;\n  [key: string]: any;\n};\n\nexport interface TableProps extends IProps, Omit<HTMLDivProps, 'title'> {\n  prefixCls?: string;\n  columns?: TableColumns[];\n  data?: Record<string, string | number | JSX.Element>[];\n  title?: React.ReactNode;\n  footer?: React.ReactNode;\n  bordered?: boolean;\n  onCell?: (\n    data: { [key: string]: any },\n    options: ICellOptions,\n    evn: React.MouseEvent<HTMLTableCellElement>,\n  ) => void | React.ReactNode;\n  onCellHead?: (\n    data: TableColumns,\n    rowNum: number,\n    colNum: number,\n    evn: React.MouseEvent<HTMLTableCellElement>,\n  ) => void;\n}\n\nexport interface ICellOptions {\n  rowNum: number;\n  colNum: number;\n  keyName: string;\n}\n\nexport default (props: TableProps = {}) => {\n  const {\n    prefixCls = 'w-table',\n    className,\n    columns = [],\n    data = [],\n    title,\n    footer,\n    bordered,\n    onCell = noop,\n    onCellHead = noop,\n    ...other\n  } = props;\n  const cls = [prefixCls, className, bordered ? `${prefixCls}-bordered` : null]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  const { header, render, ellipsis } = getLevelItems(columns);\n  const keys = getAllColumnsKeys(columns);\n  return (\n    <div className={cls} {...other}>\n      <table style={ellipsis ? { tableLayout: 'fixed' } : {}}>\n        {title && <caption>{title}</caption>}\n        {columns && columns.length > 0 && (\n          <Thead onCellHead={onCellHead} data={header} />\n        )}\n        {data && data.length > 0 && (\n          <tbody>\n            {data.map((trData, rowNum) => (\n              <tr key={rowNum}>\n                {keys.map((keyName, colNum) => {\n                  let objs: React.TdHTMLAttributes<HTMLTableDataCellElement> = {\n                    children: trData[keyName],\n                  };\n                  if (render[keyName]) {\n                    const child = render[keyName](\n                      trData[keyName],\n                      keyName,\n                      trData,\n                      rowNum,\n                      colNum,\n                    );\n                    if (React.isValidElement(child)) {\n                      objs.children = child;\n                    } else {\n                      if (child.props) {\n                        objs = { ...child.props, children: objs.children };\n                        if (\n                          child.props.rowSpan === 0 ||\n                          child.props.colSpan === 0\n                        )\n                          return null;\n                      }\n                      if (child.children) {\n                        objs.children = child.children;\n                      }\n                    }\n                  }\n                  if (ellipsis && ellipsis[keyName]) {\n                    objs.className = `${prefixCls}-ellipsis`;\n                  }\n                  return (\n                    <td\n                      {...objs}\n                      key={colNum}\n                      onClick={(evn) =>\n                        onCell(trData, { rowNum, colNum, keyName }, evn)\n                      }\n                    />\n                  );\n                })}\n              </tr>\n            ))}\n          </tbody>\n        )}\n        {props.children}\n      </table>\n      {footer && <div className={`${prefixCls}-footer`}>{footer}</div>}\n    </div>\n  );\n};\n"
  ]
}