{
  "version": 3,
  "sources": [
    "../src/MenuItem.tsx"
  ],
  "names": [
    "React",
    "Fragment",
    "Icon",
    "disabledProps",
    "href",
    "undefined",
    "onClick",
    "onMouseDown",
    "onMouseEnter",
    "onMouseLeave",
    "tabIndex",
    "MenuItem",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "tagName",
    "TagName",
    "disabled",
    "multiline",
    "icon",
    "text",
    "active",
    "addonAfter",
    "isSubMenuItem",
    "htmlProps",
    "anchorCls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "tagComp",
    "createElement",
    "displayName"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA;;;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAEC,SADc;AAEpBC,EAAAA,OAAO,EAAED,SAFW;AAGpBE,EAAAA,WAAW,EAAEF,SAHO;AAIpBG,EAAAA,YAAY,EAAEH,SAJM;AAKpBI,EAAAA,YAAY,EAAEJ,SALM;AAMpBK,EAAAA,QAAQ,EAAE,CAAC;AANS,CAAtB;AAwBA,IAAMC,QAAQ,gBAAGX,KAAK,CAACY,UAAN,CACf,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AACJC,IAAAA,SAAS,GAAG,aADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAAO,EAAEC,OAAO,GAAG,GAHf;AAKJC,IAAAA,QAAQ,GAAG,KALP;AAMJC,IAAAA,SAAS,GAAG,KANR;AAOJC,IAAAA,IAPI;AAQJC,IAAAA,IARI;AASJC,IAAAA,MAAM,GAAG,KATL;AAUJC,IAAAA,UAVI;AAWJC,IAAAA;AAXI,MAaFZ,KAbJ;AAAA,MAYKa,SAZL,iCAaIb,KAbJ;;AAcA,MAAMc,SAAS,GAAG,CAChBZ,SADgB,EAEhBQ,MAAM,GAAG,QAAH,GAAc,IAFJ,EAGhBJ,QAAQ,GAAG,YAAH,GAAkB,IAHV,EAIhBH,SAJgB,EAMfY,MANe,CAMRC,OANQ,EAOfC,IAPe,CAOV,GAPU,EAQfC,IARe,EAAlB;AAUA,MAAMC,OAAO,gBAAGhC,KAAK,CAACiC,aAAN,CACdf,OADc,eAGTQ,SAHS,EAIRP,QAAQ,GAAGhB,aAAH,GAAmB,EAJnB;AAKZa,IAAAA,SAAS,EAAEW,SALC;AAMZb,IAAAA;AANY,mBAQd,MAAC,QAAD;AAAA,4BACE,KAAC,IAAD;AAAM,MAAA,SAAS,EAAKC,SAAL,UAAf;AAAsC,MAAA,IAAI,EAAEM;AAA5C,MADF,eAEE;AACE,MAAA,SAAS,EAAE,CACTN,SAAS,IAAOA,SAAP,UADA,EAET,CAACK,SAAD,IAAiBL,SAAjB,eAFS,EAIRa,MAJQ,CAIDC,OAJC,EAKRC,IALQ,CAKH,GALG,EAMRC,IANQ,EADb;AAAA,gBASGT;AATH,MAFF,EAaGE,UAbH;AAAA,IARc,CAAhB;;AAwBA,MAAIC,aAAJ,EAAmB;AACjB,WAAOO,OAAP;AACD;;AACD,sBAAO;AAAA,oBAAMA,OAAN;AAAA,IAAP;AACD,CAtDc,CAAjB;AAyDArB,QAAQ,CAACuB,WAAT,GAAuB,cAAvB;AAEA,eAAevB,QAAf",
  "sourcesContent": [
    "import React, { Fragment } from 'react';\nimport Icon from '@uiw/react-icon';\nimport { IProps } from '@uiw/utils';\nimport './style/item.less';\n\nconst disabledProps = {\n  href: undefined,\n  onClick: undefined,\n  onMouseDown: undefined,\n  onMouseEnter: undefined,\n  onMouseLeave: undefined,\n  tabIndex: -1,\n};\n\ntype AnchorElement = React.AnchorHTMLAttributes<HTMLAnchorElement>;\n\ntype Anchor<T = any> = T extends HTMLElement ? React.HTMLProps<T> : T;\n\nexport interface MenuItemProps<T> extends IProps, Anchor {\n  text?: React.ReactNode;\n  addonAfter?: React.ReactNode;\n  tagName?: T extends HTMLElement ? keyof JSX.IntrinsicElements : never;\n  multiline?: boolean;\n  isSubMenuItem?: boolean;\n  disabled?: boolean;\n  active?: boolean;\n  icon?: JSX.Element | string | false | null;\n}\n\nconst MenuItem = React.forwardRef<AnchorElement, MenuItemProps<any>>(\n  (props, ref) => {\n    const {\n      prefixCls = 'w-menu-item',\n      className,\n      tagName: TagName = 'a',\n      children,\n      disabled = false,\n      multiline = false,\n      icon,\n      text,\n      active = false,\n      addonAfter,\n      isSubMenuItem,\n      ...htmlProps\n    } = props;\n    const anchorCls = [\n      prefixCls,\n      active ? 'active' : null,\n      disabled ? 'w-disabled' : null,\n      className,\n    ]\n      .filter(Boolean)\n      .join(' ')\n      .trim();\n\n    const tagComp = React.createElement(\n      TagName,\n      {\n        ...htmlProps,\n        ...(disabled ? disabledProps : {}),\n        className: anchorCls,\n        ref,\n      },\n      <Fragment>\n        <Icon className={`${prefixCls}-icon`} type={icon} />\n        <div\n          className={[\n            prefixCls && `${prefixCls}-text`,\n            !multiline && `${prefixCls}-multiline`,\n          ]\n            .filter(Boolean)\n            .join(' ')\n            .trim()}\n        >\n          {text}\n        </div>\n        {addonAfter}\n      </Fragment>,\n    );\n    if (isSubMenuItem) {\n      return tagComp;\n    }\n    return <li> {tagComp} </li>;\n  },\n);\n\nMenuItem.displayName = 'uiw.MenuItem';\n\nexport default MenuItem;\n"
  ]
}