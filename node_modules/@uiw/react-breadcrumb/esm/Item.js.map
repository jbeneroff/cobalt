{
  "version": 3,
  "sources": [
    "../src/Item.tsx"
  ],
  "names": [
    "React",
    "Fragment",
    "BreadcrumbItem",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "tagName",
    "TagName",
    "active",
    "separator",
    "other",
    "isElm",
    "isValidElement",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "otherProps",
    "createElement",
    "children"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;;;AAaA,IAAMC,cAAc,gBAAGF,KAAK,CAACG,UAAN,CACrB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AACJC,IAAAA,SAAS,GAAG,cADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAAO,EAAEC,OAAO,GAAG,MAHf;AAIJC,IAAAA,MAJI;AAKJC,IAAAA;AALI,MAOFP,KAPJ;AAAA,MAMKQ,KANL,iCAOIR,KAPJ;;AAQA,MAAMS,KAAK,gBAAGb,KAAK,CAACc,cAAN,CAAqBH,SAArB,CAAd;AACA,MAAMI,GAAG,GAAG,CACPT,SADO,YAEVC,SAFU,EAGVG,MAAM,GAAG,QAAH,GAAc,IAHV,EAIV,CAACC,SAAD,GAAa,cAAb,GAA8B,IAJpB,EAKVE,KAAK,GAAG,WAAH,GAAiB,IALZ,EAOTG,MAPS,CAOFC,OAPE,EAQTC,IARS,CAQJ,GARI,EASTC,IATS,EAAZ;;AAUA,MAAMC,UAAU;AAAKb,IAAAA,SAAS,EAAEQ;AAAhB,KAAwBH,KAAxB,CAAhB;;AACA,MAAI,CAACC,KAAL,EAAY;AACVO,IAAAA,UAAU,CAAC,gBAAD,CAAV,GAA+BT,SAA/B;AACD;;AACD,sBAAOX,KAAK,CAACqB,aAAN,CACLZ,OADK,eAGAW,UAHA;AAIHf,IAAAA;AAJG,mBAML,MAAC,QAAD;AAAA,eACGQ,KAAK,iBAAI;AAAM,MAAA,SAAS,EAAKP,SAAL,eAAf;AAAA,gBAA4CK;AAA5C,MADZ,EAEGP,KAAK,CAACkB,QAFT;AAAA,IANK,CAAP;AAWD,CApCoB,CAAvB;AAuCA,eAAepB,cAAf",
  "sourcesContent": [
    "import React, { Fragment } from 'react';\nimport { IProps } from '@uiw/utils';\nimport './style/item.less';\n\ntype ElementTag<T = any> = T extends HTMLElement ? React.HTMLAttributes<T> : T;\n\nexport interface BreadcrumbItemProps<T = any> extends IProps, ElementTag {\n  tagName?: T extends HTMLElement ? keyof JSX.IntrinsicElements : T;\n  separator?: JSX.Element | string;\n  active?: boolean;\n  'data-separator'?: JSX.Element | string;\n}\n\ntype RefElement<T = HTMLSpanElement> = T extends HTMLElement ? T : never;\n\nconst BreadcrumbItem = React.forwardRef<RefElement, BreadcrumbItemProps>(\n  (props, ref) => {\n    const {\n      prefixCls = 'w-breadcrumb',\n      className,\n      tagName: TagName = 'span',\n      active,\n      separator,\n      ...other\n    } = props;\n    const isElm = React.isValidElement(separator);\n    const cls = [\n      `${prefixCls}-item`,\n      className,\n      active ? 'active' : null,\n      !separator ? 'no-separator' : null,\n      isElm ? 'no-before' : null,\n    ]\n      .filter(Boolean)\n      .join(' ')\n      .trim();\n    const otherProps = { className: cls, ...other };\n    if (!isElm) {\n      otherProps['data-separator'] = separator;\n    }\n    return React.createElement(\n      TagName,\n      {\n        ...otherProps,\n        ref,\n      },\n      <Fragment>\n        {isElm && <span className={`${prefixCls}-separator`}>{separator}</span>}\n        {props.children}\n      </Fragment>,\n    );\n  },\n);\n\nexport default BreadcrumbItem;\n"
  ]
}