import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "className", "popoverProps", "datePickerProps", "allowClear", "format", "onChange"];
import React, { useEffect, useState } from 'react';
import Input from '@uiw/react-input';
import Popover from '@uiw/react-popover';
import DatePicker from '@uiw/react-date-picker';
import Icon from '@uiw/react-icon';
import formatter from '@uiw/formatter';
import "./style/index.css";
import { jsx as _jsx } from "react/jsx-runtime";
export default function DateInput(props) {
  var {
    prefixCls = 'w-dateinput',
    className,
    popoverProps,
    datePickerProps,
    allowClear = true,
    format = 'YYYY/MM/DD',
    onChange
  } = props,
      inputProps = _objectWithoutPropertiesLoose(props, _excluded);

  var [date, setDate] = useState(props.value);
  var value = date || '';
  inputProps.value = typeof value === 'string' ? value : formatter(format, value);
  useEffect(() => {
    if (props.value !== date) {
      setDate(props.value);
    }
  }, [props.value]);

  function handleChange(cdate) {
    setDate(cdate);
    onChange && onChange(cdate);
  }

  if (allowClear && inputProps.value) {
    inputProps.addonAfter = /*#__PURE__*/_jsx(Icon, {
      className: prefixCls + "-close-btn",
      onClick: () => handleChange(undefined),
      type: "close"
    });
  }

  return /*#__PURE__*/_jsx(Popover, _extends({
    trigger: "focus",
    placement: "bottomLeft",
    autoAdjustOverflow: true
  }, popoverProps, {
    content: /*#__PURE__*/_jsx(DatePicker, _extends({
      date: value && new Date(value) || undefined,
      className: prefixCls + "-popover"
    }, datePickerProps, {
      onChange: selectedDate => handleChange(selectedDate)
    })),
    children: /*#__PURE__*/_jsx(Input, _extends({
      placeholder: "\u8BF7\u9009\u62E9\u65E5\u671F",
      readOnly: true
    }, inputProps, {
      className: [prefixCls, className].filter(Boolean).join(' ').trim()
    }))
  }));
}
//# sourceMappingURL=index.js.map