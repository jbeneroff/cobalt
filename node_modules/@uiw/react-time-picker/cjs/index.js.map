{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "TimePicker",
    "props",
    "prefixCls",
    "className",
    "disabled",
    "value",
    "format",
    "popoverProps",
    "allowClear",
    "onChange",
    "disabledHours",
    "disabledMinutes",
    "disabledSeconds",
    "hideDisabled",
    "precision",
    "inputProps",
    "date",
    "setDate",
    "timeProps",
    "inputValue",
    "datePickerTime",
    "Date",
    "_props",
    "addonAfter",
    "undefined",
    "size",
    "type",
    "num",
    "disableds",
    "currentDate",
    "dataStr",
    "filter",
    "Boolean",
    "join",
    "trim"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAyBe,SAASA,UAAT,CAAuBC,KAAvB,EAAkD;AAC/D,yBAeIA,KAfJ,CACEC,SADF;AAAA,MACEA,SADF,iCACc,cADd;AAAA,MAEEC,SAFF,GAeIF,KAfJ,CAEEE,SAFF;AAAA,MAGEC,QAHF,GAeIH,KAfJ,CAGEG,QAHF;AAAA,MAIEC,KAJF,GAeIJ,KAfJ,CAIEI,KAJF;AAAA,sBAeIJ,KAfJ,CAKEK,MALF;AAAA,MAKEA,MALF,8BAKW,UALX;AAAA,MAMEC,YANF,GAeIN,KAfJ,CAMEM,YANF;AAAA,0BAeIN,KAfJ,CAOEO,UAPF;AAAA,MAOEA,UAPF,kCAOe,IAPf;AAAA,MAQEC,QARF,GAeIR,KAfJ,CAQEQ,QARF;AAAA,MASEC,aATF,GAeIT,KAfJ,CASES,aATF;AAAA,MAUEC,eAVF,GAeIV,KAfJ,CAUEU,eAVF;AAAA,MAWEC,eAXF,GAeIX,KAfJ,CAWEW,eAXF;AAAA,MAYEC,YAZF,GAeIZ,KAfJ,CAYEY,YAZF;AAAA,MAaEC,SAbF,GAeIb,KAfJ,CAaEa,SAbF;AAAA,MAcKC,UAdL,6CAeId,KAfJ;;AAgBA,kBAAwB,qBAASA,KAAK,CAACI,KAAf,CAAxB;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACA,wBAAU;AAAA,WAAMA,OAAO,CAAChB,KAAK,CAACI,KAAP,CAAb;AAAA,GAAV,EAAsC,CAACJ,KAAK,CAACI,KAAP,CAAtC;AACA,MAAMa,SAAS,GAAG;AAChBR,IAAAA,aAAa,EAAbA,aADgB;AAEhBC,IAAAA,eAAe,EAAfA,eAFgB;AAGhBC,IAAAA,eAAe,EAAfA,eAHgB;AAIhBC,IAAAA,YAAY,EAAZA,YAJgB;AAKhBC,IAAAA,SAAS,EAATA;AALgB,GAAlB;AAOA,MAAMK,UAAU,GAAGH,IAAI,GAAG,2BAAUV,MAAV,EAAkBU,IAAlB,CAAH,GAA6B,EAApD;AACA,MAAMI,cAAc,GAAGJ,IAAI,IAAI,IAAIK,IAAJ,EAA/B;;AACA,MAAMC,MAAqB,qEAAQP,UAAR;AAAoBV,IAAAA,KAAK,EAAEc;AAA3B,IAA3B;;AACA,MAAIX,UAAU,IAAIW,UAAU,KAAK,EAA7B,IAAmC,CAAC,CAACA,UAAzC,EAAqD;AACnDG,IAAAA,MAAM,CAACC,UAAP,gBACE,qBAAC,uBAAD;AACE,MAAA,SAAS,YAAKrB,SAAL,eADX;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAED,KAAK,CAACG,QAHlB;AAIE,MAAA,OAAO,EAAE,mBAAM;AACba,QAAAA,OAAO,CAACO,SAAD,CAAP;AACAf,QAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,OAPH;AAQE,MAAA,IAAI,EAAER,KAAK,CAACwB,IARd;AASE,MAAA,KAAK,MATP;AAUE,MAAA,IAAI,EAAC;AAVP,MADF;AAcD;;AACD,sBACE,qBAAC,wBAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,kBAAkB,MAHpB;AAIE,IAAA,YAAY,EAAE;AAJhB,KAKMlB,YALN;AAME,IAAA,OAAO,eACL,qBAAC,oBAAD;AACE,MAAA,SAAS,YAAKL,SAAL;AADX,OAEMgB,SAFN;AAGE,MAAA,IAAI,EAAEE,cAHR;AAIE,MAAA,UAAU,EAAE,oBAACM,IAAD,EAAOC,GAAP,EAAYC,SAAZ,EAAuBC,WAAvB,EAAuC;AACjDZ,QAAAA,OAAO,CAAC,IAAII,IAAJ,CAASQ,WAAT,CAAD,CAAP;AACA,YAAMC,OAAO,GAAGD,WAAW,GAAG,2BAAUvB,MAAV,EAAkBuB,WAAlB,CAAH,GAAoC,EAA/D;AACApB,QAAAA,QAAQ,IAAIA,QAAQ,CAACqB,OAAD,EAAUD,WAAV,EAAuBH,IAAvB,EAA6BC,GAA7B,EAAkCC,SAAlC,CAApB;AACD;AARH,OAPJ;AAAA,2BAmBE,qBAAC,sBAAD;AACE,MAAA,WAAW,EAAC,gCADd;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,QAAQ,EAAExB;AAHZ,OAIMkB,MAJN;AAKE,MAAA,SAAS,EAAE,WAAIpB,SAAJ,aAAuBC,SAAvB,EACR4B,MADQ,CACDC,OADC,EAERC,IAFQ,CAEH,GAFG,EAGRC,IAHQ;AALb;AAnBF,KADF;AAgCD",
  "sourcesContent": [
    "import React, { useEffect, useState } from 'react';\nimport Popover, { PopoverProps } from '@uiw/react-popover';\nimport Input, { InputProps } from '@uiw/react-input';\nimport Button from '@uiw/react-button';\nimport { IProps } from '@uiw/utils';\nimport formatter from '@uiw/formatter';\nimport { TimePickerTime, TimePickerTimeProps } from './Time';\nimport './style/index.less';\n\nexport * from './Panel';\nexport * from './Time';\n\nexport interface TimePickerProps<T>\n  extends IProps,\n    Omit<InputProps<T>, 'onChange' | 'value'> {\n  value?: Date;\n  format?: string;\n  popoverProps?: PopoverProps;\n  disabledHours?: TimePickerTimeProps['disabledHours'];\n  precision?: TimePickerTimeProps['precision'];\n  disabledMinutes?: TimePickerTimeProps['disabledMinutes'];\n  disabledSeconds?: TimePickerTimeProps['disabledSeconds'];\n  hideDisabled?: TimePickerTimeProps['hideDisabled'];\n  allowClear?: boolean;\n  disabled?: boolean;\n  onChange?: (\n    dataStr?: string,\n    date?: Date | '',\n    type?: TimePickerTimeProps['type'],\n    num?: number,\n    disableds?: number[],\n  ) => void;\n}\n\nexport default function TimePicker<T>(props: TimePickerProps<T>) {\n  const {\n    prefixCls = 'w-timepicker',\n    className,\n    disabled,\n    value,\n    format = 'HH:mm:ss',\n    popoverProps,\n    allowClear = true,\n    onChange,\n    disabledHours,\n    disabledMinutes,\n    disabledSeconds,\n    hideDisabled,\n    precision,\n    ...inputProps\n  } = props;\n  const [date, setDate] = useState(props.value);\n  useEffect(() => setDate(props.value), [props.value]);\n  const timeProps = {\n    disabledHours,\n    disabledMinutes,\n    disabledSeconds,\n    hideDisabled,\n    precision,\n  };\n  const inputValue = date ? formatter(format, date) : '';\n  const datePickerTime = date || new Date();\n  const _props: InputProps<T> = { ...inputProps, value: inputValue };\n  if (allowClear && inputValue !== '' && !!inputValue) {\n    _props.addonAfter = (\n      <Button\n        className={`${prefixCls}-close-btn`}\n        icon=\"close\"\n        disabled={props.disabled}\n        onClick={() => {\n          setDate(undefined);\n          onChange && onChange();\n        }}\n        size={props.size}\n        basic\n        type=\"light\"\n      />\n    );\n  }\n  return (\n    <Popover\n      trigger=\"focus\"\n      placement=\"bottomLeft\"\n      autoAdjustOverflow\n      visibleArrow={false}\n      {...popoverProps}\n      content={\n        <TimePickerTime\n          className={`${prefixCls}-popover`}\n          {...timeProps}\n          date={datePickerTime}\n          onSelected={(type, num, disableds, currentDate) => {\n            setDate(new Date(currentDate!));\n            const dataStr = currentDate ? formatter(format, currentDate) : '';\n            onChange && onChange(dataStr, currentDate, type, num, disableds);\n          }}\n        />\n      }\n    >\n      <Input\n        placeholder=\"请选择时间\"\n        readOnly\n        disabled={disabled}\n        {..._props}\n        className={[`${prefixCls}-input`, className]\n          .filter(Boolean)\n          .join(' ')\n          .trim()}\n      />\n    </Popover>\n  );\n}\n"
  ]
}