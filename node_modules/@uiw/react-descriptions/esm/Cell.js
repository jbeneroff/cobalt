import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "className", "tagName", "layout", "bordered", "label", "isLastCell", "colon", "span", "children", "column"];
import React, { Fragment } from 'react';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

function Cell(props) {
  if (props === void 0) {
    props = {};
  }

  var {
    prefixCls,
    className,
    tagName: TagName = 'td',
    layout,
    bordered,
    label,
    colon,
    span,
    children
  } = props,
      other = _objectWithoutPropertiesLoose(props, _excluded);

  var labelProps = {
    className: [prefixCls ? prefixCls + "-item-label" : null, className, colon ? prefixCls + "-item-colon" : null, !label ? prefixCls + "-item-no-label" : null].filter(Boolean).join(' ').trim()
  };

  if (layout === 'horizontal') {
    if (!bordered) {
      return /*#__PURE__*/_jsxs(TagName, _extends({}, other, {
        colSpan: span,
        children: [/*#__PURE__*/_jsx("span", _extends({}, labelProps, {
          children: label
        })), /*#__PURE__*/_jsx("span", {
          className: prefixCls ? prefixCls + "-item-content" : '',
          children: children
        })]
      }));
    }

    return /*#__PURE__*/_jsxs(Fragment, {
      children: [/*#__PURE__*/_jsx("th", _extends({}, labelProps, {
        children: label
      })), /*#__PURE__*/_jsx(TagName, _extends({}, other, {
        colSpan: span ? span * 2 - 1 : span,
        className: prefixCls ? prefixCls + "-item-content" : '',
        children: children
      }))]
    });
  }

  return /*#__PURE__*/_jsx(TagName, {
    colSpan: span,
    className: prefixCls + "-item-" + (TagName === 'td' ? 'content' : 'label'),
    children: children
  });
}

export default Cell;
//# sourceMappingURL=Cell.js.map