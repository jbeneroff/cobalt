{
  "version": 3,
  "sources": [
    "../src/Form.tsx"
  ],
  "names": [
    "React",
    "useState",
    "FormItem",
    "newFormState",
    "fields",
    "cb",
    "state",
    "initial",
    "current",
    "submitting",
    "errors",
    "name",
    "props",
    "initialValue",
    "currentValue",
    "newInitialValue",
    "value",
    "undefined",
    "isPromise",
    "promise",
    "then",
    "Form",
    "ref",
    "prefixCls",
    "className",
    "children",
    "resetOnSubmit",
    "onSubmitError",
    "onChange",
    "onSubmit",
    "afterSubmit",
    "others",
    "initData",
    "data",
    "setData",
    "formUnits",
    "error",
    "checked",
    "childField",
    "controlField",
    "help",
    "labelFor",
    "key",
    "hasError",
    "handleChange",
    "validator",
    "element",
    "env",
    "list",
    "target",
    "test",
    "type",
    "nextState",
    "persist",
    "handleSubmit",
    "e",
    "preventDefault",
    "onError",
    "evn",
    "onSuccess",
    "response",
    "reset",
    "handleReset",
    "afterSubmitPromise",
    "catch",
    "canSubmit",
    "passesValidators",
    "Object",
    "prototype",
    "hasOwnProperty",
    "call",
    "other",
    "Children",
    "count",
    "hasCurrentValue",
    "id",
    "cloneElement",
    "filter",
    "Boolean",
    "join",
    "trim",
    "disabled",
    "resetForm",
    "forwardRef"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React, { useState } from 'react';\nimport { IProps } from '@uiw/utils';\nimport FormItem, { FormItemProps } from './FormItem';\nimport './style/form.less';\n\nexport interface FormProps<T>\n  extends IProps,\n    Omit<React.FormHTMLAttributes<HTMLFormElement>, 'onChange' | 'onSubmit'> {\n  prefixCls?: string;\n  fields?: Record<string, FormFieldsProps<T>>;\n  onSubmit?: (state: FormSubmitProps) => any;\n  afterSubmit?: (result: FormAfterSubmitProps) => any;\n  onChange?: (state: FormState) => void;\n  onSubmitError?: (evn: any) => any;\n  resetOnSubmit?: boolean;\n  children?: (\n    handle: FormChildrenProps,\n  ) => JSX.Element | JSX.Element | undefined;\n}\n\nexport interface FormState {\n  submitting: boolean;\n  initial: Record<string, any>;\n  current: FormState['initial'];\n  errors: Record<string, any>;\n}\n\nexport interface FormFieldsProps<T> extends FormItemProps<T> {\n  name?: string;\n  children?: React.ReactNode;\n  help?: React.ReactNode;\n  labelFor?: string;\n  inline?: boolean;\n  checked?: boolean;\n  initialValue?: string | number | T;\n  validator?: (currentValue: any) => any;\n}\n\nexport interface FormSubmitProps {\n  initial: FormState['initial'];\n  current: FormState['current'];\n}\n\nexport interface FormAfterSubmitProps {\n  state: FormState;\n  response: any;\n  reset: () => void;\n}\n\nexport interface FormChildrenProps {\n  fields: Record<string, React.ReactElement>;\n  resetForm: () => void;\n  canSubmit: () => boolean;\n  state: FormState;\n}\n\nexport type FormElementProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  checked?: boolean;\n  onChange?: (\n    env: React.BaseSyntheticEvent<HTMLInputElement>,\n    list?: string[],\n  ) => void;\n};\n\nfunction newFormState<T>(\n  fields: FormProps<T>['fields'],\n  cb: (\n    porps: FormFieldsProps<T>,\n  ) => {\n    initialValue: FormFieldsProps<T>['initialValue'];\n    currentValue: FormFieldsProps<T>['initialValue'];\n  },\n): FormState {\n  const state: FormState = {\n    initial: {},\n    current: {},\n    submitting: false,\n    errors: {},\n  };\n  for (const name in fields) {\n    const props = fields[name];\n    if (!props) continue;\n    const { initialValue, currentValue } = cb({ ...props, name });\n    state.initial[name] = initialValue;\n    state.current[name] = currentValue;\n  }\n  return state;\n}\n\nfunction newInitialValue<T>(value: FormFieldsProps<T>['initialValue']) {\n  return value === null || value === undefined ? '' : value;\n}\n\nconst isPromise = (promise: Promise<any>) =>\n  promise && typeof promise.then === 'function';\n\nfunction Form<T>(\n  {\n    prefixCls = 'w-form',\n    className,\n    fields,\n    children,\n    resetOnSubmit,\n    onSubmitError,\n    onChange,\n    onSubmit,\n    afterSubmit,\n    ...others\n  }: FormProps<T>,\n  ref:\n    | ((instance: HTMLInputElement) => void)\n    | React.RefObject<HTMLInputElement | null>\n    | null,\n) {\n  const initData = newFormState(fields, ({ initialValue }) => {\n    initialValue = newInitialValue(initialValue);\n    return { initialValue, currentValue: initialValue };\n  });\n\n  const [data, setData] = useState<FormState>(initData);\n\n  const formUnits: FormChildrenProps['fields'] = {};\n  for (const name in fields) {\n    const props = fields[name];\n    if (!props) continue;\n    const error = data.errors[name];\n    if (typeof props.initialValue === 'boolean') {\n      props.checked = props.initialValue;\n    }\n    const childField: FormFieldsProps<T> = controlField({\n      ...props,\n      name,\n    });\n    const help = error || props.help;\n    const labelFor = props.labelFor;\n    formUnits[name] = (\n      <FormItem\n        {...{\n          ...props,\n          key: name,\n          children: childField,\n          help,\n          labelFor,\n          state: data,\n          name,\n          hasError: !!error,\n        }}\n      />\n    );\n  }\n\n  function handleChange(\n    name: string,\n    validator: FormFieldsProps<T>['validator'],\n    element?: React.ReactElement,\n    cb?: (env: React.BaseSyntheticEvent<HTMLInputElement>) => void,\n  ) {\n    return (\n      env: React.BaseSyntheticEvent<HTMLInputElement>,\n      list?: string[],\n    ) => {\n      let value =\n        env && env.target && 'value' in env.target ? env.target.value : env;\n      // 控件 Checkbox.Group 多选值的处理\n      value = list || value;\n      // 控件 Checkbox 值的处理\n      if (\n        !list &&\n        element &&\n        env &&\n        env.target &&\n        /(radio)/.test(env.target.type)\n      ) {\n        // 控件 Switch/Radio/Checkbox 值的处理\n        value = env.target.value ? env.target.value : env.target.checked;\n      }\n      if (\n        !list &&\n        element &&\n        env &&\n        env.target &&\n        /(checkbox)/.test(env.target.type)\n      ) {\n        // 控件 Switch/Radio/Checkbox 值的处理\n        value = env.target.checked;\n      }\n      const nextState = {\n        current: { ...data.current, [name]: value },\n      } as FormState;\n      const error = validator && validator(value);\n      if (!error) {\n        nextState.errors = { ...data.errors };\n        delete nextState.errors[name];\n      }\n      if (env && env.persist && typeof env.persist === 'function')\n        env.persist();\n      setData({ ...data, ...nextState });\n      if (cb) {\n        cb(env);\n      }\n      onChange && onChange({ ...data, ...nextState });\n    };\n  }\n\n  function handleSubmit(e: React.FormEvent) {\n    e && e.preventDefault();\n    const { initial, current } = data;\n    setData({ ...data, submitting: true });\n    const nextState = { submitting: false } as FormState;\n    const onError = (evn: React.FormEvent) =>\n      setData({\n        ...data,\n        ...nextState,\n        errors: (onSubmitError && onSubmitError(evn)) || {},\n      });\n    const onSuccess = (response: any) => {\n      if (resetOnSubmit) {\n        nextState.current = initial;\n      }\n      setData({ ...data, ...nextState, errors: {} });\n      return () => afterSubmit!({ state: data, response, reset: handleReset });\n    };\n    try {\n      const afterSubmitPromise = onSubmit!({ initial, current });\n      if (isPromise(afterSubmitPromise)) {\n        return afterSubmitPromise.then(onSuccess).catch(onError);\n      } else {\n        return onSuccess(afterSubmitPromise);\n      }\n    } catch (evn) {\n      onError(evn);\n    }\n  }\n\n  function canSubmit() {\n    const { submitting, current = {} } = data;\n    let passesValidators = true;\n    for (const name in fields) {\n      if (Object.prototype.hasOwnProperty.call(fields, name)) {\n        const props: FormFieldsProps<T> = fields[name];\n        if (!props) continue;\n        if (props.validator && props.validator(current[name])) {\n          passesValidators = false;\n          break;\n        }\n      }\n    }\n    return !submitting && passesValidators;\n  }\n\n  function handleReset() {\n    const { initial } = data;\n    setData({ ...data, current: initial, errors: {} });\n  }\n\n  function controlField({\n    children,\n    validator,\n    name,\n    help,\n    label,\n    labelFor,\n    labelClassName,\n    labelStyle,\n    inline,\n    initialValue,\n    ...other\n  }: FormFieldsProps<T>) {\n    const element =\n      typeof children !== 'function'\n        ? children\n        : children({\n            onChange: handleChange(name!, validator),\n            onSubmit: handleSubmit,\n            canSubmit: canSubmit,\n          });\n    if (!element || React.Children.count(element) !== 1 || !name)\n      return element;\n    const props = {\n      name: element.props.name || name,\n      ...other,\n    } as FormElementProps;\n    const hasCurrentValue = Object.prototype.hasOwnProperty.call(\n      data.current,\n      name,\n    );\n    props.id = element.props.id;\n    props.value = hasCurrentValue\n      ? data.current && data.current[name]\n      : props.value;\n    // : element.props.value;\n\n    const type = element.props.type;\n    if (type === 'checkbox' || type === 'switch') {\n      props.checked = !!props.checked;\n      delete props.value;\n    }\n    props.onChange = handleChange(\n      name,\n      validator,\n      element,\n      element.props.onChange,\n    ) as FormElementProps['onChange'];\n    return React.cloneElement(element, props as FormElementProps);\n  }\n  return (\n    <form\n      {...{\n        ...others,\n        className: [prefixCls, className].filter(Boolean).join(' ').trim(),\n        onSubmit: handleSubmit,\n      }}\n    >\n      <fieldset {...{ disabled: data.submitting }}>\n        {typeof children === 'function'\n          ? children({\n              fields: formUnits,\n              state: data,\n              resetForm: handleReset,\n              canSubmit: canSubmit,\n            })\n          : children}\n      </fieldset>\n    </form>\n  );\n}\n\nexport default React.forwardRef<HTMLInputElement, FormProps<{}>>(Form);\n"
  ]
}