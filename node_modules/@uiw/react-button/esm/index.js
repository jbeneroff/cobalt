import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "disabled", "active", "loading", "block", "basic", "htmlType", "type", "size", "icon", "className", "children"];
import React from 'react';
import Icon from '@uiw/react-icon';
import "./style/index.css";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export default /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    prefixCls = 'w-btn',
    disabled = false,
    active = false,
    loading = false,
    block = false,
    basic = false,
    htmlType = 'button',
    type = 'light',
    size = 'default',
    icon,
    className,
    children
  } = props,
      others = _objectWithoutPropertiesLoose(props, _excluded);

  var cls = [className, prefixCls, size ? prefixCls + "-size-" + size : null, type ? prefixCls + "-" + type : null, basic ? prefixCls + "-basic" : null, loading ? prefixCls + "-loading" : null, disabled || loading ? 'disabled' : null, active ? 'active' : null, block ? 'block' : null].filter(Boolean).join(' ').trim();
  return /*#__PURE__*/_jsxs("button", _extends({}, others, {
    ref: ref,
    type: htmlType,
    disabled: disabled || loading,
    className: cls,
    children: [icon && /*#__PURE__*/_jsx(Icon, {
      type: icon
    }), children && React.Children.map(children, child => {
      if (!child) return child;
      if ( /*#__PURE__*/React.isValidElement(child)) return child;
      return /*#__PURE__*/_jsx("span", {
        children: child
      });
    })]
  }));
});
//# sourceMappingURL=index.js.map