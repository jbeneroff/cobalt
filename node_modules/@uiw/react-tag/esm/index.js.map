{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useMemo",
    "props",
    "prefixCls",
    "className",
    "style",
    "title",
    "children",
    "visible",
    "color",
    "disabled",
    "bordered",
    "closable",
    "light",
    "onClose",
    "other",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "styl",
    "backgroundColor",
    "borderColor",
    "boxShadow",
    "closeBtn"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA;;;AAaA,gBAAe,UAACC,KAAD,EAA0B;AAAA,MAAzBA,KAAyB;AAAzBA,IAAAA,KAAyB,GAAP,EAAO;AAAA;;AACvC,MAAM;AACJC,IAAAA,SAAS,GAAG,OADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,KAAK,GAAG,EAJJ;AAKJC,IAAAA,QALI;AAMJC,IAAAA,OAAO,GAAG,IANN;AAOJC,IAAAA,KAAK,GAAG,SAPJ;AAQJC,IAAAA,QAAQ,GAAG,KARP;AASJC,IAAAA,QAAQ,GAAG,IATP;AAUJC,IAAAA,QAVI;AAWJC,IAAAA,KAAK,GAAG,KAXJ;AAYJC,IAAAA;AAZI,MAcFZ,KAdJ;AAAA,MAaKa,KAbL,iCAcIb,KAdJ;;AAeA,MAAMc,GAAG,GAAG,CACVb,SADU,EAEVC,SAFU,EAGVS,KAAK,GAAMV,SAAN,cAA0B,IAHrB,EAIVO,QAAQ,GAAG,UAAH,GAAgB,IAJd,EAMTO,MANS,CAMFC,OANE,EAOTC,IAPS,CAOJ,GAPI,EAQTC,IARS,EAAZ;;AASA,MAAMC,IAAyB,gBAAQhB,KAAR,CAA/B;;AACA,MAAI,CAACQ,KAAL,EAAY;AACVQ,IAAAA,IAAI,CAACZ,KAAL,GAAa,MAAb;AACAY,IAAAA,IAAI,CAACC,eAAL,GAAuBb,KAAvB;AACD,GAHD,MAGO;AACLY,IAAAA,IAAI,CAACZ,KAAL,GAAaA,KAAb;AACAY,IAAAA,IAAI,CAACE,WAAL,GAAmBd,KAAnB;;AACA,QAAIE,QAAQ,IAAIE,KAAhB,EAAuB;AACrBQ,MAAAA,IAAI,CAACG,SAAL,wBAAoCf,KAApC;AACD;AACF;;AACD,MAAI,CAACD,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACD,MAAMiB,QAAQ,GAAGxB,OAAO,CACtB,MACEW,QAAQ,gBACN;AACE,IAAA,OAAO,EAAEE,OADX;AAEE,IAAA,SAAS,EAAKX,SAAL,WAFX;AAGE,IAAA,KAAK,EAAC,IAHR;AAIE,IAAA,MAAM,EAAC,IAJT;AAKE,IAAA,OAAO,EAAC,WALV;AAAA,2BAOE;AAAM,MAAA,CAAC,EAAC;AAAR;AAPF,IADM,GAUJ,IAZgB,EAatB,CAACS,QAAD,CAbsB,CAAxB;AAeA,sBACE;AAAM,IAAA,SAAS,EAAEI,GAAjB;AAAsB,IAAA,KAAK,EAAEK;AAA7B,KAAuCN,KAAvC;AAAA,eACGT,KAAK,IAAIC,QADZ,EAEGkB,QAFH;AAAA,KADF;AAMD,CA5DD",
  "sourcesContent": [
    "import React, { useMemo } from 'react';\nimport { IProps, HTMLSpanProps } from '@uiw/utils';\nimport './style/index.less';\n\nexport interface TagProps extends IProps, Omit<HTMLSpanProps, 'title'> {\n  color?: string;\n  disabled?: boolean;\n  visible?: boolean;\n  bordered?: boolean;\n  light?: boolean;\n  closable?: boolean;\n  title?: React.ReactNode;\n  onClose?: (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => void;\n}\n\nexport default (props: TagProps = {}) => {\n  const {\n    prefixCls = 'w-tag',\n    className,\n    style,\n    title = '',\n    children,\n    visible = true,\n    color = '#6E6E6E',\n    disabled = false,\n    bordered = true,\n    closable,\n    light = false,\n    onClose,\n    ...other\n  } = props;\n  const cls = [\n    prefixCls,\n    className,\n    light ? `${prefixCls}-light` : null,\n    disabled ? 'disabled' : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  const styl: React.CSSProperties = { ...style };\n  if (!light) {\n    styl.color = '#fff';\n    styl.backgroundColor = color;\n  } else {\n    styl.color = color;\n    styl.borderColor = color;\n    if (bordered && light) {\n      styl.boxShadow = `inset 0 0 0 1px ${color}`;\n    }\n  }\n  if (!visible) {\n    return null;\n  }\n  const closeBtn = useMemo(\n    () =>\n      closable ? (\n        <svg\n          onClick={onClose}\n          className={`${prefixCls}-close`}\n          width=\"15\"\n          height=\"15\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"M9.41 8l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L8 6.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42L6.59 8 4.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L8 9.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L9.41 8z\" />\n        </svg>\n      ) : null,\n    [closable],\n  );\n  return (\n    <span className={cls} style={styl} {...other}>\n      {title || children}\n      {closeBtn}\n    </span>\n  );\n};\n"
  ]
}