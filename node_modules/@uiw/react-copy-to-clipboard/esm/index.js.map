{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "copy",
    "CopyToClipboard",
    "props",
    "prefixCls",
    "className",
    "text",
    "children",
    "onClick",
    "resetProps",
    "handleClick",
    "e",
    "isCopy",
    "otherProps",
    "filter",
    "Boolean",
    "join",
    "trim"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA;;;AAaA,eAAe,SAASC,eAAT,CAA4BC,KAA5B,EAA6D;AAC1E,MAAM;AACJC,IAAAA,SAAS,GAAG,qBADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,IAAI,GAAG,EAHH;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,OAAO,GAAG,MAAM;AALZ,MAOFL,KAPJ;AAAA,MAMKM,UANL,iCAOIN,KAPJ;;AAQA,WAASO,WAAT,CAAqBC,CAArB,EAAuD;AACrD,QAAI,CAACL,IAAL,EAAW;AACT,aAAOE,OAAO,CAAC,EAAD,EAAK,KAAL,EAAYG,CAAZ,CAAd;AACD;;AACDV,IAAAA,IAAI,CAACK,IAAD,EAAQM,MAAD,IAAqB;AAC9BJ,MAAAA,OAAO,CAACF,IAAD,EAAOM,MAAP,EAAeD,CAAf,CAAP;AACD,KAFG,CAAJ;AAGD;;AACD,MAAME,UAAU,gBACXJ,UADW;AAEdJ,IAAAA,SAAS,EAAE,CAACD,SAAD,EAAYC,SAAZ,EAAuBS,MAAvB,CAA8BC,OAA9B,EAAuCC,IAAvC,CAA4C,GAA5C,EAAiDC,IAAjD,EAFG;AAGdT,IAAAA,OAAO,EAAEE;AAHK,IAAhB;;AAKA,sBACE,2BAAUG,UAAV;AAAA,4BACE;AAAM,MAAA,SAAS,EAAKT,SAAL,YAAf;AAAA,gBAAyCE;AAAzC,MADF,EAEGC,QAFH;AAAA,KADF;AAMD",
  "sourcesContent": [
    "import React from 'react';\nimport copy from '@uiw/copy-to-clipboard';\nimport { IProps, HTMLSpanProps } from '@uiw/utils';\nimport './style/index.less';\n\nexport interface CopyToClipboardProps\n  extends IProps,\n    Omit<HTMLSpanProps, 'onClick'> {\n  text?: string;\n  onClick?: (\n    text: string,\n    isCopy: boolean,\n    event: React.MouseEvent<HTMLElement>,\n  ) => void;\n}\n\nexport default function CopyToClipboard<T>(props: CopyToClipboardProps & T) {\n  const {\n    prefixCls = 'w-copy-to-clipboard',\n    className,\n    text = '',\n    children,\n    onClick = () => null,\n    ...resetProps\n  } = props;\n  function handleClick(e: React.MouseEvent<HTMLElement>) {\n    if (!text) {\n      return onClick('', false, e);\n    }\n    copy(text, (isCopy: boolean) => {\n      onClick(text, isCopy, e);\n    });\n  }\n  const otherProps = {\n    ...resetProps,\n    className: [prefixCls, className].filter(Boolean).join(' ').trim(),\n    onClick: handleClick,\n  };\n  return (\n    <span {...otherProps}>\n      <span className={`${prefixCls}-select`}>{text}</span>\n      {children}\n    </span>\n  );\n}\n"
  ]
}