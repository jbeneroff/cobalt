{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "children",
    "dashed",
    "type",
    "align",
    "restProps",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;AAQA,4BAAeA,KAAK,CAACC,UAAN,CAA+C,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5E,MAAM;AACJC,IAAAA,SAAS,GAAG,WADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,MAAM,GAAG,KAJL;AAKJC,IAAAA,IAAI,GAAG,YALH;AAMJC,IAAAA,KAAK,GAAG;AANJ,MAQFP,KARJ;AAAA,MAOKQ,SAPL,iCAQIR,KARJ;;AASA,MAAMS,GAAG,GAAG,CACVN,SADU,EAEVD,SAFU,EAGVA,SAAS,IAAII,IAAb,GAAuBJ,SAAvB,SAAoCI,IAApC,GAA6C,IAHnC,EAIVJ,SAAS,IAAIK,KAAb,GAAwBL,SAAxB,SAAqCK,KAArC,GAA+C,IAJrC,EAKVH,QAAQ,GAAMF,SAAN,kBAA8B,IAL5B,EAMV,CAAC,CAACG,MAAF,GAAcH,SAAd,eAAmC,IANzB,EAQTQ,MARS,CAQFC,OARE,EASTC,IATS,CASJ,GATI,EAUTC,IAVS,EAAZ;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEJ;AAAhB,KAAyBD,SAAzB;AAAoC,IAAA,GAAG,EAAEP,GAAzC;AAAA,cACGG,QAAQ,iBACP;AAAM,MAAA,SAAS,EAAKF,SAAL,gBAAf;AAAA,gBAA6CE;AAA7C;AAFJ,KADF;AAOD,CA5Bc,CAAf",
  "sourcesContent": [
    "import React from 'react';\nimport { IProps, HTMLDivProps } from '@uiw/utils';\nimport './style/index.less';\n\nexport interface DividerProps extends IProps, HTMLDivProps {\n  dashed?: boolean;\n  type?: 'horizontal' | 'vertical';\n  align?: 'left' | 'right' | 'center';\n}\n\nexport default React.forwardRef<HTMLDivElement, DividerProps>((props, ref) => {\n  const {\n    prefixCls = 'w-divider',\n    className,\n    children,\n    dashed = false,\n    type = 'horizontal',\n    align = 'center',\n    ...restProps\n  } = props;\n  const cls = [\n    className,\n    prefixCls,\n    prefixCls && type ? `${prefixCls}-${type}` : null,\n    prefixCls && align ? `${prefixCls}-${align}` : null,\n    children ? `${prefixCls}-with-text` : null,\n    !!dashed ? `${prefixCls}-dashed` : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  return (\n    <div className={cls} {...restProps} ref={ref}>\n      {children && (\n        <span className={`${prefixCls}-inner-text`}>{children}</span>\n      )}\n    </div>\n  );\n});\n"
  ]
}