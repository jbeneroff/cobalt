import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "className", "gutter", "justify", "align"];
import React from 'react';
import "./style/row.css";
import { jsx as _jsx } from "react/jsx-runtime";
export function Row(props) {
  if (props === void 0) {
    props = {};
  }

  var {
    prefixCls = 'w-row',
    className,
    gutter = 0,
    justify,
    align
  } = props,
      other = _objectWithoutPropertiesLoose(props, _excluded);

  var cls = [prefixCls, className, align ? prefixCls + "-align-" + align : null, justify ? prefixCls + "-justify-" + justify : null].filter(Boolean).join(' ').trim();
  var gutterStyl = !gutter ? {} : {
    paddingLeft: gutter / 2,
    paddingRight: gutter / 2
  };
  return /*#__PURE__*/_jsx("div", _extends({}, other, {
    className: cls,
    children: React.Children.toArray(props.children).map(child => {
      if (! /*#__PURE__*/React.isValidElement(child)) return child;
      return /*#__PURE__*/React.cloneElement(child, Object.assign({}, child.props, {
        style: _extends({}, child.props.style, gutterStyl)
      }));
    })
  }));
}
//# sourceMappingURL=Row.js.map