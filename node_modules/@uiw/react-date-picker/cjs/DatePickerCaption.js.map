{
  "version": 3,
  "sources": [
    "../src/DatePickerCaption.tsx"
  ],
  "names": [
    "classnames",
    "arg",
    "filter",
    "Boolean",
    "join",
    "trim",
    "DatePickerCaption",
    "props",
    "prefixCls",
    "className",
    "panelDate",
    "Date",
    "monthLabel",
    "onSelected",
    "noop",
    "todayButton",
    "other",
    "renderMonth",
    "month",
    "getMonth",
    "toDateString",
    "getFullYear"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAGA,SAASA,UAAT,GAA2D;AAAA,oCAApCC,GAAoC;AAApCA,IAAAA,GAAoC;AAAA;;AACzD,SAAO,UAAIA,GAAJ,EAASC,MAAT,CAAgBC,OAAhB,EAAyBC,IAAzB,CAA8B,GAA9B,EAAmCC,IAAnC,EAAP;AACD;;AAgBM,SAASC,iBAAT,CAA2BC,KAA3B,EAA0D;AAC/D,yBAQIA,KARJ,CACEC,SADF;AAAA,MACEA,SADF,iCACc,cADd;AAAA,MAEEC,SAFF,GAQIF,KARJ,CAEEE,SAFF;AAAA,yBAQIF,KARJ,CAGEG,SAHF;AAAA,MAGEA,SAHF,iCAGc,IAAIC,IAAJ,EAHd;AAAA,MAIEC,UAJF,GAQIL,KARJ,CAIEK,UAJF;AAAA,0BAQIL,KARJ,CAKEM,UALF;AAAA,MAKEA,UALF,kCAKeC,WALf;AAAA,MAMEC,WANF,GAQIR,KARJ,CAMEQ,WANF;AAAA,MAOKC,KAPL,6CAQIT,KARJ;AAUA,MAAMU,WAAW,GAAG,oBAAQ,YAAM;AAChC,QAAMC,KAAK,GAAGR,SAAS,CAACS,QAAV,EAAd;AACA,WAAQP,UAAU,IAAIA,UAAU,CAACM,KAAD,CAAzB,IAAqCA,KAAK,GAAG,CAApD;AACD,GAHmB,EAGjB,CAACR,SAAS,CAACU,YAAV,EAAD,EAA2BR,UAA3B,CAHiB,CAApB;AAIA,sBACE;AACE,IAAA,SAAS,EAAEZ,UAAU,CACnBQ,SAAS,aAAMA,SAAN,gBAA4B,IADlB,EAEnBC,SAFmB;AADvB,KAKMO,KALN;AAAA,4BAOE;AACE,MAAA,SAAS,EAAEhB,UAAU,CACnBQ,SAAS,aAAMA,SAAN,qBAAiC,IADvB,EAEnB,MAFmB,CADvB;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMK,UAAU,CAAC,MAAD,CAAhB;AAAA;AALX,MAPF,eAcE;AACE,MAAA,SAAS,EAAEb,UAAU,CACnBQ,SAAS,aAAMA,SAAN,qBAAiC,IADvB,EAEnB,OAFmB,CADvB;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMK,UAAU,CAAC,OAAD,CAAhB;AAAA,OALX;AAAA,gBAOGI;AAPH,MAdF,eAuBE;AACE,MAAA,SAAS,EAAEjB,UAAU,CACnBQ,SAAS,aAAMA,SAAN,qBAAiC,IADvB,EAEnB,MAFmB,CADvB;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMK,UAAU,CAAC,MAAD,CAAhB;AAAA,OALX;AAAA,gBAOGH,SAAS,CAAEW,WAAX;AAPH,MAvBF,EAgCGN,WAAW,iBACV;AACE,MAAA,SAAS,EAAEf,UAAU,CACnBQ,SAAS,aAAMA,SAAN,sBAAkC,IADxB,CADvB;AAIE,MAAA,OAAO,EAAE;AAAA,eAAMK,UAAU,CAAC,OAAD,CAAhB;AAAA,OAJX;AAKE,MAAA,KAAK,EAAEE;AALT,MAjCJ,eAyCE;AACE,MAAA,SAAS,EAAEf,UAAU,CACnBQ,SAAS,aAAMA,SAAN,qBAAiC,IADvB,EAEnB,MAFmB,CADvB;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMK,UAAU,CAAC,MAAD,CAAhB;AAAA;AALX,MAzCF;AAAA,KADF;AAmDD",
  "sourcesContent": [
    "import React, { useMemo } from 'react';\nimport { IProps, HTMLDivProps, noop } from '@uiw/utils';\nimport './style/caption.less';\n\nfunction classnames(...arg: (string | null | undefined)[]) {\n  return [...arg].filter(Boolean).join(' ').trim();\n}\n\nexport type DatePickerCaptionType =\n  | 'prev'\n  | 'month'\n  | 'year'\n  | 'today'\n  | 'next';\n\nexport interface DatePickerCaptionProps extends IProps, HTMLDivProps {\n  panelDate?: Date;\n  monthLabel?: React.ReactNode[];\n  todayButton?: string;\n  onSelected?: (captionType: DatePickerCaptionType) => void;\n}\n\nexport function DatePickerCaption(props: DatePickerCaptionProps) {\n  const {\n    prefixCls = 'w-datepicker',\n    className,\n    panelDate = new Date(),\n    monthLabel,\n    onSelected = noop,\n    todayButton,\n    ...other\n  } = props;\n\n  const renderMonth = useMemo(() => {\n    const month = panelDate.getMonth();\n    return (monthLabel && monthLabel[month]) || month + 1;\n  }, [panelDate.toDateString(), monthLabel]);\n  return (\n    <div\n      className={classnames(\n        prefixCls ? `${prefixCls}-caption` : null,\n        className,\n      )}\n      {...other}\n    >\n      <div\n        className={classnames(\n          prefixCls ? `${prefixCls}-caption-pane` : null,\n          'prev',\n        )}\n        onClick={() => onSelected('prev')}\n      />\n      <div\n        className={classnames(\n          prefixCls ? `${prefixCls}-caption-pane` : null,\n          'month',\n        )}\n        onClick={() => onSelected('month')}\n      >\n        {renderMonth}\n      </div>\n      <div\n        className={classnames(\n          prefixCls ? `${prefixCls}-caption-pane` : null,\n          'year',\n        )}\n        onClick={() => onSelected('year')}\n      >\n        {panelDate!.getFullYear()}\n      </div>\n      {todayButton && (\n        <div\n          className={classnames(\n            prefixCls ? `${prefixCls}-caption-today` : null,\n          )}\n          onClick={() => onSelected('today')}\n          title={todayButton}\n        />\n      )}\n      <div\n        className={classnames(\n          prefixCls ? `${prefixCls}-caption-pane` : null,\n          'next',\n        )}\n        onClick={() => onSelected('next')}\n      />\n    </div>\n  );\n}\n"
  ]
}