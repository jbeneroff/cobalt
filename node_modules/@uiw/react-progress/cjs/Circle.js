"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _utils = require("./utils");

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["prefixCls", "style", "type", "className", "showText", "percent", "format", "strokeWidth", "width", "status"];

var Circle = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2["default"])(Circle, _React$Component);

  var _super = (0, _createSuper2["default"])(Circle);

  function Circle() {
    (0, _classCallCheck2["default"])(this, Circle);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(Circle, [{
    key: "relativeStrokeWidth",
    value: function relativeStrokeWidth(type, elm) {
      var _this$props = this.props,
          strokeWidth = _this$props.strokeWidth,
          percent = _this$props.percent;

      if (elm && elm.parentNode) {
        var _getBoundingClientRec = elm.parentNode.getBoundingClientRect(),
            width = _getBoundingClientRec.width;

        var _strokeWidth = (strokeWidth / width * 100).toFixed(1);

        var radius = parseInt((50 - parseFloat(_strokeWidth) / 2).toString(), 10);
        elm.setAttribute('stroke-width', _strokeWidth);
        elm.setAttribute('d', "M 50 50 m 0 -".concat(radius, " a ").concat(radius, " ").concat(radius, " 0 1 1 0 ").concat(radius * 2, " a ").concat(radius, " ").concat(radius, " 0 1 1 0 -").concat(radius * 2));

        if (type === 'track') {
          // 计算周长
          var perimeter = 2 * Math.PI * radius;
          elm.setAttribute('style', "stroke-dasharray:".concat(perimeter, "px,").concat(perimeter, "px;stroke-dashoffset:").concat((1 - percent / 100) * perimeter, "px;transition: stroke-dashoffset 0.6s ease 0s, stroke 0.6s ease;"));
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          style = _this$props2.style,
          type = _this$props2.type,
          className = _this$props2.className,
          showText = _this$props2.showText,
          percent = _this$props2.percent,
          format = _this$props2.format,
          strokeWidth = _this$props2.strokeWidth,
          width = _this$props2.width,
          status = _this$props2.status,
          resetProps = (0, _objectWithoutProperties2["default"])(_this$props2, _excluded);
      var cls = [prefixCls, className, "".concat(prefixCls, "-circle"), showText ? "".concat(prefixCls, "-show-text") : null, status ? "".concat(prefixCls, "-status-").concat(status) : null, parseInt(percent.toString(), 10) >= 100 ? "".concat(prefixCls, "-status-success") : null].filter(Boolean).join(' ').trim();
      var progressInfo;
      var progressStatus = parseInt(percent.toString(), 10) >= 100 && !('status' in this.props) ? 'success' : status;

      if (showText) {
        var percentView = "".concat(percent, "%");

        if (progressStatus === 'exception') {
          percentView = /*#__PURE__*/(0, _jsxRuntime.jsx)(_utils.IconProgress, {
            type: "close"
          });
        } else if (progressStatus === 'success') {
          percentView = /*#__PURE__*/(0, _jsxRuntime.jsx)(_utils.IconProgress, {
            type: "check"
          });
        }

        progressInfo = /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "".concat(prefixCls, "-text"),
          style: {
            fontSize: width * 0.16 + 6
          },
          children: format ? format(percent) : percentView
        });
      }

      return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
        className: cls,
        style: style
      }, resetProps), {}, {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("svg", {
          viewBox: "0 0 100 100",
          width: "".concat(width),
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
            ref: this.relativeStrokeWidth.bind(this, 'bg'),
            className: "".concat(prefixCls, "-trail"),
            fill: "none"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
            ref: this.relativeStrokeWidth.bind(this, 'track'),
            strokeLinecap: "round",
            className: "".concat(prefixCls, "-stroke"),
            fill: "none"
          })]
        }), progressInfo]
      }));
    }
  }]);
  return Circle;
}(_react["default"].Component);

exports["default"] = Circle;
(0, _defineProperty2["default"])(Circle, "defaultProps", {
  prefixCls: 'w-progress',
  showText: true,
  percent: 0,
  // 百分比（必填）
  width: 126,
  // 圆圈进度条画布宽度
  strokeWidth: 6 // 进度条大小设置

});
module.exports = exports.default;
//# sourceMappingURL=Circle.js.map