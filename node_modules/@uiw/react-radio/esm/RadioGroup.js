import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "className", "name", "value", "onChange", "children"];
import React from 'react';
import "./style/group.css";
import { jsx as _jsx } from "react/jsx-runtime";
export default /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    prefixCls = 'w-radio-group',
    className,
    name,
    value,
    onChange,
    children
  } = props,
      other = _objectWithoutPropertiesLoose(props, _excluded);

  return /*#__PURE__*/_jsx("div", _extends({}, other, {
    ref: ref,
    className: [prefixCls, className].filter(Boolean).join(' ').trim(),
    children: React.Children.toArray(children).map(child => {
      if (!child) return;
      if (! /*#__PURE__*/React.isValidElement(child)) return child;
      return /*#__PURE__*/React.cloneElement(child, _extends({}, child.props || {}, {
        checked: child.props.value === value,
        name,
        onChange
      }));
    })
  }));
});
//# sourceMappingURL=RadioGroup.js.map