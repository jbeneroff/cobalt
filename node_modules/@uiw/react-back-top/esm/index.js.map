{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useState",
    "useEffect",
    "getScrollPercent",
    "getScrollTop",
    "scrollToAnimate",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "content",
    "children",
    "offsetTop",
    "fixed",
    "speed",
    "showBelow",
    "clickable",
    "other",
    "topShowBelow",
    "percent",
    "setPercent",
    "current",
    "setCurrent",
    "visible",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "window",
    "addEventListener",
    "onScroll",
    "removeEventListener",
    "scrollToTop"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,gBAAT,EAA2BC,YAA3B,EAAyCC,eAAzC,QAAgE,SAAhE;AACA;;AAmBA,4BAAeL,KAAK,CAACM,UAAN,CAA+C,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5E,MAAM;AACJC,IAAAA,SAAS,GAAG,YADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,SAAS,GAAG,CALR;AAMJC,IAAAA,KAAK,GAAG,IANJ;AAOJC,IAAAA,KAAK,GAAG,GAPJ;AAQJC,IAAAA,SAAS,GAAG,CARR;AASJC,IAAAA,SAAS,GAAG;AATR,MAWFV,KAXJ;AAAA,MAUKW,KAVL,iCAWIX,KAXJ;;AAYA,MAAMY,YAAY,GAAG,CAACL,KAAD,GAAS,CAAT,GAAaE,SAAS,IAAI,CAA/C;AACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,CAAD,CAAtC;AACA,MAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,CAAD,CAAtC;AACA,MAAMuB,OAAO,GAAGJ,OAAO,IAAID,YAA3B;AACA,MAAMM,GAAG,GAAG,CACVhB,SADU,EAEVC,SAFU,EAGV,CAACI,KAAD,GAAS,UAAT,GAAsB,IAHZ,EAIVU,OAAO,GAAMf,SAAN,aAAyB,IAJtB,EAKV,CAACe,OAAD,GAAcf,SAAd,aAAiC,IALvB,EAOTiB,MAPS,CAOFC,OAPE,EAQTC,IARS,CAQJ,GARI,EASTC,IATS,EAAZ;AAUA3B,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,MAAM,IAAIA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,QAAlC,CAAV;AACA,WAAO,YAAY;AACjBF,MAAAA,MAAM,IAAIA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,QAArC,CAAV;AACD,KAFD;AAGD,GALQ,CAAT;;AAMA,WAASA,QAAT,GAAoB;AAClBX,IAAAA,UAAU,CAAClB,gBAAgB,CAACU,SAAD,CAAjB,CAAV;AACAU,IAAAA,UAAU,CAACnB,YAAY,EAAb,CAAV;AACD;;AACD,WAAS8B,WAAT,GAAuB;AACrB,QACE,OAAOrB,SAAP,KAAqB,QAArB,IACA,OAAOE,KAAP,KAAiB,QADjB,IAEA,OAAOO,OAAP,KAAmB,QAHrB,EAIE;AACAjB,MAAAA,eAAe,CAACQ,SAAD,EAAYE,KAAZ,EAAmBO,OAAnB,CAAf;AACD;AACF;;AACD,sBACE;AACE,IAAA,OAAO,EAAE,MAAML,SAAS,IAAIiB,WAAW,EADzC;AAEE,IAAA,SAAS,EAAET;AAFb,KAGMP,KAHN;AAIE,IAAA,GAAG,EAAEV,GAJP;AAAA,eAMGG,OANH,EAOG,OAAOC,QAAP,KAAoB,UAApB,GACGA,QADH,GAEGA,QAAQ,CAAC;AAAEQ,MAAAA,OAAF;AAAWE,MAAAA,OAAX;AAAoBY,MAAAA,WAAW,EAAEA;AAAjC,KAAD,CATd;AAAA,KADF;AAaD,CA3Dc,CAAf",
  "sourcesContent": [
    "import React, { useState, useEffect } from 'react';\nimport { IProps, HTMLDivProps } from '@uiw/utils';\nimport { getScrollPercent, getScrollTop, scrollToAnimate } from './utils';\nimport './style/index.less';\n\nexport interface BackTopProps extends IProps, HTMLDivProps {\n  offsetTop?: number;\n  clickable?: boolean;\n  content?: JSX.Element | string;\n  fixed?: boolean;\n  /**\n   * 滚动距离多少时显示组件\n   */\n  showBelow?: number;\n  speed?: number;\n}\n\nexport interface IBackTopState {\n  percent: number;\n  current: number;\n}\n\nexport default React.forwardRef<HTMLDivElement, BackTopProps>((props, ref) => {\n  const {\n    prefixCls = 'w-back-top',\n    className,\n    content,\n    children,\n    offsetTop = 0,\n    fixed = true,\n    speed = 100,\n    showBelow = 1,\n    clickable = true,\n    ...other\n  } = props;\n  const topShowBelow = !fixed ? 0 : showBelow || 0;\n  const [percent, setPercent] = useState(0);\n  const [current, setCurrent] = useState(0);\n  const visible = percent >= topShowBelow;\n  const cls = [\n    prefixCls,\n    className,\n    !fixed ? 'no-fixed' : null,\n    visible ? `${prefixCls}-show` : null,\n    !visible ? `${prefixCls}-hide` : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  useEffect(() => {\n    window && window.addEventListener('scroll', onScroll);\n    return function () {\n      window && window.removeEventListener('scroll', onScroll);\n    };\n  });\n  function onScroll() {\n    setPercent(getScrollPercent(offsetTop));\n    setCurrent(getScrollTop());\n  }\n  function scrollToTop() {\n    if (\n      typeof offsetTop === 'number' &&\n      typeof speed === 'number' &&\n      typeof current === 'number'\n    ) {\n      scrollToAnimate(offsetTop, speed, current);\n    }\n  }\n  return (\n    <div\n      onClick={() => clickable && scrollToTop()}\n      className={cls}\n      {...other}\n      ref={ref}\n    >\n      {content}\n      {typeof children !== 'function'\n        ? children\n        : children({ percent, current, scrollToTop: scrollToTop })}\n    </div>\n  );\n});\n"
  ]
}