{
  "version": 3,
  "sources": [
    "../src/Collapse.tsx"
  ],
  "names": [
    "React",
    "useState",
    "useMemo",
    "Panel",
    "toArray",
    "activeKey",
    "currentActiveKey",
    "Array",
    "isArray",
    "InternalCollapse",
    "props",
    "ref",
    "prefixCls",
    "className",
    "children",
    "accordion",
    "bordered",
    "showArrow",
    "propsActiveKey",
    "onChange",
    "resetProps",
    "setActiveKey",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "onItemClick",
    "key",
    "keys",
    "index",
    "indexOf",
    "isActive",
    "splice",
    "push",
    "Children",
    "map",
    "child",
    "String",
    "disabled",
    "childProps",
    "cloneElement",
    "Collapse",
    "forwardRef"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React, { useState, useMemo } from 'react';\nimport { IProps, HTMLDivProps } from '@uiw/utils';\nimport Panel from './Panel';\nimport './style/index.less';\n\nexport interface CollapseProps extends IProps, Omit<HTMLDivProps, 'onChange'> {\n  accordion?: boolean;\n  activeKey?: string | string[];\n  bordered?: boolean;\n  showArrow?: boolean;\n  onChange?: (activeKey: string[]) => void;\n}\n\nexport interface CollapseState {\n  activeKey: string[];\n}\n\nfunction toArray(activeKey: CollapseProps['activeKey']) {\n  let currentActiveKey = activeKey;\n  if (!Array.isArray(currentActiveKey)) {\n    currentActiveKey = currentActiveKey ? [currentActiveKey] : [];\n  }\n  return currentActiveKey;\n}\n\nfunction InternalCollapse(\n  props: CollapseProps,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    prefixCls = 'w-collapse',\n    className,\n    children,\n    accordion = false,\n    bordered,\n    showArrow = true,\n    activeKey: propsActiveKey,\n    onChange,\n    ...resetProps\n  } = props;\n  const [activeKey, setActiveKey] = useState(toArray(propsActiveKey));\n  const cls = [prefixCls, className, bordered ? 'w-noborder' : null]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  function onItemClick(key: string) {\n    let keys = activeKey;\n    if (accordion) {\n      keys = keys[0] === key ? [] : [key];\n    } else {\n      keys = [...keys];\n      const index = keys.indexOf(key);\n      const isActive = index > -1;\n      if (isActive) {\n        keys.splice(index, 1);\n      } else {\n        keys.push(key);\n      }\n    }\n    setActiveKey(keys);\n  }\n  useMemo(() => {\n    if (propsActiveKey !== activeKey) {\n      setActiveKey(toArray(propsActiveKey));\n    }\n  }, [propsActiveKey]);\n  useMemo(() => {\n    if (propsActiveKey !== activeKey) {\n      onChange && onChange(activeKey);\n    }\n  }, [activeKey, propsActiveKey]);\n  return (\n    <div className={cls} {...resetProps} ref={ref}>\n      {React.Children.map(children, (child: any, index) => {\n        // 如果没有密钥提供，请使用面板顺序作为默认密钥\n        const key = child.key || String(index);\n        const { disabled } = child.props;\n        let isActive = false;\n        if (accordion) {\n          // 手风琴模式下默认选择第一个\n          isActive = activeKey[0] === key;\n        } else {\n          isActive = activeKey.indexOf(key) > -1;\n        }\n        const childProps = {\n          prefixCls,\n          isActive,\n          disabled,\n          showArrow,\n          onItemClick: disabled ? () => {} : () => onItemClick(key),\n          ...child.props,\n        };\n        return React.cloneElement(child, childProps);\n      })}\n    </div>\n  );\n}\n\nconst Collapse = React.forwardRef<HTMLDivElement, CollapseProps>(\n  InternalCollapse,\n);\ntype Collapse = typeof Collapse & {\n  Panel: typeof Panel;\n};\n\n(Collapse as Collapse).Panel = Panel;\n\nexport default Collapse as Collapse;\n"
  ]
}