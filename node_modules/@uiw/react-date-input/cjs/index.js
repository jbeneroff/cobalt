"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = DateInput;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _reactInput = _interopRequireDefault(require("@uiw/react-input"));

var _reactPopover = _interopRequireDefault(require("@uiw/react-popover"));

var _reactDatePicker = _interopRequireDefault(require("@uiw/react-date-picker"));

var _reactIcon = _interopRequireDefault(require("@uiw/react-icon"));

var _formatter = _interopRequireDefault(require("@uiw/formatter"));

var _jsxRuntime = require("react/jsx-runtime");

var _excluded = ["prefixCls", "className", "popoverProps", "datePickerProps", "allowClear", "format", "onChange"];

function DateInput(props) {
  var _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'w-dateinput' : _props$prefixCls,
      className = props.className,
      popoverProps = props.popoverProps,
      datePickerProps = props.datePickerProps,
      _props$allowClear = props.allowClear,
      allowClear = _props$allowClear === void 0 ? true : _props$allowClear,
      _props$format = props.format,
      format = _props$format === void 0 ? 'YYYY/MM/DD' : _props$format,
      onChange = props.onChange,
      inputProps = (0, _objectWithoutProperties2["default"])(props, _excluded);

  var _useState = (0, _react.useState)(props.value),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      date = _useState2[0],
      setDate = _useState2[1];

  var value = date || '';
  inputProps.value = typeof value === 'string' ? value : (0, _formatter["default"])(format, value);
  (0, _react.useEffect)(function () {
    if (props.value !== date) {
      setDate(props.value);
    }
  }, [props.value]);

  function handleChange(cdate) {
    setDate(cdate);
    onChange && onChange(cdate);
  }

  if (allowClear && inputProps.value) {
    inputProps.addonAfter = /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactIcon["default"], {
      className: "".concat(prefixCls, "-close-btn"),
      onClick: function onClick() {
        return handleChange(undefined);
      },
      type: "close"
    });
  }

  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactPopover["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    trigger: "focus",
    placement: "bottomLeft",
    autoAdjustOverflow: true
  }, popoverProps), {}, {
    content: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactDatePicker["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
      date: value && new Date(value) || undefined,
      className: "".concat(prefixCls, "-popover")
    }, datePickerProps), {}, {
      onChange: function onChange(selectedDate) {
        return handleChange(selectedDate);
      }
    })),
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactInput["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
      placeholder: "\u8BF7\u9009\u62E9\u65E5\u671F",
      readOnly: true
    }, inputProps), {}, {
      className: [prefixCls, className].filter(Boolean).join(' ').trim()
    }))
  }));
}

module.exports = exports.default;
//# sourceMappingURL=index.js.map