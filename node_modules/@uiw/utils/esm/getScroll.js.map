{
  "version": 3,
  "sources": [
    "../src/getScroll.ts"
  ],
  "names": [
    "getScroll",
    "target",
    "top",
    "window",
    "prop",
    "method",
    "isWindow",
    "ret",
    "document",
    "documentElement"
  ],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAAT,CAAmBC,MAAnB,EAAwDC,GAAxD,EAAuE;AAC5E,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAO,CAAP;AACD;;AAED,MAAMC,IAAI,GAAGF,GAAG,GAAG,aAAH,GAAmB,aAAnC;AACA,MAAMG,MAAM,GAAGH,GAAG,GAAG,WAAH,GAAiB,YAAnC;AACA,MAAMI,QAAiB,GAAGL,MAAM,KAAKE,MAArC;AAEA,MAAII,GAAG,GAAGD,QAAQ,GACbL,MAAD,CAAmBG,IAAnB,CADc,GAEbH,MAAD,CAAwBI,MAAxB,CAFJ;;AAGA,MAAIC,QAAQ,IAAI,OAAOC,GAAP,KAAe,QAA/B,EAAyC;AACvCA,IAAAA,GAAG,GAAGC,QAAQ,CAACC,eAAT,CAAyBJ,MAAzB,CAAN;AACD;;AAED,SAAOE,GAAP;AACD",
  "sourcesContent": [
    "/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} top `true` or `false`\n * @returns {number} amount of scrolled pixels\n */\nexport function getScroll(target: HTMLElement | Window | null, top?: boolean) {\n  if (typeof window === 'undefined') {\n    return 0;\n  }\n\n  const prop = top ? 'pageYOffset' : 'pageXOffset';\n  const method = top ? 'scrollTop' : 'scrollLeft';\n  const isWindow: boolean = target === window;\n\n  let ret = isWindow\n    ? (target as Window)[prop]\n    : (target as HTMLElement)[method];\n  if (isWindow && typeof ret !== 'number') {\n    ret = document.documentElement[method];\n  }\n\n  return ret;\n}\n"
  ]
}