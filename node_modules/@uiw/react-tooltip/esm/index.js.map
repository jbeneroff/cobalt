{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "OverlayTrigger",
    "props",
    "prefixCls",
    "className",
    "placement",
    "isOpen",
    "trigger",
    "delay",
    "usePortal",
    "visibleArrow",
    "onVisibleChange",
    "other",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "content",
    "children"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAEO,4BAFP;AAIA;;;AAOA,gBAAe,UAACC,KAAD,EAA8B;AAAA,MAA7BA,KAA6B;AAA7BA,IAAAA,KAA6B,GAAP,EAAO;AAAA;;AAC3C,MAAM;AACJC,IAAAA,SAAS,GAAG,WADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,SAAS,GAAG,KAHR;AAIJC,IAAAA,MAAM,GAAG,KAJL;AAKJC,IAAAA,OALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA,SAAS,GAAG,IAPR;AAQJC,IAAAA,YAAY,GAAG,IARX;AASJC,IAAAA;AATI,MAWFT,KAXJ;AAAA,MAUKU,KAVL,iCAWIV,KAXJ;;AAYA,MAAMW,GAAG,GAAG,CAACV,SAAD,EAAYC,SAAZ,EAAuB,CAACM,YAAD,GAAgB,UAAhB,GAA6B,IAApD,EACTI,MADS,CACFC,OADE,EAETC,IAFS,CAEJ,GAFI,EAGTC,IAHS,EAAZ;AAIA,sBACE,KAAC,cAAD;AACE,IAAA,SAAS,EAAER,SADb;AAEE,IAAA,MAAM,EAAEH,MAFV;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,eAAe,EAAEG,eALnB;AAME,IAAA,SAAS,EAAEN;AANb,KAOMO,KAPN;AAQE,IAAA,OAAO,eACL;AAAK,MAAA,SAAS,EAAEC,GAAhB;AAAA,iBACGH,YAAY,iBAAI;AAAK,QAAA,SAAS,EAAKP,SAAL;AAAd,QADnB,eAEE;AAAK,QAAA,SAAS,EAAKA,SAAL,WAAd;AAAA,kBAAuCD,KAAK,CAACgB;AAA7C,QAFF;AAAA,MATJ;AAAA,cAeG,OAAOhB,KAAK,CAACiB,QAAb,KAA0B,QAA1B,GACCjB,KAAK,CAACiB,QADP,gBAGC;AAAA,gBAAOjB,KAAK,CAACiB;AAAb;AAlBJ,KADF;AAuBD,CAxCD",
  "sourcesContent": [
    "import React from 'react';\nimport OverlayTrigger, {\n  OverlayTriggerProps,\n} from '@uiw/react-overlay-trigger';\nimport { IProps } from '@uiw/utils';\nimport './style/index.less';\n\nexport interface TooltipProps extends IProps, OverlayTriggerProps {\n  visibleArrow?: boolean;\n  content?: React.ReactNode;\n}\n\nexport default (props: TooltipProps = {}) => {\n  const {\n    prefixCls = 'w-tooltip',\n    className,\n    placement = 'top',\n    isOpen = false,\n    trigger,\n    delay,\n    usePortal = true,\n    visibleArrow = true,\n    onVisibleChange,\n    ...other\n  } = props;\n  const cls = [prefixCls, className, !visibleArrow ? 'no-arrow' : null]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  return (\n    <OverlayTrigger\n      usePortal={usePortal}\n      isOpen={isOpen}\n      trigger={trigger}\n      delay={delay}\n      onVisibleChange={onVisibleChange}\n      placement={placement}\n      {...other}\n      overlay={\n        <div className={cls}>\n          {visibleArrow && <div className={`${prefixCls}-arrow`} />}\n          <div className={`${prefixCls}-inner`}>{props.content}</div>\n        </div>\n      }\n    >\n      {typeof props.children === 'object' ? (\n        props.children\n      ) : (\n        <span>{props.children}</span>\n      )}\n    </OverlayTrigger>\n  );\n};\n"
  ]
}