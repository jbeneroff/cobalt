{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "title",
    "extra",
    "footer",
    "bordered",
    "noHover",
    "active",
    "bodyStyle",
    "bodyClassName",
    "children",
    "resetProps",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;;;;;4BAeeA,kBAAMC,UAAN,CAA4C,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACzE,yBAaID,KAbJ,CACEE,SADF;AAAA,MACEA,SADF,iCACc,QADd;AAAA,MAEEC,SAFF,GAaIH,KAbJ,CAEEG,SAFF;AAAA,MAGEC,KAHF,GAaIJ,KAbJ,CAGEI,KAHF;AAAA,MAIEC,KAJF,GAaIL,KAbJ,CAIEK,KAJF;AAAA,MAKEC,MALF,GAaIN,KAbJ,CAKEM,MALF;AAAA,wBAaIN,KAbJ,CAMEO,QANF;AAAA,MAMEA,QANF,gCAMa,IANb;AAAA,uBAaIP,KAbJ,CAOEQ,OAPF;AAAA,MAOEA,OAPF,+BAOY,KAPZ;AAAA,sBAaIR,KAbJ,CAQES,MARF;AAAA,MAQEA,MARF,8BAQW,KARX;AAAA,MASEC,SATF,GAaIV,KAbJ,CASEU,SATF;AAAA,MAUEC,aAVF,GAaIX,KAbJ,CAUEW,aAVF;AAAA,MAWEC,QAXF,GAaIZ,KAbJ,CAWEY,QAXF;AAAA,MAYKC,UAZL,6CAaIb,KAbJ;AAcA,MAAMc,GAAG,GAAG,oBACV;AAAA,WACE,CACEZ,SADF,EAEEC,SAFF,EAGEI,QAAQ,aAAML,SAAN,iBAA6B,IAHvC,EAIEM,OAAO,aAAMN,SAAN,iBAA6B,IAJtC,EAKEO,MAAM,GAAG,QAAH,GAAc,IALtB,EAOGM,MAPH,CAOUC,OAPV,EAQGC,IARH,CAQQ,GARR,EASGC,IATH,EADF;AAAA,GADU,EAYV,CAAChB,SAAD,EAAYC,SAAZ,EAAuBI,QAAvB,EAAiCC,OAAjC,CAZU,CAAZ;AAeA,sBACE,+FAASK,UAAT;AAAqB,IAAA,SAAS,EAAEC,GAAhC;AAAqC,IAAA,GAAG,EAAEb,GAA1C;AAAA,eACG,CAACG,KAAK,IAAIC,KAAV,kBACC;AAAK,MAAA,SAAS,YAAKH,SAAL,UAAd;AAAA,iBACGE,KAAK,iBAAI;AAAK,QAAA,SAAS,YAAKF,SAAL,gBAAd;AAAA,kBAA4CE;AAA5C,QADZ,EAEGC,KAAK,iBAAI;AAAK,QAAA,SAAS,YAAKH,SAAL,WAAd;AAAA,kBAAuCG;AAAvC,QAFZ;AAAA,MAFJ,EAOGO,QAAQ,iBACP;AACE,MAAA,SAAS,EAAE,WAAIV,SAAJ,YAAsBS,aAAtB,EACRI,MADQ,CACDC,OADC,EAERC,IAFQ,CAEH,GAFG,EAGRC,IAHQ,EADb;AAKE,MAAA,KAAK,EAAER,SALT;AAAA,gBAOGE;AAPH,MARJ,EAkBGN,MAAM,iBAAI;AAAK,MAAA,SAAS,YAAKJ,SAAL,YAAd;AAAA,gBAAwCI;AAAxC,MAlBb;AAAA,KADF;AAsBD,CApDc,C",
  "sourcesContent": [
    "import React, { useMemo } from 'react';\nimport { IProps, HTMLDivProps } from '@uiw/utils';\nimport './style/index.less';\n\nexport interface CardProps extends IProps, Omit<HTMLDivProps, 'title'> {\n  active?: boolean;\n  bordered?: boolean;\n  bodyStyle?: React.CSSProperties;\n  bodyClassName?: string;\n  title?: React.ReactNode;\n  noHover?: boolean;\n  extra?: React.ReactNode;\n  footer?: React.ReactNode;\n}\n\nexport default React.forwardRef<HTMLDivElement, CardProps>((props, ref) => {\n  const {\n    prefixCls = 'w-card',\n    className,\n    title,\n    extra,\n    footer,\n    bordered = true,\n    noHover = false,\n    active = false,\n    bodyStyle,\n    bodyClassName,\n    children,\n    ...resetProps\n  } = props;\n  const cls = useMemo(\n    () =>\n      [\n        prefixCls,\n        className,\n        bordered ? `${prefixCls}-bordered` : null,\n        noHover ? `${prefixCls}-no-hover` : null,\n        active ? 'active' : null,\n      ]\n        .filter(Boolean)\n        .join(' ')\n        .trim(),\n    [prefixCls, className, bordered, noHover],\n  );\n\n  return (\n    <div {...resetProps} className={cls} ref={ref}>\n      {(title || extra) && (\n        <div className={`${prefixCls}-head`}>\n          {title && <div className={`${prefixCls}-head-title`}>{title}</div>}\n          {extra && <div className={`${prefixCls}-extra`}>{extra}</div>}\n        </div>\n      )}\n      {children && (\n        <div\n          className={[`${prefixCls}-body`, bodyClassName]\n            .filter(Boolean)\n            .join(' ')\n            .trim()}\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n      )}\n      {footer && <div className={`${prefixCls}-footer`}>{footer}</div>}\n    </div>\n  );\n});\n"
  ]
}