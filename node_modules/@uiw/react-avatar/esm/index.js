import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "shape", "size", "className", "src", "alt", "icon", "onError"];
import React from 'react';
import Icon from '@uiw/react-icon';
import { noop } from '@uiw/utils';
import "./style/index.css";
import { useState } from 'react';
import { useEffect } from 'react';
import { jsx as _jsx } from "react/jsx-runtime";
export default /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    prefixCls = 'w-avatar',
    shape = 'circle',
    size = 'default',
    className,
    src,
    alt,
    icon,
    onError: _onError = noop
  } = props,
      resetProps = _objectWithoutPropertiesLoose(props, _excluded);

  var children = props.children;
  var [isImgExist, setIsImgExist] = useState(true);
  var cls = [prefixCls, className, size ? prefixCls + "-" + size : null, shape ? prefixCls + "-" + shape : null, src ? prefixCls + "-image" : null].filter(Boolean).join(' ').trim();
  useEffect(() => {
    setIsImgExist(true);
  }, [props.src]);

  if (isImgExist && src) {
    children = /*#__PURE__*/_jsx("img", {
      src: src,
      alt: alt,
      onError: evn => {
        var errorFlag = _onError ? _onError(evn) : undefined;

        if (errorFlag !== false) {
          setIsImgExist(false);
        }
      }
    });
  } else if (icon && typeof icon === 'string') {
    children = /*#__PURE__*/_jsx(Icon, {
      type: icon
    });
  } else if (icon && /*#__PURE__*/React.isValidElement(icon)) {
    children = icon;
  }

  return /*#__PURE__*/_jsx("span", _extends({}, resetProps, {
    className: cls,
    ref: ref,
    children: children
  }));
});
//# sourceMappingURL=index.js.map