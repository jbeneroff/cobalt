{
  "version": 3,
  "sources": [
    "../src/utils.ts"
  ],
  "names": [
    "canUseDOM",
    "window",
    "document",
    "createElement",
    "fallback",
    "context",
    "node",
    "parentNode",
    "isDOM",
    "item",
    "HTMLElement",
    "nodeType",
    "nodeName",
    "contains",
    "compareDocumentPosition"
  ],
  "mappings": "AAAA,IAAMA,SAAS,GAAG,CAAC,EACjB,OAAOC,MAAP,KAAkB,WAAlB,IACAA,MAAM,CAACC,QADP,IAEAD,MAAM,CAACC,QAAP,CAAgBC,aAHC,CAAnB;;AAMA,SAASC,QAAT,CAAkBC,OAAlB,EAAwCC,IAAxC,EAA2D;AACzD,MAAIA,IAAJ,EAAU;AACR,OAAG;AACD,UAAIA,IAAI,KAAKD,OAAb,EAAsB,OAAO,IAAP;AACvB,KAFD,QAEUC,IAAI,GAAGA,IAAI,CAACC,UAFtB;AAGD;;AAED,SAAO,KAAP;AACD;;AAED,SAASC,KAAT,CAAeC,IAAf,EAA2B;AACzB,SAAO,OAAOC,WAAP,KAAuB,UAAvB,GACHD,IAAI,YAAYC,WADb,GAEHD,IAAI,IACF,OAAOA,IAAP,KAAgB,QADlB,IAEEA,IAAI,CAACE,QAAL,KAAkB,CAFpB,IAGE,OAAOF,IAAI,CAACG,QAAZ,KAAyB,QAL/B;AAMD;;AAED,IAAMC,QAAQ,GAAG,CAAC,MAAM;AACtB;AACA;AACA,SAAOb,SAAS,GACZ,UAAUK,OAAV,EAAgCC,IAAhC,EAAmD;AACjD,QACED,OAAO,IACPA,OAAO,CAACQ,QADR,IAEA,OAAOR,OAAO,CAACQ,QAAf,KAA4B,UAF5B,IAGAL,KAAK,CAACF,IAAD,CAJP,EAKE;AACA,aAAOD,OAAO,CAACQ,QAAR,CAAiBP,IAAjB,CAAP;AACD;;AACD,QAAID,OAAO,IAAIA,OAAO,CAACS,uBAAnB,IAA8CN,KAAK,CAACF,IAAD,CAAvD,EAA+D;AAC7D,aACED,OAAO,KAAKC,IAAZ,IAAoB,CAAC,EAAED,OAAO,CAACS,uBAAR,CAAgCR,IAAhC,KAAyC,EAA3C,CADvB;AAGD;;AACD,WAAOF,QAAQ,CAACC,OAAD,EAAUC,IAAV,CAAf;AACD,GAhBW,GAiBZF,QAjBJ;AAkBD,CArBgB,GAAjB;;AAuBA,eAAeS,QAAf",
  "sourcesContent": [
    "const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nfunction fallback(context: HTMLElement, node: HTMLElement) {\n  if (node) {\n    do {\n      if (node === context) return true;\n    } while ((node = node.parentNode as HTMLElement));\n  }\n\n  return false;\n}\n\nfunction isDOM(item: Node) {\n  return typeof HTMLElement === 'function'\n    ? item instanceof HTMLElement\n    : item &&\n        typeof item === 'object' &&\n        item.nodeType === 1 &&\n        typeof item.nodeName === 'string';\n}\n\nconst contains = (() => {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  return canUseDOM\n    ? function (context: HTMLElement, node: HTMLElement) {\n        if (\n          context &&\n          context.contains &&\n          typeof context.contains === 'function' &&\n          isDOM(node)\n        ) {\n          return context.contains(node);\n        }\n        if (context && context.compareDocumentPosition && isDOM(node)) {\n          return (\n            context === node || !!(context.compareDocumentPosition(node) && 16)\n          );\n        }\n        return fallback(context, node);\n      }\n    : fallback;\n})();\n\nexport default contains;\n"
  ]
}