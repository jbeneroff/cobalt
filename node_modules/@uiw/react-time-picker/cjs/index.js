"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {};
exports["default"] = TimePicker;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _reactPopover = _interopRequireDefault(require("@uiw/react-popover"));

var _reactInput = _interopRequireDefault(require("@uiw/react-input"));

var _reactButton = _interopRequireDefault(require("@uiw/react-button"));

var _formatter = _interopRequireDefault(require("@uiw/formatter"));

var _Time = require("./Time");

Object.keys(_Time).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _Time[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _Time[key];
    }
  });
});

var _jsxRuntime = require("react/jsx-runtime");

var _Panel = require("./Panel");

Object.keys(_Panel).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _Panel[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _Panel[key];
    }
  });
});
var _excluded = ["prefixCls", "className", "disabled", "value", "format", "popoverProps", "allowClear", "onChange", "disabledHours", "disabledMinutes", "disabledSeconds", "hideDisabled", "precision"];

function TimePicker(props) {
  var _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'w-timepicker' : _props$prefixCls,
      className = props.className,
      disabled = props.disabled,
      value = props.value,
      _props$format = props.format,
      format = _props$format === void 0 ? 'HH:mm:ss' : _props$format,
      popoverProps = props.popoverProps,
      _props$allowClear = props.allowClear,
      allowClear = _props$allowClear === void 0 ? true : _props$allowClear,
      onChange = props.onChange,
      disabledHours = props.disabledHours,
      disabledMinutes = props.disabledMinutes,
      disabledSeconds = props.disabledSeconds,
      hideDisabled = props.hideDisabled,
      precision = props.precision,
      inputProps = (0, _objectWithoutProperties2["default"])(props, _excluded);

  var _useState = (0, _react.useState)(props.value),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      date = _useState2[0],
      setDate = _useState2[1];

  (0, _react.useEffect)(function () {
    return setDate(props.value);
  }, [props.value]);
  var timeProps = {
    disabledHours: disabledHours,
    disabledMinutes: disabledMinutes,
    disabledSeconds: disabledSeconds,
    hideDisabled: hideDisabled,
    precision: precision
  };
  var inputValue = date ? (0, _formatter["default"])(format, date) : '';
  var datePickerTime = date || new Date();

  var _props = (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, inputProps), {}, {
    value: inputValue
  });

  if (allowClear && inputValue !== '' && !!inputValue) {
    _props.addonAfter = /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactButton["default"], {
      className: "".concat(prefixCls, "-close-btn"),
      icon: "close",
      disabled: props.disabled,
      onClick: function onClick() {
        setDate(undefined);
        onChange && onChange();
      },
      size: props.size,
      basic: true,
      type: "light"
    });
  }

  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactPopover["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
    trigger: "focus",
    placement: "bottomLeft",
    autoAdjustOverflow: true,
    visibleArrow: false
  }, popoverProps), {}, {
    content: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Time.TimePickerTime, (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
      className: "".concat(prefixCls, "-popover")
    }, timeProps), {}, {
      date: datePickerTime,
      onSelected: function onSelected(type, num, disableds, currentDate) {
        setDate(new Date(currentDate));
        var dataStr = currentDate ? (0, _formatter["default"])(format, currentDate) : '';
        onChange && onChange(dataStr, currentDate, type, num, disableds);
      }
    })),
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactInput["default"], (0, _objectSpread2["default"])((0, _objectSpread2["default"])({
      placeholder: "\u8BF7\u9009\u62E9\u65F6\u95F4",
      readOnly: true,
      disabled: disabled
    }, _props), {}, {
      className: ["".concat(prefixCls, "-input"), className].filter(Boolean).join(' ').trim()
    }))
  }));
}
//# sourceMappingURL=index.js.map