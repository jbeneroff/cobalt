{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useEffect",
    "useState",
    "noop",
    "Input",
    "InternalPinCode",
    "props",
    "ref",
    "prefixCls",
    "placeholder",
    "value",
    "autoFocus",
    "className",
    "size",
    "style",
    "disabled",
    "onChange",
    "onBlur",
    "onFocus",
    "otherProps",
    "input",
    "placehold",
    "setPlacehold",
    "values",
    "setValues",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "handleChange",
    "e",
    "idx",
    "val",
    "target",
    "charAt",
    "length",
    "arr",
    "Number",
    "currentTarget",
    "focus",
    "handleKeyDown",
    "key",
    "toLocaleLowerCase",
    "test",
    "handleBlur",
    "event",
    "handleFocus",
    "map",
    "inpProps",
    "min",
    "type",
    "inputMode",
    "autoComplete",
    "onKeyDown",
    "child",
    "instance",
    "forwardRef"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React, { useEffect, useState } from 'react';\nimport { IProps, noop } from '@uiw/utils';\nimport Input, { InputProps } from '@uiw/react-input';\nimport './style/input.less';\n\nexport interface PinCodeProps extends IProps {\n  value?: string[];\n  disabled?: boolean;\n  onChange?: (value: string[]) => void;\n  onBlur?: InputProps<{}>['onBlur'];\n  onFocus?: InputProps<{}>['onFocus'];\n  autoFocus?: boolean;\n  size?: InputProps<{}>['size'];\n  placeholder?: string;\n}\n\nfunction InternalPinCode(\n  props: PinCodeProps = {},\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    prefixCls = 'w-pin-code',\n    placeholder = 'â—‹',\n    value = [],\n    autoFocus,\n    className,\n    size = 'default',\n    style,\n    disabled,\n    onChange = noop,\n    onBlur = noop,\n    onFocus = noop,\n    ...otherProps\n  } = props;\n  const [input] = useState<{\n    [key: string]: HTMLInputElement;\n  }>({});\n  const [placehold, setPlacehold] = useState(placeholder);\n  const [values, setValues] = useState(value);\n  const cls = [\n    prefixCls,\n    className,\n    size ? `${prefixCls}-${size}` : null,\n    disabled ? 'disabled' : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>, idx: number) {\n    let val = e.target.value;\n    val = val.charAt(val.length - 1);\n    const arr = [...values];\n    if (Number(val) > -1 && val) {\n      e.currentTarget.value = val;\n      arr[idx] = val;\n      if (input[idx + 1]) {\n        input[idx + 1].focus();\n      }\n      setValues(arr);\n    } else if (!val) {\n      arr[idx] = '';\n      setValues(arr);\n    }\n  }\n  function handleKeyDown(\n    e: React.KeyboardEvent<HTMLInputElement>,\n    idx: number,\n  ) {\n    let val = e.currentTarget.value;\n    const key = e.key.toLocaleLowerCase();\n    if (!val && input[idx - 1] && /(backspace|delete)/.test(key)) {\n      input[idx - 1].focus();\n    }\n  }\n  useEffect(() => {\n    if (values !== value) {\n      onChange(values);\n    }\n  }, [values]);\n\n  function handleBlur(event: React.FocusEvent<HTMLInputElement>) {\n    setPlacehold(placeholder);\n    onBlur(event);\n  }\n  function handleFocus(event: React.FocusEvent<HTMLInputElement>) {\n    setPlacehold('');\n    onFocus(event);\n  }\n\n  return (\n    <div className={cls} style={style} {...otherProps} ref={ref}>\n      {[...values].map((val, key) => {\n        const inpProps: InputProps<{}> = {\n          min: 0,\n          type: 'text',\n          inputMode: 'numeric',\n          autoComplete: 'off',\n          value: val,\n          onChange: (e) => handleChange(e, key),\n          onKeyDown: (e) => handleKeyDown(e, key),\n          onBlur: (e) => handleBlur(e),\n          onFocus: (e) => handleFocus(e),\n          className: `${prefixCls}-inner`,\n          placeholder: placehold,\n          disabled,\n          size,\n        };\n        if (autoFocus && key === 0) {\n          inpProps.autoFocus = true;\n        }\n        const child = (\n          <Input\n            ref={(instance) => {\n              if (instance) {\n                input[key] = instance;\n              }\n            }}\n            {...inpProps}\n            key={key}\n          />\n        );\n        return child;\n      })}\n    </div>\n  );\n}\n\nexport default React.forwardRef<HTMLDivElement, PinCodeProps>(InternalPinCode);\n"
  ]
}