{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "props",
    "prefixCls",
    "className",
    "style",
    "placement",
    "size",
    "title",
    "footer",
    "icon",
    "isCloseButtonShown",
    "bodyProps",
    "timeout",
    "isOpen",
    "maskClosable",
    "overlayProps",
    "cls",
    "filter",
    "Boolean",
    "join",
    "trim",
    "bodyCls",
    "styl",
    "test",
    "footerView",
    "iconView",
    "titleView",
    "onClose",
    "children"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;eAee,oBAA6B;AAAA,MAA5BA,KAA4B,uEAAP,EAAO;AAC1C,yBAeIA,KAfJ,CACEC,SADF;AAAA,MACEA,SADF,iCACc,UADd;AAAA,MAEEC,SAFF,GAeIF,KAfJ,CAEEE,SAFF;AAAA,MAGEC,KAHF,GAeIH,KAfJ,CAGEG,KAHF;AAAA,yBAeIH,KAfJ,CAIEI,SAJF;AAAA,MAIEA,SAJF,iCAIc,OAJd;AAAA,oBAeIJ,KAfJ,CAKEK,IALF;AAAA,MAKEA,IALF,4BAKS,GALT;AAAA,MAMEC,KANF,GAeIN,KAfJ,CAMEM,KANF;AAAA,MAOEC,MAPF,GAeIP,KAfJ,CAOEO,MAPF;AAAA,MAQEC,IARF,GAeIR,KAfJ,CAQEQ,IARF;AAAA,8BAeIR,KAfJ,CASES,kBATF;AAAA,MASEA,kBATF,sCASuB,IATvB;AAAA,MAUEC,SAVF,GAeIV,KAfJ,CAUEU,SAVF;AAAA,uBAeIV,KAfJ,CAWEW,OAXF;AAAA,MAWEA,OAXF,+BAWY,GAXZ;AAAA,sBAeIX,KAfJ,CAYEY,MAZF;AAAA,MAYEA,MAZF,8BAYW,KAZX;AAAA,4BAeIZ,KAfJ,CAaEa,YAbF;AAAA,MAaEA,YAbF,oCAaiB,IAbjB;AAAA,MAcKC,YAdL,6CAeId,KAfJ;AAgBA,MAAMe,GAAG,GAAG,CAACb,SAAD,EAAYD,SAAZ,EAAuBG,SAAvB,EACTY,MADS,CACFC,OADE,EAETC,IAFS,CAEJ,GAFI,EAGTC,IAHS,EAAZ;AAIA,MAAMC,OAAO,GAAG,CACdV,SAAS,GAAGA,SAAS,CAACR,SAAb,GAAyB,IADpB,EAEdD,SAAS,aAAMA,SAAN,mBAA+B,IAF1B,EAIbe,MAJa,CAINC,OAJM,EAKbC,IALa,CAKR,GALQ,EAMbC,IANa,EAAhB;AAOA,MAAME,IAAI,qEACLlB,KADK,4CAEP,iBAAiBmB,IAAjB,CAAsBlB,SAAtB,IAAoC,QAApC,GAA+C,OAFxC,EAEkDC,IAFlD,EAAV;AAIA,MAAMkB,UAAU,GAAG,oBACjB;AAAA,WACEhB,MAAM,gBAAG;AAAK,MAAA,SAAS,YAAKN,SAAL,YAAd;AAAA,gBAAwCM;AAAxC,MAAH,GAA2D,IADnE;AAAA,GADiB,EAGjB,CAACA,MAAD,CAHiB,CAAnB;AAKA,MAAMiB,QAAQ,GAAG,oBAAQ;AAAA,WAAOhB,IAAI,gBAAG,qBAAC,qBAAD;AAAM,MAAA,IAAI,EAAEA;AAAZ,MAAH,GAA0B,IAArC;AAAA,GAAR,EAAoD,CAACA,IAAD,CAApD,CAAjB;AACA,MAAMiB,SAAS,GAAG,oBAAQ;AAAA,WAAOnB,KAAK,gBAAG;AAAA,gBAAKA;AAAL,MAAH,GAAsB,IAAlC;AAAA,GAAR,EAAiD,CAACA,KAAD,CAAjD,CAAlB;AACA,sBACE,qBAAC,wBAAD;AACE,IAAA,SAAS,EAAES,GADb;AAEE,IAAA,OAAO,EAAEJ,OAFX;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,YAAY,EAAEC;AAJhB,KAKMC,YALN;AAAA,2BAOE;AAAK,MAAA,SAAS,YAAKb,SAAL,aAAd;AAAwC,MAAA,KAAK,EAAEoB,IAA/C;AAAA,iBACG,CAACf,KAAK,IAAIE,IAAV,kBACC;AAAK,QAAA,SAAS,YAAKP,SAAL,YAAd;AAAA,mBACGuB,QADH,EAEGC,SAFH,EAGGnB,KAAK,IAAIG,kBAAT,iBACC,qBAAC,uBAAD;AAAQ,UAAA,KAAK,MAAb;AAAc,UAAA,OAAO,EAAET,KAAK,CAAC0B,OAA7B;AAAsC,UAAA,IAAI,EAAC,OAA3C;AAAmD,UAAA,IAAI,EAAC;AAAxD,UAJJ;AAAA,QAFJ,eAUE;AAAK,QAAA,SAAS,YAAKzB,SAAL,UAAd;AAAA,+BACE,8FAASS,SAAT;AAAoB,UAAA,SAAS,EAAEU,OAA/B;AAAA,oBACGpB,KAAK,CAAC2B;AADT;AADF,QAVF,EAeGJ,UAfH;AAAA;AAPF,KADF;AA2BD,C",
  "sourcesContent": [
    "import React, { useMemo } from 'react';\nimport Overlay, { OverlayProps } from '@uiw/react-overlay';\nimport Icon from '@uiw/react-icon';\nimport Button from '@uiw/react-button';\nimport { HTMLDivProps } from '@uiw/utils';\nimport './style/index.less';\n\nexport interface DrawerProps extends OverlayProps {\n  footer?: React.ReactNode;\n  icon?: JSX.Element | string | false | null;\n  title?: React.ReactNode;\n  bodyProps?: HTMLDivProps;\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n  size?: number;\n  isCloseButtonShown?: boolean;\n  onClose?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}\n\nexport default (props: DrawerProps = {}) => {\n  const {\n    prefixCls = 'w-drawer',\n    className,\n    style,\n    placement = 'right',\n    size = 260,\n    title,\n    footer,\n    icon,\n    isCloseButtonShown = true,\n    bodyProps,\n    timeout = 300,\n    isOpen = false,\n    maskClosable = true,\n    ...overlayProps\n  } = props;\n  const cls = [className, prefixCls, placement]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  const bodyCls = [\n    bodyProps ? bodyProps.className : null,\n    prefixCls ? `${prefixCls}-body-inner` : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  const styl = {\n    ...style,\n    [/^(top|bottom)$/.test(placement!) ? 'height' : 'width']: size,\n  };\n  const footerView = useMemo(\n    () =>\n      footer ? <div className={`${prefixCls}-footer`}>{footer}</div> : null,\n    [footer],\n  );\n  const iconView = useMemo(() => (icon ? <Icon type={icon} /> : null), [icon]);\n  const titleView = useMemo(() => (title ? <h4>{title}</h4> : null), [title]);\n  return (\n    <Overlay\n      className={cls}\n      timeout={timeout}\n      isOpen={isOpen}\n      maskClosable={maskClosable}\n      {...overlayProps}\n    >\n      <div className={`${prefixCls}-wrapper`} style={styl}>\n        {(title || icon) && (\n          <div className={`${prefixCls}-header`}>\n            {iconView}\n            {titleView}\n            {title && isCloseButtonShown && (\n              <Button basic onClick={props.onClose} icon=\"close\" type=\"light\" />\n            )}\n          </div>\n        )}\n        <div className={`${prefixCls}-body`}>\n          <div {...bodyProps} className={bodyCls}>\n            {props.children}\n          </div>\n        </div>\n        {footerView}\n      </div>\n    </Overlay>\n  );\n};\n"
  ]
}