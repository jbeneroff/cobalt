{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "DateInput",
    "props",
    "prefixCls",
    "className",
    "popoverProps",
    "datePickerProps",
    "allowClear",
    "format",
    "onChange",
    "inputProps",
    "value",
    "date",
    "setDate",
    "handleChange",
    "cdate",
    "addonAfter",
    "undefined",
    "Date",
    "selectedDate",
    "filter",
    "Boolean",
    "join",
    "trim"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAce,SAASA,SAAT,CAAsBC,KAAtB,EAAgD;AAC7D,yBASIA,KATJ,CACEC,SADF;AAAA,MACEA,SADF,iCACc,aADd;AAAA,MAEEC,SAFF,GASIF,KATJ,CAEEE,SAFF;AAAA,MAGEC,YAHF,GASIH,KATJ,CAGEG,YAHF;AAAA,MAIEC,eAJF,GASIJ,KATJ,CAIEI,eAJF;AAAA,0BASIJ,KATJ,CAKEK,UALF;AAAA,MAKEA,UALF,kCAKe,IALf;AAAA,sBASIL,KATJ,CAMEM,MANF;AAAA,MAMEA,MANF,8BAMW,YANX;AAAA,MAOEC,QAPF,GASIP,KATJ,CAOEO,QAPF;AAAA,MAQKC,UARL,6CASIR,KATJ;;AAUA,kBAAwB,qBAASA,KAAK,CAACS,KAAf,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMF,KAAK,GAAGC,IAAI,IAAI,EAAtB;AACAF,EAAAA,UAAU,CAACC,KAAX,GACE,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,2BAAUH,MAAV,EAAkBG,KAAlB,CADtC;AAGA,wBAAU,YAAM;AACd,QAAIT,KAAK,CAACS,KAAN,KAAgBC,IAApB,EAA0B;AACxBC,MAAAA,OAAO,CAACX,KAAK,CAACS,KAAP,CAAP;AACD;AACF,GAJD,EAIG,CAACT,KAAK,CAACS,KAAP,CAJH;;AAMA,WAASG,YAAT,CAAsBC,KAAtB,EAAoC;AAClCF,IAAAA,OAAO,CAACE,KAAD,CAAP;AACAN,IAAAA,QAAQ,IAAIA,QAAQ,CAACM,KAAD,CAApB;AACD;;AACD,MAAIR,UAAU,IAAIG,UAAU,CAACC,KAA7B,EAAoC;AAClCD,IAAAA,UAAU,CAACM,UAAX,gBACE,qBAAC,qBAAD;AACE,MAAA,SAAS,YAAKb,SAAL,eADX;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMW,YAAY,CAACG,SAAD,CAAlB;AAAA,OAFX;AAGE,MAAA,IAAI,EAAC;AAHP,MADF;AAOD;;AACD,sBACE,qBAAC,wBAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,kBAAkB;AAHpB,KAIMZ,YAJN;AAKE,IAAA,OAAO,eACL,qBAAC,2BAAD;AACE,MAAA,IAAI,EAAGM,KAAK,IAAI,IAAIO,IAAJ,CAASP,KAAT,CAAV,IAA8BM,SADtC;AAEE,MAAA,SAAS,YAAKd,SAAL;AAFX,OAGMG,eAHN;AAIE,MAAA,QAAQ,EAAE,kBAACa,YAAD;AAAA,eAAkBL,YAAY,CAACK,YAAD,CAA9B;AAAA;AAJZ,OANJ;AAAA,2BAcE,qBAAC,sBAAD;AACE,MAAA,WAAW,EAAC,gCADd;AAEE,MAAA,QAAQ;AAFV,OAGOT,UAHP;AAIE,MAAA,SAAS,EAAE,CAACP,SAAD,EAAYC,SAAZ,EAAuBgB,MAAvB,CAA8BC,OAA9B,EAAuCC,IAAvC,CAA4C,GAA5C,EAAiDC,IAAjD;AAJb;AAdF,KADF;AAuBD",
  "sourcesContent": [
    "import React, { useEffect, useState } from 'react';\nimport Input, { InputProps } from '@uiw/react-input';\nimport Popover, { PopoverProps } from '@uiw/react-popover';\nimport DatePicker, { DatePickerProps } from '@uiw/react-date-picker';\nimport Icon from '@uiw/react-icon';\nimport { IProps } from '@uiw/utils';\nimport formatter from '@uiw/formatter';\nimport './style/index.less';\n\nexport interface DateInputProps<T>\n  extends IProps,\n    Omit<InputProps<T>, 'onChange' | 'value'> {\n  popoverProps?: PopoverProps;\n  datePickerProps?: DatePickerProps;\n  value?: Date | string;\n  format?: string;\n  allowClear?: boolean;\n  onChange?: (selectedDate?: Date) => void;\n}\n\nexport default function DateInput<T>(props: DateInputProps<T>) {\n  const {\n    prefixCls = 'w-dateinput',\n    className,\n    popoverProps,\n    datePickerProps,\n    allowClear = true,\n    format = 'YYYY/MM/DD',\n    onChange,\n    ...inputProps\n  } = props;\n  const [date, setDate] = useState(props.value);\n\n  const value = date || '';\n  inputProps.value =\n    typeof value === 'string' ? value : formatter(format, value);\n\n  useEffect(() => {\n    if (props.value !== date) {\n      setDate(props.value);\n    }\n  }, [props.value]);\n\n  function handleChange(cdate?: Date) {\n    setDate(cdate);\n    onChange && onChange(cdate);\n  }\n  if (allowClear && inputProps.value) {\n    inputProps.addonAfter = (\n      <Icon\n        className={`${prefixCls}-close-btn`}\n        onClick={() => handleChange(undefined)}\n        type=\"close\"\n      />\n    );\n  }\n  return (\n    <Popover\n      trigger=\"focus\"\n      placement=\"bottomLeft\"\n      autoAdjustOverflow\n      {...popoverProps}\n      content={\n        <DatePicker\n          date={(value && new Date(value)) || undefined}\n          className={`${prefixCls}-popover`}\n          {...datePickerProps}\n          onChange={(selectedDate) => handleChange(selectedDate!)}\n        />\n      }\n    >\n      <Input\n        placeholder=\"请选择日期\"\n        readOnly\n        {...(inputProps as InputProps<string>)}\n        className={[prefixCls, className].filter(Boolean).join(' ').trim()}\n      />\n    </Popover>\n  );\n}\n"
  ]
}