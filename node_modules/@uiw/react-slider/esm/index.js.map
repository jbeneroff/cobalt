{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useEffect",
    "useState",
    "Dots",
    "Slider",
    "props",
    "prefixCls",
    "value",
    "min",
    "max",
    "dots",
    "step",
    "disabled",
    "progress",
    "tooltip",
    "className",
    "marks",
    "renderMarks",
    "vertical",
    "onChange",
    "other",
    "bar",
    "useRef",
    "slider",
    "indexBar",
    "startX",
    "curValue",
    "barWidth",
    "barOffsetLeft",
    "move",
    "arrValue",
    "setArrValue",
    "Array",
    "isArray",
    "onClick",
    "evn",
    "current",
    "undefined",
    "markOffset",
    "getBoundingClientRect",
    "vals",
    "getWidthToValue",
    "curr",
    "getRangeValue",
    "handleChange",
    "val",
    "newData",
    "val1",
    "val2",
    "half",
    "length",
    "width",
    "equal",
    "percent",
    "num",
    "numFloor",
    "Math",
    "floor",
    "onHandleBtnDown",
    "idx",
    "env",
    "window",
    "addEventListener",
    "onDragging",
    "onDragEnd",
    "valueToWidth",
    "barStyl",
    "getStyle",
    "style",
    "left",
    "right",
    "removeEventListener",
    "stepArray",
    "stepWidth",
    "result",
    "i",
    "push",
    "getValueToPercent",
    "leftValue",
    "rightValue",
    "getLabelValue",
    "label",
    "filter",
    "Boolean",
    "join",
    "trim",
    "backgroundColor",
    "map",
    "item",
    "lleftPostion",
    "stepValue",
    "mark"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React, { useEffect, useState } from 'react';\nimport { IProps, HTMLDivProps } from '@uiw/utils';\nimport Dots from './Dots';\nimport './style/index.less';\n\nexport type SliderMarks = {\n  style?: React.CSSProperties;\n  label?: React.ReactNode;\n};\n\nexport interface SliderProps extends IProps, Omit<HTMLDivProps, 'onChange'> {\n  value?: number | number[];\n  min?: number;\n  max?: number;\n  marks?: boolean | Record<number, SliderMarks>;\n  dots?: boolean;\n  range?: boolean;\n  vertical?: boolean;\n  step?: number;\n  disabled?: boolean;\n  tooltip?: boolean;\n  progress?: boolean | string;\n  renderMarks?: (value: number) => JSX.Element;\n  onChange?: (value: number | number[]) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nexport default function Slider(props: SliderProps) {\n  const {\n    prefixCls = 'w-slider',\n    value = 0,\n    min = 0,\n    max = 100,\n    dots = false,\n    step = 1,\n    disabled = false,\n    progress = true,\n    tooltip = false,\n    className,\n    marks,\n    renderMarks,\n    vertical,\n    onChange,\n    ...other\n  } = props;\n\n  const bar = React.useRef<HTMLDivElement>(null);\n  const slider = React.useRef<HTMLDivElement>(null);\n  const indexBar = React.useRef<number>();\n  const startX = React.useRef<number>();\n  const curValue = React.useRef<number | number[]>();\n  const barWidth = React.useRef<number>();\n  const barOffsetLeft = React.useRef<number>();\n  const move = React.useRef<boolean>();\n  const [arrValue, setArrValue] = useState(\n    Array.isArray(value) ? value : [value],\n  );\n\n  useEffect(() => setArrValue(Array.isArray(value) ? value : [value]), [value]);\n\n  other.onClick = (evn: React.MouseEvent<HTMLElement>) => {\n    if (move.current !== undefined) {\n      return;\n    }\n    const markOffset = slider.current!.getBoundingClientRect();\n    const vals = getWidthToValue(\n      evn[vertical ? 'clientY' : 'clientX'] - markOffset[vertical ? 'y' : 'x'],\n    );\n    const curr = getRangeValue(vals);\n    handleChange(curr);\n  };\n\n  function getRangeValue(val: number | number[]) {\n    if (!Array.isArray(value)) {\n      return Array.isArray(val) ? val : [val];\n    }\n    const newData = [...arrValue];\n    const val1 = newData[0];\n    const val2 = newData[1];\n    if ((val1 < val2 && val1 > val) || (val1 > val2 && val1 < val)) {\n      newData[0] = val as number;\n    }\n    if ((val1 < val2 && val2 < val) || (val1 > val2 && val2 > val)) {\n      newData[1] = val as number;\n    }\n\n    if (val1 > val && val2 < val) {\n      const half = val2 + (val1 - val2) / 2;\n      if (half >= val) {\n        newData[1] = val as number;\n      }\n      if (half < val) {\n        newData[0] = val as number;\n      }\n    }\n    if (val2 > val && val1 < val) {\n      const half = val1 + (val2 - val1) / 2;\n      if (half >= val) {\n        newData[0] = val as number;\n      }\n      if (half < val) {\n        newData[1] = val as number;\n      }\n    }\n    return newData;\n  }\n\n  function handleChange(val: number[]) {\n    setArrValue([...val]);\n    onChange && onChange(arrValue.length === 1 ? val[0] : val);\n  }\n\n  function getWidthToValue(width: number) {\n    const equal = (max - min) / step;\n    let percent = 0;\n    if (slider.current) {\n      percent =\n        (width / slider.current[vertical ? 'clientHeight' : 'clientWidth']) *\n        100;\n    }\n\n    if (percent <= 0) {\n      percent = 0;\n    }\n    if (percent >= 100) {\n      percent = 100;\n    }\n\n    const num = equal * (percent / 100) + 0.5;\n    const numFloor = Math.floor(num);\n    const vals = numFloor * step + min;\n    return vals;\n  }\n\n  function onHandleBtnDown(idx: number, env: React.MouseEvent<HTMLElement>) {\n    if (disabled) {\n      return;\n    }\n    indexBar.current = idx;\n    move.current = true;\n    startX.current = env[vertical ? 'clientY' : 'clientX'];\n    if (bar.current) {\n      barWidth.current = bar.current[vertical ? 'clientHeight' : 'clientWidth'];\n      barOffsetLeft.current =\n        bar.current[vertical ? 'offsetTop' : 'offsetLeft'];\n    }\n    const vals = [...arrValue];\n    if (Array.isArray(value)) {\n      barWidth.current =\n        (indexBar.current === 1 && vals[1] > vals[0]) ||\n        (indexBar.current !== 1 && vals[0] > vals[1])\n          ? barWidth.current! + barOffsetLeft.current!\n          : barOffsetLeft.current;\n    }\n    window.addEventListener('mousemove', onDragging);\n    window.addEventListener('mouseup', onDragEnd);\n  }\n  function onDragging(\n    env: MouseEvent | React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    if (!move.current) {\n      return;\n    }\n    const vals = [...arrValue];\n    const valueToWidth = getWidthToValue(\n      env[vertical ? 'clientY' : 'clientX'] -\n        startX.current! +\n        barWidth.current!,\n    );\n    if (valueToWidth !== curValue.current) {\n      vals[indexBar.current!] = valueToWidth;\n      const barStyl = getStyle(vals);\n      if (bar.current) {\n        bar.current.style[vertical ? 'top' : 'left'] = barStyl.left;\n        bar.current.style[vertical ? 'bottom' : 'right'] = barStyl.right;\n      }\n      handleChange(vals);\n      curValue.current = valueToWidth;\n    }\n  }\n  function onDragEnd() {\n    move.current = undefined;\n    window.removeEventListener('mousemove', onDragging, false);\n    window.removeEventListener('mouseup', onDragEnd, false);\n  }\n\n  const stepArray = () => {\n    const equal = (max - min) / step;\n    const stepWidth = (100 * step) / (max - min);\n    const result = [0];\n    for (let i = 1; i < equal; i += 1) {\n      result.push(i * stepWidth);\n    }\n    result.push(100);\n    return result;\n  };\n  function getValueToPercent(vals: number) {\n    return ((vals - min) * 100) / (max - min);\n  }\n\n  function getStyle(val?: number[]) {\n    val = val || arrValue;\n    const barStyl = { left: '0%', right: '100%' };\n    if (!Array.isArray(value)) {\n      barStyl.right = `${100 - getValueToPercent(val[0])}%`;\n    } else {\n      const leftValue = val[0] > val[1] ? val[1] : val[0];\n      const rightValue = val[0] > val[1] ? val[0] : val[1];\n      barStyl.left = `${getValueToPercent(leftValue)}%`;\n      barStyl.right = `${100 - getValueToPercent(rightValue)}%`;\n    }\n    return barStyl;\n  }\n\n  function getLabelValue(val: number) {\n    if (marks && marks !== true && marks[val] && marks[val].label) {\n      return marks[val].label;\n    } else if (\n      marks &&\n      marks !== true &&\n      marks[val] &&\n      typeof marks[val] === 'string'\n    ) {\n      return marks[val];\n    } else if (\n      renderMarks &&\n      typeof renderMarks === 'function' &&\n      renderMarks(val)\n    ) {\n      return renderMarks(val);\n    }\n    return val;\n  }\n\n  const barStyl = getStyle();\n  if (disabled) {\n    delete other.onClick;\n  }\n  return (\n    <div\n      ref={slider}\n      className={[\n        prefixCls,\n        className,\n        disabled ? 'disabled' : null,\n        marks ? `${prefixCls}-with-marks` : null,\n        vertical ? `${prefixCls}-vertical` : null,\n      ]\n        .filter(Boolean)\n        .join(' ')\n        .trim()}\n      {...other}\n    >\n      <div\n        ref={bar}\n        className={`${prefixCls}-bar`}\n        style={{\n          [vertical ? 'top' : 'left']: barStyl.left,\n          [vertical ? 'bottom' : 'right']: barStyl.right,\n          ...(progress !== true\n            ? { backgroundColor: progress || 'initial' }\n            : {}),\n        }}\n      />\n      {[...arrValue].map((item, idx) => {\n        const lleftPostion = getValueToPercent(item);\n        return (\n          <div\n            key={idx}\n            className={`${prefixCls}-handle`}\n            onMouseDown={(evn) => onHandleBtnDown(idx, evn)}\n            style={{ [vertical ? 'top' : 'left']: `${lleftPostion}%` }}\n          >\n            {(tooltip || tooltip === false) && (\n              <div\n                className={[`${prefixCls}-tooltip`, tooltip ? 'open' : null]\n                  .filter(Boolean)\n                  .join(' ')\n                  .trim()}\n              >\n                {getLabelValue(item)}\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {dots && (\n        <Dots\n          prefixCls={prefixCls}\n          min={min}\n          step={step}\n          marks={marks}\n          vertical={!!vertical}\n          data={stepArray()}\n          markRender={(stepValue, mark = {}) => {\n            if (!mark) {\n              return <div> {getLabelValue(stepValue)} </div>;\n            }\n            const other = typeof mark === 'object' ? mark : {};\n            delete other.label;\n            return <div {...other}> {getLabelValue(stepValue)} </div>;\n          }}\n        />\n      )}\n    </div>\n  );\n}\n"
  ]
}