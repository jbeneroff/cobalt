{
  "version": 3,
  "sources": [
    "../../src/util/getOuterSizes.ts"
  ],
  "names": [
    "getOuterSizes",
    "element",
    "rect",
    "getBoundingClientRect",
    "result",
    "width",
    "offsetWidth",
    "scrollWidth",
    "height",
    "offsetHeight",
    "scrollHeight"
  ],
  "mappings": "AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,aAAT,CAAuBC,OAAvB,EAAoD;AACjE,MAAIC,IAAI,GAAGD,OAAO,CAACE,qBAAR,EAAX,CADiE,CAEjE;AACA;AACA;AACA;;AACA,MAAMC,MAAa,GAAG;AACpBC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,WAAR,IAAuBL,OAAO,CAACM,WAA/B,IAA8CL,IAAI,CAACG,KAAnD,IAA4D,CAD/C;AAEpBG,IAAAA,MAAM,EAAEP,OAAO,CAACQ,YAAR,IAAwBR,OAAO,CAACS,YAAhC,IAAgDR,IAAI,CAACM,MAArD,IAA+D;AAFnD,GAAtB;AAIA,SAAOJ,MAAP;AACD",
  "sourcesContent": [
    "export type Sizes = {\n  width: number;\n  height: number;\n};\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element: HTMLElement): Sizes {\n  let rect = element.getBoundingClientRect();\n  // const window = element.ownerDocument.defaultView;\n  // const styles = window.getComputedStyle(element);\n  // const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  // const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result: Sizes = {\n    width: element.offsetWidth || element.scrollWidth || rect.width || 0,\n    height: element.offsetHeight || element.scrollHeight || rect.height || 0,\n  };\n  return result;\n}\n"
  ]
}