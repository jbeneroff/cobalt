{
  "version": 3,
  "sources": [
    "../src/RadioGroup.tsx"
  ],
  "names": [
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "name",
    "value",
    "onChange",
    "children",
    "other",
    "filter",
    "Boolean",
    "join",
    "trim",
    "Children",
    "toArray",
    "map",
    "child",
    "isValidElement",
    "cloneElement",
    "checked"
  ],
  "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA;;AAQA,4BAAeA,KAAK,CAACC,UAAN,CACb,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AACJC,IAAAA,SAAS,GAAG,eADR;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA;AANI,MAQFP,KARJ;AAAA,MAOKQ,KAPL,iCAQIR,KARJ;;AASA,sBACE,yBACMQ,KADN;AAEE,IAAA,GAAG,EAAEP,GAFP;AAGE,IAAA,SAAS,EAAE,CAACC,SAAD,EAAYC,SAAZ,EAAuBM,MAAvB,CAA8BC,OAA9B,EAAuCC,IAAvC,CAA4C,GAA5C,EAAiDC,IAAjD,EAHb;AAAA,cAKGd,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBP,QAAvB,EAAiCQ,GAAjC,CAAsCC,KAAD,IAAW;AAC/C,UAAI,CAACA,KAAL,EAAY;AACZ,UAAI,eAAClB,KAAK,CAACmB,cAAN,CAAqBD,KAArB,CAAL,EAAkC,OAAOA,KAAP;AAClC,0BAAOlB,KAAK,CAACoB,YAAN,CAAmBF,KAAnB,eACDA,KAAK,CAAChB,KAAN,IAAe,EADd,EAEF;AACDmB,QAAAA,OAAO,EAAEH,KAAK,CAAChB,KAAN,CAAYK,KAAZ,KAAsBA,KAD9B;AAEDD,QAAAA,IAFC;AAGDE,QAAAA;AAHC,OAFE,EAAP;AAQD,KAXA;AALH,KADF;AAoBD,CA/BY,CAAf",
  "sourcesContent": [
    "import React from 'react';\nimport { IProps, HTMLDivProps } from '@uiw/utils';\nimport { RadioProps } from './Radio';\nimport './style/group.less';\n\nexport interface RadioGroupProps extends IProps, HTMLDivProps {\n  name?: RadioProps['name'];\n  value?: RadioProps['value'];\n  onChange?: RadioProps['onChange'];\n}\n\nexport default React.forwardRef<HTMLDivElement, RadioGroupProps>(\n  (props, ref) => {\n    const {\n      prefixCls = 'w-radio-group',\n      className,\n      name,\n      value,\n      onChange,\n      children,\n      ...other\n    } = props;\n    return (\n      <div\n        {...other}\n        ref={ref}\n        className={[prefixCls, className].filter(Boolean).join(' ').trim()}\n      >\n        {React.Children.toArray(children).map((child) => {\n          if (!child) return;\n          if (!React.isValidElement(child)) return child;\n          return React.cloneElement(child, {\n            ...(child.props || {}),\n            ...{\n              checked: child.props.value === value,\n              name,\n              onChange,\n            },\n          });\n        })}\n      </div>\n    );\n  },\n);\n"
  ]
}